/*
 * Generated by gen_defines.py
 *
 * DTS input file:
 *   /home/kavin/zephyrproject/zephyr/samples/capsense2/build/zephyr/zephyr.dts.pre
 *
 * Directories with bindings:
 *   $ZEPHYR_BASE/dts/bindings
 *
 * Node dependency ordering (ordinal and path):
 *   0   /
 *   1   /aliases
 *   2   /bt_hci_silabs
 *   3   /chosen
 *   4   /hwinfo
 *   5   /memory@20000000
 *   6   /soc
 *   7   /soc/interrupt-controller@e000e100
 *   8   /soc/clock@50008000
 *   9   /soc/gpio@5003c000
 *   10  /soc/gpio@5003c000/gpio@5003c060
 *   11  /buttons
 *   12  /buttons/button_0
 *   13  /buttons/button_1
 *   14  /clocks
 *   15  /soc/lfxo@50020000
 *   16  /clocks/em4grpaclk
 *   17  /soc/hfxo@5a004000
 *   18  /soc/hfrcodpll@50010000
 *   19  /clocks/em01grpcclk
 *   20  /clocks/eusart0clk
 *   21  /clocks/sysclk
 *   22  /clocks/hclk
 *   23  /clocks/hclkdiv1024
 *   24  /clocks/hfrcodpllrt
 *   25  /clocks/hfxort
 *   26  /clocks/em01grpaclk
 *   27  /clocks/iadcclk
 *   28  /clocks/pclk
 *   29  /clocks/lspclk
 *   30  /clocks/em23grpaclk
 *   31  /clocks/pcnt0clk
 *   32  /clocks/sysrtcclk
 *   33  /clocks/systickclk
 *   34  /clocks/traceclk
 *   35  /clocks/vdac0clk
 *   36  /clocks/wdog0clk
 *   37  /clocks/wdog1clk
 *   38  /cpus
 *   39  /cpus/power-states
 *   40  /cpus/power-states/em1
 *   41  /cpus/power-states/em2
 *   42  /cpus/power-states/em3
 *   43  /cpus/cpu@0
 *   44  /soc/gpio@5003c000/gpio@5003c030
 *   45  /leds
 *   46  /leds/led_0
 *   47  /leds/led_1
 *   48  /soc/adc@59004000
 *   49  /soc/burtc@50064000
 *   50  /soc/clkin0@5003c46c
 *   51  /soc/dcdc@50094000
 *   52  /soc/dma@40040000
 *   53  /soc/eusart@500a0000
 *   54  /soc/eusart@5b010000
 *   55  /soc/fsrco@50018000
 *   56  /soc/hfrcoem23@5a000000
 *   57  /soc/lfrco@50024000
 *   58  /soc/semailbox@5c021000
 *   59  /soc/sysrtc@500a8000
 *   60  /soc/timer@e000e010
 *   61  /soc/ulfrco@50028000
 *   62  /soc/pin-controller@5003c440
 *   63  /soc/pin-controller@5003c440/usart0_default
 *   64  /soc/usart@5005c000
 *   65  /soc/wdog@5b004000
 *   66  /soc/wdog@5b008000
 *   67  /soc/flash-controller@50030000
 *   68  /soc/flash-controller@50030000/flash@8000000
 *   69  /soc/flash-controller@50030000/flash@8000000/partitions
 *   70  /soc/flash-controller@50030000/flash@8000000/partitions/partition@0
 *   71  /soc/flash-controller@50030000/flash@8000000/partitions/partition@c000
 *   72  /soc/flash-controller@50030000/flash@8000000/partitions/partition@C0000
 *   73  /soc/flash-controller@50030000/flash@8000000/partitions/partition@174000
 *   74  /soc/flash-controller@50030000/flash@8000000/partitions/partition@17c000
 *   75  /soc/gpio@5003c000/gpio@5003c090
 *   76  /soc/gpio@5003c000/gpio@5003c0C0
 *   77  /soc/gpio@5003c000/gpio@5003c060/board-controller-enable
 *   78  /soc/pin-controller@5003c440/i2c0_default
 *   79  /soc/i2c@5b000000
 *   80  /soc/i2c@5b000000/cap1114@28
 *   81  /soc/pin-controller@5003c440/i2c0_scl_pin
 *   82  /soc/pin-controller@5003c440/i2c0_sda_pin
 *   83  /soc/pin-controller@5003c440/i2c0_default/group0
 *   84  /soc/pin-controller@5003c440/usart0_default/group0
 *   85  /soc/pin-controller@5003c440/usart0_default/group1
 *
 * Definitions derived from these nodes in dependency order are next,
 * followed by /chosen nodes.
 */

/* Used to remove brackets from around a single argument */
#define DT_DEBRACKET_INTERNAL(...) __VA_ARGS__

/*
 * Devicetree node: /
 *
 * Node identifier: DT_N
 */

/* Node's full path: */
#define DT_N_PATH "/"

/* Node's name with unit-address: */
#define DT_N_FULL_NAME "/"
#define DT_N_FULL_NAME_UNQUOTED /
#define DT_N_FULL_NAME_TOKEN _
#define DT_N_FULL_NAME_UPPER_TOKEN _

/* Helpers for dealing with node labels: */
#define DT_N_NODELABEL_NUM 0
#define DT_N_FOREACH_NODELABEL(fn) 
#define DT_N_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_FOREACH_ANCESTOR(fn) 

/* Helper macros for child nodes of this node. */
#define DT_N_CHILD_NUM 10
#define DT_N_CHILD_NUM_STATUS_OKAY 9
#define DT_N_FOREACH_CHILD(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_clocks) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_bt_hci_silabs) fn(DT_N_S_hwinfo) fn(DT_N_S_leds) fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_bt_hci_silabs) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_hwinfo) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_bt_hci_silabs, __VA_ARGS__) fn(DT_N_S_hwinfo, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_bt_hci_silabs, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_hwinfo, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_clocks) fn(DT_N_S_cpus) fn(DT_N_S_memory_20000000) fn(DT_N_S_bt_hci_silabs) fn(DT_N_S_leds) fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_chosen) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_bt_hci_silabs) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_bt_hci_silabs, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_N_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_chosen, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_aliases, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_memory_20000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_bt_hci_silabs, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_ORD 0
#define DT_N_ORD_STR_SORTABLE 00000

/* Ordinals for what this node depends on directly: */
#define DT_N_REQUIRES_ORDS /* nothing */

/* Ordinals for what depends directly on this node: */
#define DT_N_SUPPORTS_ORDS \
	1, /* /aliases */ \
	2, /* /bt_hci_silabs */ \
	3, /* /chosen */ \
	4, /* /hwinfo */ \
	5, /* /memory@20000000 */ \
	6, /* /soc */ \
	11, /* /buttons */ \
	14, /* /clocks */ \
	38, /* /cpus */ \
	45, /* /leds */

/* Existence and alternate IDs: */
#define DT_N_EXISTS 1
#define DT_N_INST_0_silabs_xg24_rb4187c DT_N
#define DT_N_INST_0_silabs_efr32mg24    DT_N

/* Macros for properties that are special in the specification: */
#define DT_N_REG_NUM 0
#define DT_N_RANGES_NUM 0
#define DT_N_FOREACH_RANGE(fn) 
#define DT_N_IRQ_NUM 0
#define DT_N_IRQ_LEVEL 0
#define DT_N_COMPAT_MATCHES_silabs_xg24_rb4187c 1
#define DT_N_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_0 "xg24_rb4187c"
#define DT_N_COMPAT_MATCHES_silabs_efr32mg24 1
#define DT_N_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_COMPAT_VENDOR_IDX_1 "Silicon Laboratories"
#define DT_N_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_COMPAT_MODEL_IDX_1 "efr32mg24"
#define DT_N_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_P_compatible {"silabs,xg24_rb4187c", "silabs,efr32mg24"}
#define DT_N_P_compatible_IDX_0_EXISTS 1
#define DT_N_P_compatible_IDX_0 "silabs,xg24_rb4187c"
#define DT_N_P_compatible_IDX_0_STRING_UNQUOTED silabs,xg24_rb4187c
#define DT_N_P_compatible_IDX_0_STRING_TOKEN silabs_xg24_rb4187c
#define DT_N_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_XG24_RB4187C
#define DT_N_P_compatible_IDX_1_EXISTS 1
#define DT_N_P_compatible_IDX_1 "silabs,efr32mg24"
#define DT_N_P_compatible_IDX_1_STRING_UNQUOTED silabs,efr32mg24
#define DT_N_P_compatible_IDX_1_STRING_TOKEN silabs_efr32mg24
#define DT_N_P_compatible_IDX_1_STRING_UPPER_TOKEN SILABS_EFR32MG24
#define DT_N_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N, compatible, 0) \
	fn(DT_N, compatible, 1)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N, compatible, 0, __VA_ARGS__) \
	fn(DT_N, compatible, 1, __VA_ARGS__)
#define DT_N_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N, compatible, 1, __VA_ARGS__)
#define DT_N_P_compatible_LEN 2
#define DT_N_P_compatible_EXISTS 1

/*
 * Devicetree node: /aliases
 *
 * Node identifier: DT_N_S_aliases
 */

/* Node's full path: */
#define DT_N_S_aliases_PATH "/aliases"

/* Node's name with unit-address: */
#define DT_N_S_aliases_FULL_NAME "aliases"
#define DT_N_S_aliases_FULL_NAME_UNQUOTED aliases
#define DT_N_S_aliases_FULL_NAME_TOKEN aliases
#define DT_N_S_aliases_FULL_NAME_UPPER_TOKEN ALIASES

/* Node parent (/) identifier: */
#define DT_N_S_aliases_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_aliases_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_aliases_NODELABEL_NUM 0
#define DT_N_S_aliases_FOREACH_NODELABEL(fn) 
#define DT_N_S_aliases_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_aliases_CHILD_NUM 0
#define DT_N_S_aliases_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_aliases_FOREACH_CHILD(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_aliases_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_aliases_ORD 1
#define DT_N_S_aliases_ORD_STR_SORTABLE 00001

/* Ordinals for what this node depends on directly: */
#define DT_N_S_aliases_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_aliases_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_aliases_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_aliases_REG_NUM 0
#define DT_N_S_aliases_RANGES_NUM 0
#define DT_N_S_aliases_FOREACH_RANGE(fn) 
#define DT_N_S_aliases_IRQ_NUM 0
#define DT_N_S_aliases_IRQ_LEVEL 0
#define DT_N_S_aliases_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_aliases_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /bt_hci_silabs
 *
 * Node identifier: DT_N_S_bt_hci_silabs
 *
 * Binding (compatible = silabs,bt-hci-efr32):
 *   $ZEPHYR_BASE/dts/bindings/bluetooth/silabs,bt-hci-efr32.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_bt_hci_silabs_PATH "/bt_hci_silabs"

/* Node's name with unit-address: */
#define DT_N_S_bt_hci_silabs_FULL_NAME "bt_hci_silabs"
#define DT_N_S_bt_hci_silabs_FULL_NAME_UNQUOTED bt_hci_silabs
#define DT_N_S_bt_hci_silabs_FULL_NAME_TOKEN bt_hci_silabs
#define DT_N_S_bt_hci_silabs_FULL_NAME_UPPER_TOKEN BT_HCI_SILABS

/* Node parent (/) identifier: */
#define DT_N_S_bt_hci_silabs_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_bt_hci_silabs_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_bt_hci_silabs_NODELABEL_NUM 1
#define DT_N_S_bt_hci_silabs_FOREACH_NODELABEL(fn) fn(bt_hci_silabs)
#define DT_N_S_bt_hci_silabs_FOREACH_NODELABEL_VARGS(fn, ...) fn(bt_hci_silabs, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_bt_hci_silabs_CHILD_NUM 0
#define DT_N_S_bt_hci_silabs_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_bt_hci_silabs_FOREACH_CHILD(fn) 
#define DT_N_S_bt_hci_silabs_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_bt_hci_silabs_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_bt_hci_silabs_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_bt_hci_silabs_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_bt_hci_silabs_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_bt_hci_silabs_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_bt_hci_silabs_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_bt_hci_silabs_ORD 2
#define DT_N_S_bt_hci_silabs_ORD_STR_SORTABLE 00002

/* Ordinals for what this node depends on directly: */
#define DT_N_S_bt_hci_silabs_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_bt_hci_silabs_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_bt_hci_silabs_EXISTS 1
#define DT_N_INST_0_silabs_bt_hci_efr32 DT_N_S_bt_hci_silabs
#define DT_N_NODELABEL_bt_hci_silabs    DT_N_S_bt_hci_silabs

/* Macros for properties that are special in the specification: */
#define DT_N_S_bt_hci_silabs_REG_NUM 0
#define DT_N_S_bt_hci_silabs_RANGES_NUM 0
#define DT_N_S_bt_hci_silabs_FOREACH_RANGE(fn) 
#define DT_N_S_bt_hci_silabs_IRQ_NUM 0
#define DT_N_S_bt_hci_silabs_IRQ_LEVEL 0
#define DT_N_S_bt_hci_silabs_COMPAT_MATCHES_silabs_bt_hci_efr32 1
#define DT_N_S_bt_hci_silabs_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_bt_hci_silabs_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_bt_hci_silabs_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_bt_hci_silabs_COMPAT_MODEL_IDX_0 "bt-hci-efr32"
#define DT_N_S_bt_hci_silabs_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_bt_hci_silabs_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_bt_hci_silabs_P_bt_hci_name "efr32"
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_STRING_UNQUOTED efr32
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_STRING_TOKEN efr32
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_STRING_UPPER_TOKEN EFR32
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_IDX_0 "efr32"
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_IDX_0_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_bt_hci_silabs, bt_hci_name, 0)
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_bt_hci_silabs, bt_hci_name, 0)
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_bt_hci_silabs, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_bt_hci_silabs, bt_hci_name, 0, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_LEN 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_name_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus "virtual"
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_STRING_UNQUOTED virtual
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_STRING_TOKEN virtual
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_STRING_UPPER_TOKEN VIRTUAL
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_IDX_0 "virtual"
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_IDX_0_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_IDX_0_ENUM_IDX 0
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_IDX_0_ENUM_VAL_virtual_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_FOREACH_PROP_ELEM(fn) fn(DT_N_S_bt_hci_silabs, bt_hci_bus, 0)
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_bt_hci_silabs, bt_hci_bus, 0)
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_bt_hci_silabs, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_bt_hci_silabs, bt_hci_bus, 0, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_LEN 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_bus_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks {"no-reset"}
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_IDX_0_ENUM_IDX 0
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_IDX_0_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_IDX_0_ENUM_VAL_no_reset_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_IDX_0 "no-reset"
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_IDX_0_STRING_UNQUOTED no-reset
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_IDX_0_STRING_TOKEN no_reset
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_IDX_0_STRING_UPPER_TOKEN NO_RESET
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_bt_hci_silabs, bt_hci_quirks, 0)
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_bt_hci_silabs, bt_hci_quirks, 0)
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_bt_hci_silabs, bt_hci_quirks, 0, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_bt_hci_silabs, bt_hci_quirks, 0, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_LEN 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_quirks_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_bt_hci_vs_ext 0
#define DT_N_S_bt_hci_silabs_P_bt_hci_vs_ext_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_status "okay"
#define DT_N_S_bt_hci_silabs_P_status_STRING_UNQUOTED okay
#define DT_N_S_bt_hci_silabs_P_status_STRING_TOKEN okay
#define DT_N_S_bt_hci_silabs_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_bt_hci_silabs_P_status_IDX_0 "okay"
#define DT_N_S_bt_hci_silabs_P_status_IDX_0_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_bt_hci_silabs_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_bt_hci_silabs, status, 0)
#define DT_N_S_bt_hci_silabs_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_bt_hci_silabs, status, 0)
#define DT_N_S_bt_hci_silabs_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_bt_hci_silabs, status, 0, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_bt_hci_silabs, status, 0, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_P_status_LEN 1
#define DT_N_S_bt_hci_silabs_P_status_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_compatible {"silabs,bt-hci-efr32"}
#define DT_N_S_bt_hci_silabs_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_compatible_IDX_0 "silabs,bt-hci-efr32"
#define DT_N_S_bt_hci_silabs_P_compatible_IDX_0_STRING_UNQUOTED silabs,bt-hci-efr32
#define DT_N_S_bt_hci_silabs_P_compatible_IDX_0_STRING_TOKEN silabs_bt_hci_efr32
#define DT_N_S_bt_hci_silabs_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_BT_HCI_EFR32
#define DT_N_S_bt_hci_silabs_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_bt_hci_silabs, compatible, 0)
#define DT_N_S_bt_hci_silabs_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_bt_hci_silabs, compatible, 0)
#define DT_N_S_bt_hci_silabs_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_bt_hci_silabs, compatible, 0, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_bt_hci_silabs, compatible, 0, __VA_ARGS__)
#define DT_N_S_bt_hci_silabs_P_compatible_LEN 1
#define DT_N_S_bt_hci_silabs_P_compatible_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_zephyr_deferred_init 0
#define DT_N_S_bt_hci_silabs_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_wakeup_source 0
#define DT_N_S_bt_hci_silabs_P_wakeup_source_EXISTS 1
#define DT_N_S_bt_hci_silabs_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_bt_hci_silabs_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /chosen
 *
 * Node identifier: DT_N_S_chosen
 */

/* Node's full path: */
#define DT_N_S_chosen_PATH "/chosen"

/* Node's name with unit-address: */
#define DT_N_S_chosen_FULL_NAME "chosen"
#define DT_N_S_chosen_FULL_NAME_UNQUOTED chosen
#define DT_N_S_chosen_FULL_NAME_TOKEN chosen
#define DT_N_S_chosen_FULL_NAME_UPPER_TOKEN CHOSEN

/* Node parent (/) identifier: */
#define DT_N_S_chosen_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_chosen_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_chosen_NODELABEL_NUM 0
#define DT_N_S_chosen_FOREACH_NODELABEL(fn) 
#define DT_N_S_chosen_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_chosen_CHILD_NUM 0
#define DT_N_S_chosen_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_chosen_FOREACH_CHILD(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_chosen_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_chosen_ORD 3
#define DT_N_S_chosen_ORD_STR_SORTABLE 00003

/* Ordinals for what this node depends on directly: */
#define DT_N_S_chosen_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_chosen_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_chosen_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_chosen_REG_NUM 0
#define DT_N_S_chosen_RANGES_NUM 0
#define DT_N_S_chosen_FOREACH_RANGE(fn) 
#define DT_N_S_chosen_IRQ_NUM 0
#define DT_N_S_chosen_IRQ_LEVEL 0
#define DT_N_S_chosen_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_chosen_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /hwinfo
 *
 * Node identifier: DT_N_S_hwinfo
 */

/* Node's full path: */
#define DT_N_S_hwinfo_PATH "/hwinfo"

/* Node's name with unit-address: */
#define DT_N_S_hwinfo_FULL_NAME "hwinfo"
#define DT_N_S_hwinfo_FULL_NAME_UNQUOTED hwinfo
#define DT_N_S_hwinfo_FULL_NAME_TOKEN hwinfo
#define DT_N_S_hwinfo_FULL_NAME_UPPER_TOKEN HWINFO

/* Node parent (/) identifier: */
#define DT_N_S_hwinfo_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_hwinfo_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_hwinfo_NODELABEL_NUM 1
#define DT_N_S_hwinfo_FOREACH_NODELABEL(fn) fn(hwinfo)
#define DT_N_S_hwinfo_FOREACH_NODELABEL_VARGS(fn, ...) fn(hwinfo, __VA_ARGS__)
#define DT_N_S_hwinfo_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_hwinfo_CHILD_NUM 0
#define DT_N_S_hwinfo_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_hwinfo_FOREACH_CHILD(fn) 
#define DT_N_S_hwinfo_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_hwinfo_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_hwinfo_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_hwinfo_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_hwinfo_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_hwinfo_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_hwinfo_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_hwinfo_ORD 4
#define DT_N_S_hwinfo_ORD_STR_SORTABLE 00004

/* Ordinals for what this node depends on directly: */
#define DT_N_S_hwinfo_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_hwinfo_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_hwinfo_EXISTS 1
#define DT_N_INST_0_silabs_gecko_hwinfo DT_N_S_hwinfo
#define DT_N_NODELABEL_hwinfo           DT_N_S_hwinfo

/* Macros for properties that are special in the specification: */
#define DT_N_S_hwinfo_REG_NUM 0
#define DT_N_S_hwinfo_RANGES_NUM 0
#define DT_N_S_hwinfo_FOREACH_RANGE(fn) 
#define DT_N_S_hwinfo_IRQ_NUM 0
#define DT_N_S_hwinfo_IRQ_LEVEL 0
#define DT_N_S_hwinfo_COMPAT_MATCHES_silabs_gecko_hwinfo 1
#define DT_N_S_hwinfo_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_hwinfo_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_hwinfo_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_hwinfo_COMPAT_MODEL_IDX_0 "gecko-hwinfo"
#define DT_N_S_hwinfo_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_hwinfo_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_hwinfo_P_compatible {"silabs,gecko-hwinfo"}
#define DT_N_S_hwinfo_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_hwinfo_P_compatible_IDX_0 "silabs,gecko-hwinfo"
#define DT_N_S_hwinfo_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-hwinfo
#define DT_N_S_hwinfo_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_hwinfo
#define DT_N_S_hwinfo_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_HWINFO
#define DT_N_S_hwinfo_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_hwinfo, compatible, 0)
#define DT_N_S_hwinfo_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_hwinfo, compatible, 0)
#define DT_N_S_hwinfo_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_hwinfo, compatible, 0, __VA_ARGS__)
#define DT_N_S_hwinfo_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_hwinfo, compatible, 0, __VA_ARGS__)
#define DT_N_S_hwinfo_P_compatible_LEN 1
#define DT_N_S_hwinfo_P_compatible_EXISTS 1
#define DT_N_S_hwinfo_P_status "disabled"
#define DT_N_S_hwinfo_P_status_STRING_UNQUOTED disabled
#define DT_N_S_hwinfo_P_status_STRING_TOKEN disabled
#define DT_N_S_hwinfo_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_hwinfo_P_status_IDX_0 "disabled"
#define DT_N_S_hwinfo_P_status_IDX_0_EXISTS 1
#define DT_N_S_hwinfo_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_hwinfo_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_hwinfo_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_hwinfo, status, 0)
#define DT_N_S_hwinfo_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_hwinfo, status, 0)
#define DT_N_S_hwinfo_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_hwinfo, status, 0, __VA_ARGS__)
#define DT_N_S_hwinfo_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_hwinfo, status, 0, __VA_ARGS__)
#define DT_N_S_hwinfo_P_status_LEN 1
#define DT_N_S_hwinfo_P_status_EXISTS 1

/*
 * Devicetree node: /memory@20000000
 *
 * Node identifier: DT_N_S_memory_20000000
 *
 * Binding (compatible = mmio-sram):
 *   $ZEPHYR_BASE/dts/bindings/sram/mmio-sram.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_memory_20000000_PATH "/memory@20000000"

/* Node's name with unit-address: */
#define DT_N_S_memory_20000000_FULL_NAME "memory@20000000"
#define DT_N_S_memory_20000000_FULL_NAME_UNQUOTED memory@20000000
#define DT_N_S_memory_20000000_FULL_NAME_TOKEN memory_20000000
#define DT_N_S_memory_20000000_FULL_NAME_UPPER_TOKEN MEMORY_20000000

/* Node parent (/) identifier: */
#define DT_N_S_memory_20000000_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_memory_20000000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_memory_20000000_NODELABEL_NUM 1
#define DT_N_S_memory_20000000_FOREACH_NODELABEL(fn) fn(sram0)
#define DT_N_S_memory_20000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sram0, __VA_ARGS__)
#define DT_N_S_memory_20000000_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_memory_20000000_CHILD_NUM 0
#define DT_N_S_memory_20000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_memory_20000000_FOREACH_CHILD(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_memory_20000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_memory_20000000_ORD 5
#define DT_N_S_memory_20000000_ORD_STR_SORTABLE 00005

/* Ordinals for what this node depends on directly: */
#define DT_N_S_memory_20000000_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_memory_20000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_memory_20000000_EXISTS 1
#define DT_N_INST_0_mmio_sram DT_N_S_memory_20000000
#define DT_N_NODELABEL_sram0  DT_N_S_memory_20000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_memory_20000000_REG_NUM 1
#define DT_N_S_memory_20000000_REG_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_ADDRESS 536870912 /* 0x20000000 */
#define DT_N_S_memory_20000000_REG_IDX_0_VAL_SIZE 262144 /* 0x40000 */
#define DT_N_S_memory_20000000_RANGES_NUM 0
#define DT_N_S_memory_20000000_FOREACH_RANGE(fn) 
#define DT_N_S_memory_20000000_IRQ_NUM 0
#define DT_N_S_memory_20000000_IRQ_LEVEL 0
#define DT_N_S_memory_20000000_COMPAT_MATCHES_mmio_sram 1
#define DT_N_S_memory_20000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_memory_20000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_memory_20000000_P_reg {536870912 /* 0x20000000 */, 262144 /* 0x40000 */}
#define DT_N_S_memory_20000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_0 536870912
#define DT_N_S_memory_20000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_memory_20000000_P_reg_IDX_1 262144
#define DT_N_S_memory_20000000_P_reg_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible {"mmio-sram"}
#define DT_N_S_memory_20000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_memory_20000000_P_compatible_IDX_0 "mmio-sram"
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UNQUOTED mmio-sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_TOKEN mmio_sram
#define DT_N_S_memory_20000000_P_compatible_IDX_0_STRING_UPPER_TOKEN MMIO_SRAM
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_memory_20000000, compatible, 0)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_memory_20000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_memory_20000000_P_compatible_LEN 1
#define DT_N_S_memory_20000000_P_compatible_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_deferred_init 0
#define DT_N_S_memory_20000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_memory_20000000_P_wakeup_source 0
#define DT_N_S_memory_20000000_P_wakeup_source_EXISTS 1
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_memory_20000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc
 *
 * Node identifier: DT_N_S_soc
 */

/* Node's full path: */
#define DT_N_S_soc_PATH "/soc"

/* Node's name with unit-address: */
#define DT_N_S_soc_FULL_NAME "soc"
#define DT_N_S_soc_FULL_NAME_UNQUOTED soc
#define DT_N_S_soc_FULL_NAME_TOKEN soc
#define DT_N_S_soc_FULL_NAME_UPPER_TOKEN SOC

/* Node parent (/) identifier: */
#define DT_N_S_soc_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_NODELABEL_NUM 0
#define DT_N_S_soc_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_CHILD_NUM 26
#define DT_N_S_soc_CHILD_NUM_STATUS_OKAY 20
#define DT_N_S_soc_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_clock_50008000) fn(DT_N_S_soc_S_fsrco_50018000) fn(DT_N_S_soc_S_hfxo_5a004000) fn(DT_N_S_soc_S_lfxo_50020000) fn(DT_N_S_soc_S_hfrcodpll_50010000) fn(DT_N_S_soc_S_hfrcoem23_5a000000) fn(DT_N_S_soc_S_lfrco_50024000) fn(DT_N_S_soc_S_ulfrco_50028000) fn(DT_N_S_soc_S_clkin0_5003c46c) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc_S_usart_5005c000) fn(DT_N_S_soc_S_eusart_5b010000) fn(DT_N_S_soc_S_eusart_500a0000) fn(DT_N_S_soc_S_burtc_50064000) fn(DT_N_S_soc_S_semailbox_5c021000) fn(DT_N_S_soc_S_i2c_5b000000) fn(DT_N_S_soc_S_sysrtc_500a8000) fn(DT_N_S_soc_S_gpio_5003c000) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc_S_dma_40040000) fn(DT_N_S_soc_S_wdog_5b004000) fn(DT_N_S_soc_S_wdog_5b008000) fn(DT_N_S_soc_S_adc_59004000) fn(DT_N_S_soc_S_dcdc_50094000)
#define DT_N_S_soc_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_50008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_fsrco_50018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfxo_5a004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lfxo_50020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfrcodpll_50010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfrcoem23_5a000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lfrco_50024000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ulfrco_50028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clkin0_5003c46c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_5005c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eusart_5b010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eusart_500a0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_burtc_50064000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_semailbox_5c021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_5b000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sysrtc_500a8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40040000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_wdog_5b004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_wdog_5b008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_59004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcdc_50094000)
#define DT_N_S_soc_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_clock_50008000, __VA_ARGS__) fn(DT_N_S_soc_S_fsrco_50018000, __VA_ARGS__) fn(DT_N_S_soc_S_hfxo_5a004000, __VA_ARGS__) fn(DT_N_S_soc_S_lfxo_50020000, __VA_ARGS__) fn(DT_N_S_soc_S_hfrcodpll_50010000, __VA_ARGS__) fn(DT_N_S_soc_S_hfrcoem23_5a000000, __VA_ARGS__) fn(DT_N_S_soc_S_lfrco_50024000, __VA_ARGS__) fn(DT_N_S_soc_S_ulfrco_50028000, __VA_ARGS__) fn(DT_N_S_soc_S_clkin0_5003c46c, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_5005c000, __VA_ARGS__) fn(DT_N_S_soc_S_eusart_5b010000, __VA_ARGS__) fn(DT_N_S_soc_S_eusart_500a0000, __VA_ARGS__) fn(DT_N_S_soc_S_burtc_50064000, __VA_ARGS__) fn(DT_N_S_soc_S_semailbox_5c021000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_5b000000, __VA_ARGS__) fn(DT_N_S_soc_S_sysrtc_500a8000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_wdog_5b004000, __VA_ARGS__) fn(DT_N_S_soc_S_wdog_5b008000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_59004000, __VA_ARGS__) fn(DT_N_S_soc_S_dcdc_50094000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_50008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_fsrco_50018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfxo_5a004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lfxo_50020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfrcodpll_50010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfrcoem23_5a000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lfrco_50024000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ulfrco_50028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clkin0_5003c46c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_5005c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eusart_5b010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_eusart_500a0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_burtc_50064000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_semailbox_5c021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_5b000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sysrtc_500a8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dma_40040000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_wdog_5b004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_wdog_5b008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_adc_59004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcdc_50094000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_clock_50008000) fn(DT_N_S_soc_S_fsrco_50018000) fn(DT_N_S_soc_S_hfxo_5a004000) fn(DT_N_S_soc_S_lfxo_50020000) fn(DT_N_S_soc_S_hfrcodpll_50010000) fn(DT_N_S_soc_S_hfrcoem23_5a000000) fn(DT_N_S_soc_S_lfrco_50024000) fn(DT_N_S_soc_S_ulfrco_50028000) fn(DT_N_S_soc_S_clkin0_5003c46c) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc_S_usart_5005c000) fn(DT_N_S_soc_S_semailbox_5c021000) fn(DT_N_S_soc_S_i2c_5b000000) fn(DT_N_S_soc_S_sysrtc_500a8000) fn(DT_N_S_soc_S_gpio_5003c000) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc_S_wdog_5b004000) fn(DT_N_S_soc_S_dcdc_50094000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_50008000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_fsrco_50018000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfxo_5a004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lfxo_50020000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfrcodpll_50010000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfrcoem23_5a000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lfrco_50024000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ulfrco_50028000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clkin0_5003c46c) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_5005c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_semailbox_5c021000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_5b000000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sysrtc_500a8000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_wdog_5b004000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcdc_50094000)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_clock_50008000, __VA_ARGS__) fn(DT_N_S_soc_S_fsrco_50018000, __VA_ARGS__) fn(DT_N_S_soc_S_hfxo_5a004000, __VA_ARGS__) fn(DT_N_S_soc_S_lfxo_50020000, __VA_ARGS__) fn(DT_N_S_soc_S_hfrcodpll_50010000, __VA_ARGS__) fn(DT_N_S_soc_S_hfrcoem23_5a000000, __VA_ARGS__) fn(DT_N_S_soc_S_lfrco_50024000, __VA_ARGS__) fn(DT_N_S_soc_S_ulfrco_50028000, __VA_ARGS__) fn(DT_N_S_soc_S_clkin0_5003c46c, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_5005c000, __VA_ARGS__) fn(DT_N_S_soc_S_semailbox_5c021000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_5b000000, __VA_ARGS__) fn(DT_N_S_soc_S_sysrtc_500a8000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440, __VA_ARGS__) fn(DT_N_S_soc_S_wdog_5b004000, __VA_ARGS__) fn(DT_N_S_soc_S_dcdc_50094000, __VA_ARGS__)
#define DT_N_S_soc_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clock_50008000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_fsrco_50018000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfxo_5a004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lfxo_50020000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfrcodpll_50010000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_hfrcoem23_5a000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_lfrco_50024000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_ulfrco_50028000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_clkin0_5003c46c, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_usart_5005c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_semailbox_5c021000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_i2c_5b000000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_sysrtc_500a8000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_wdog_5b004000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_dcdc_50094000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_ORD 6
#define DT_N_S_soc_ORD_STR_SORTABLE 00006

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_SUPPORTS_ORDS \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */ \
	9, /* /soc/gpio@5003c000 */ \
	15, /* /soc/lfxo@50020000 */ \
	17, /* /soc/hfxo@5a004000 */ \
	18, /* /soc/hfrcodpll@50010000 */ \
	48, /* /soc/adc@59004000 */ \
	49, /* /soc/burtc@50064000 */ \
	50, /* /soc/clkin0@5003c46c */ \
	51, /* /soc/dcdc@50094000 */ \
	52, /* /soc/dma@40040000 */ \
	53, /* /soc/eusart@500a0000 */ \
	54, /* /soc/eusart@5b010000 */ \
	55, /* /soc/fsrco@50018000 */ \
	56, /* /soc/hfrcoem23@5a000000 */ \
	57, /* /soc/lfrco@50024000 */ \
	58, /* /soc/semailbox@5c021000 */ \
	59, /* /soc/sysrtc@500a8000 */ \
	60, /* /soc/timer@e000e010 */ \
	61, /* /soc/ulfrco@50028000 */ \
	62, /* /soc/pin-controller@5003c440 */ \
	64, /* /soc/usart@5005c000 */ \
	65, /* /soc/wdog@5b004000 */ \
	66, /* /soc/wdog@5b008000 */ \
	67, /* /soc/flash-controller@50030000 */ \
	79, /* /soc/i2c@5b000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_EXISTS 1
#define DT_N_INST_0_silabs_efr32mg24b220f1536im48 DT_N_S_soc
#define DT_N_INST_1_silabs_efr32mg24              DT_N_S_soc
#define DT_N_INST_0_silabs_efr32                  DT_N_S_soc
#define DT_N_INST_0_simple_bus                    DT_N_S_soc

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_REG_NUM 0
#define DT_N_S_soc_RANGES_NUM 0
#define DT_N_S_soc_FOREACH_RANGE(fn) 
#define DT_N_S_soc_IRQ_NUM 0
#define DT_N_S_soc_IRQ_LEVEL 0
#define DT_N_S_soc_COMPAT_MATCHES_silabs_efr32mg24b220f1536im48 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_0 "efr32mg24b220f1536im48"
#define DT_N_S_soc_COMPAT_MATCHES_silabs_efr32mg24 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_1 "Silicon Laboratories"
#define DT_N_S_soc_COMPAT_MODEL_IDX_1_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_1 "efr32mg24"
#define DT_N_S_soc_COMPAT_MATCHES_silabs_efr32 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_2_EXISTS 1
#define DT_N_S_soc_COMPAT_VENDOR_IDX_2 "Silicon Laboratories"
#define DT_N_S_soc_COMPAT_MODEL_IDX_2_EXISTS 1
#define DT_N_S_soc_COMPAT_MODEL_IDX_2 "efr32"
#define DT_N_S_soc_COMPAT_MATCHES_simple_bus 1
#define DT_N_S_soc_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_P_compatible {"silabs,efr32mg24b220f1536im48", "silabs,efr32mg24", "silabs,efr32", "simple-bus"}
#define DT_N_S_soc_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_0 "silabs,efr32mg24b220f1536im48"
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UNQUOTED silabs,efr32mg24b220f1536im48
#define DT_N_S_soc_P_compatible_IDX_0_STRING_TOKEN silabs_efr32mg24b220f1536im48
#define DT_N_S_soc_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_EFR32MG24B220F1536IM48
#define DT_N_S_soc_P_compatible_IDX_1_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_1 "silabs,efr32mg24"
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UNQUOTED silabs,efr32mg24
#define DT_N_S_soc_P_compatible_IDX_1_STRING_TOKEN silabs_efr32mg24
#define DT_N_S_soc_P_compatible_IDX_1_STRING_UPPER_TOKEN SILABS_EFR32MG24
#define DT_N_S_soc_P_compatible_IDX_2_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_2 "silabs,efr32"
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UNQUOTED silabs,efr32
#define DT_N_S_soc_P_compatible_IDX_2_STRING_TOKEN silabs_efr32
#define DT_N_S_soc_P_compatible_IDX_2_STRING_UPPER_TOKEN SILABS_EFR32
#define DT_N_S_soc_P_compatible_IDX_3_EXISTS 1
#define DT_N_S_soc_P_compatible_IDX_3 "simple-bus"
#define DT_N_S_soc_P_compatible_IDX_3_STRING_UNQUOTED simple-bus
#define DT_N_S_soc_P_compatible_IDX_3_STRING_TOKEN simple_bus
#define DT_N_S_soc_P_compatible_IDX_3_STRING_UPPER_TOKEN SIMPLE_BUS
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc, compatible, 0) \
	fn(DT_N_S_soc, compatible, 1) \
	fn(DT_N_S_soc, compatible, 2) \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc, compatible, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 3)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc, compatible, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc, compatible, 3, __VA_ARGS__)
#define DT_N_S_soc_P_compatible_LEN 4
#define DT_N_S_soc_P_compatible_EXISTS 1
#define DT_N_S_soc_P_ranges_EXISTS 1

/*
 * Devicetree node: /soc/interrupt-controller@e000e100
 *
 * Node identifier: DT_N_S_soc_S_interrupt_controller_e000e100
 *
 * Binding (compatible = arm,v8m-nvic):
 *   $ZEPHYR_BASE/dts/bindings/interrupt-controller/arm,v8m-nvic.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PATH "/soc/interrupt-controller@e000e100"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME "interrupt-controller@e000e100"
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UNQUOTED interrupt-controller@e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_TOKEN interrupt_controller_e000e100
#define DT_N_S_soc_S_interrupt_controller_e000e100_FULL_NAME_UPPER_TOKEN INTERRUPT_CONTROLLER_E000E100

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_NODELABEL_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL(fn) fn(nvic)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_NODELABEL_VARGS(fn, ...) fn(nvic, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD 7
#define DT_N_S_soc_S_interrupt_controller_e000e100_ORD_STR_SORTABLE 00007

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_SUPPORTS_ORDS \
	8, /* /soc/clock@50008000 */ \
	9, /* /soc/gpio@5003c000 */ \
	17, /* /soc/hfxo@5a004000 */ \
	48, /* /soc/adc@59004000 */ \
	49, /* /soc/burtc@50064000 */ \
	51, /* /soc/dcdc@50094000 */ \
	52, /* /soc/dma@40040000 */ \
	53, /* /soc/eusart@500a0000 */ \
	54, /* /soc/eusart@5b010000 */ \
	58, /* /soc/semailbox@5c021000 */ \
	59, /* /soc/sysrtc@500a8000 */ \
	64, /* /soc/usart@5005c000 */ \
	65, /* /soc/wdog@5b004000 */ \
	66, /* /soc/wdog@5b008000 */ \
	67, /* /soc/flash-controller@50030000 */ \
	79, /* /soc/i2c@5b000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_EXISTS 1
#define DT_N_INST_0_arm_v8m_nvic DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_NODELABEL_nvic      DT_N_S_soc_S_interrupt_controller_e000e100

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_NUM 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_ADDRESS 3758153984 /* 0xe000e100 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_REG_IDX_0_VAL_SIZE 3072 /* 0xc00 */
#define DT_N_S_soc_S_interrupt_controller_e000e100_RANGES_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_NUM 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_IRQ_LEVEL 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MATCHES_arm_v8m_nvic 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_COMPAT_MODEL_IDX_0 "v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg {3758153984 /* 0xe000e100 */, 3072 /* 0xc00 */}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_0 3758153984
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_IDX_1 3072
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_reg_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits 4
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_arm_num_irq_priority_bits_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_interrupt_controller_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible {"arm,v8m-nvic"}
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0 "arm,v8m-nvic"
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UNQUOTED arm,v8m-nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_TOKEN arm_v8m_nvic
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_V8M_NVIC
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_LEN 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_compatible_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_interrupt_controller_e000e100_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/clock@50008000
 *
 * Node identifier: DT_N_S_soc_S_clock_50008000
 *
 * Binding (compatible = silabs,series-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/silabs,series-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clock_50008000_PATH "/soc/clock@50008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_clock_50008000_FULL_NAME "clock@50008000"
#define DT_N_S_soc_S_clock_50008000_FULL_NAME_UNQUOTED clock@50008000
#define DT_N_S_soc_S_clock_50008000_FULL_NAME_TOKEN clock_50008000
#define DT_N_S_soc_S_clock_50008000_FULL_NAME_UPPER_TOKEN CLOCK_50008000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clock_50008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_clock_50008000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_clock_50008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_clock_50008000_FOREACH_NODELABEL(fn) fn(cmu)
#define DT_N_S_soc_S_clock_50008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(cmu, __VA_ARGS__)
#define DT_N_S_soc_S_clock_50008000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_clock_50008000_CHILD_NUM 0
#define DT_N_S_soc_S_clock_50008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_clock_50008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_clock_50008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_50008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_50008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_clock_50008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_clock_50008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_clock_50008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_clock_50008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clock_50008000_ORD 8
#define DT_N_S_soc_S_clock_50008000_ORD_STR_SORTABLE 00008

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clock_50008000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clock_50008000_SUPPORTS_ORDS \
	9, /* /soc/gpio@5003c000 */ \
	48, /* /soc/adc@59004000 */ \
	49, /* /soc/burtc@50064000 */ \
	53, /* /soc/eusart@500a0000 */ \
	54, /* /soc/eusart@5b010000 */ \
	59, /* /soc/sysrtc@500a8000 */ \
	64, /* /soc/usart@5005c000 */ \
	65, /* /soc/wdog@5b004000 */ \
	66, /* /soc/wdog@5b008000 */ \
	79, /* /soc/i2c@5b000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clock_50008000_EXISTS 1
#define DT_N_INST_0_silabs_series_clock DT_N_S_soc_S_clock_50008000
#define DT_N_NODELABEL_cmu              DT_N_S_soc_S_clock_50008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_clock_50008000_REG_NUM 1
#define DT_N_S_soc_S_clock_50008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_REG_IDX_0_VAL_ADDRESS 1342210048 /* 0x50008000 */
#define DT_N_S_soc_S_clock_50008000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_clock_50008000_RANGES_NUM 0
#define DT_N_S_soc_S_clock_50008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_clock_50008000_IRQ_NUM 1
#define DT_N_S_soc_S_clock_50008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_IRQ_IDX_0_VAL_irq 47
#define DT_N_S_soc_S_clock_50008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_clock_50008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_clock_50008000_IRQ_LEVEL 1
#define DT_N_S_soc_S_clock_50008000_IRQ_NAME_cmu_VAL_irq DT_N_S_soc_S_clock_50008000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_clock_50008000_IRQ_NAME_cmu_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_IRQ_NAME_cmu_VAL_priority DT_N_S_soc_S_clock_50008000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_clock_50008000_IRQ_NAME_cmu_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_IRQ_NAME_cmu_CONTROLLER DT_N_S_soc_S_clock_50008000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_clock_50008000_COMPAT_MATCHES_silabs_series_clock 1
#define DT_N_S_soc_S_clock_50008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_clock_50008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_COMPAT_MODEL_IDX_0 "series-clock"
#define DT_N_S_soc_S_clock_50008000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_clock_50008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_clock_50008000_P_reg {1342210048 /* 0x50008000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_clock_50008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_reg_IDX_0 1342210048
#define DT_N_S_soc_S_clock_50008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_clock_50008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_status "okay"
#define DT_N_S_soc_S_clock_50008000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_clock_50008000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_clock_50008000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_clock_50008000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_clock_50008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_clock_50008000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_50008000, status, 0)
#define DT_N_S_soc_S_clock_50008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_50008000, status, 0)
#define DT_N_S_soc_S_clock_50008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_50008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_50008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_50008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_50008000_P_status_LEN 1
#define DT_N_S_soc_S_clock_50008000_P_status_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_compatible {"silabs,series-clock"}
#define DT_N_S_soc_S_clock_50008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_compatible_IDX_0 "silabs,series-clock"
#define DT_N_S_soc_S_clock_50008000_P_compatible_IDX_0_STRING_UNQUOTED silabs,series-clock
#define DT_N_S_soc_S_clock_50008000_P_compatible_IDX_0_STRING_TOKEN silabs_series_clock
#define DT_N_S_soc_S_clock_50008000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_SERIES_CLOCK
#define DT_N_S_soc_S_clock_50008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_50008000, compatible, 0)
#define DT_N_S_soc_S_clock_50008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_50008000, compatible, 0)
#define DT_N_S_soc_S_clock_50008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_50008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_50008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_50008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_50008000_P_compatible_LEN 1
#define DT_N_S_soc_S_clock_50008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_interrupts {47 /* 0x2f */, 0 /* 0x0 */}
#define DT_N_S_soc_S_clock_50008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_interrupts_IDX_0 47
#define DT_N_S_soc_S_clock_50008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_clock_50008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names {"cmu"}
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_IDX_0 "cmu"
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_IDX_0_STRING_UNQUOTED cmu
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_IDX_0_STRING_TOKEN cmu
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN CMU
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clock_50008000, interrupt_names, 0)
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clock_50008000, interrupt_names, 0)
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clock_50008000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clock_50008000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_clock_50008000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_clock_50008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_wakeup_source 0
#define DT_N_S_soc_S_clock_50008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_clock_50008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_clock_50008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@5003c000
 *
 * Node identifier: DT_N_S_soc_S_gpio_5003c000
 *
 * Binding (compatible = silabs,gecko-gpio):
 *   $ZEPHYR_BASE/dts/bindings/gpio/silabs,gecko-gpio.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_5003c000_PATH "/soc/gpio@5003c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_5003c000_FULL_NAME "gpio@5003c000"
#define DT_N_S_soc_S_gpio_5003c000_FULL_NAME_UNQUOTED gpio@5003c000
#define DT_N_S_soc_S_gpio_5003c000_FULL_NAME_TOKEN gpio_5003c000
#define DT_N_S_soc_S_gpio_5003c000_FULL_NAME_UPPER_TOKEN GPIO_5003C000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_gpio_5003c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_5003c000_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_5003c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_NODELABEL(fn) fn(gpio)
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpio, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_5003c000_CHILD_NUM 4
#define DT_N_S_soc_S_gpio_5003c000_CHILD_NUM_STATUS_OKAY 4
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0)
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0)
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0)
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0)
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_5003c000_ORD 9
#define DT_N_S_soc_S_gpio_5003c000_ORD_STR_SORTABLE 00009

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_5003c000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_5003c000_SUPPORTS_ORDS \
	10, /* /soc/gpio@5003c000/gpio@5003c060 */ \
	44, /* /soc/gpio@5003c000/gpio@5003c030 */ \
	75, /* /soc/gpio@5003c000/gpio@5003c090 */ \
	76, /* /soc/gpio@5003c000/gpio@5003c0C0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_5003c000_EXISTS 1
#define DT_N_INST_0_silabs_gecko_gpio DT_N_S_soc_S_gpio_5003c000
#define DT_N_NODELABEL_gpio           DT_N_S_soc_S_gpio_5003c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_5003c000_REG_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_REG_IDX_0_VAL_ADDRESS 1342423040 /* 0x5003c000 */
#define DT_N_S_soc_S_gpio_5003c000_REG_IDX_0_VAL_SIZE 1088 /* 0x440 */
#define DT_N_S_soc_S_gpio_5003c000_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NUM 2
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_0_VAL_irq 26
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_0_VAL_priority 2
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_1_VAL_irq 25
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_1_VAL_priority 2
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_gpio_5003c000_IRQ_LEVEL 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NAME_gpio_even_VAL_irq DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NAME_gpio_even_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NAME_gpio_even_VAL_priority DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NAME_gpio_even_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NAME_gpio_even_CONTROLLER DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NAME_gpio_odd_VAL_irq DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NAME_gpio_odd_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NAME_gpio_odd_VAL_priority DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NAME_gpio_odd_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_IRQ_NAME_gpio_odd_CONTROLLER DT_N_S_soc_S_gpio_5003c000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_gpio_5003c000_COMPAT_MATCHES_silabs_gecko_gpio 1
#define DT_N_S_soc_S_gpio_5003c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_gpio_5003c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_COMPAT_MODEL_IDX_0 "gecko-gpio"
#define DT_N_S_soc_S_gpio_5003c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_5003c000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_5003c000_P_reg {1342423040 /* 0x5003c000 */, 1088 /* 0x440 */}
#define DT_N_S_soc_S_gpio_5003c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_reg_IDX_0 1342423040
#define DT_N_S_soc_S_gpio_5003c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_reg_IDX_1 1088
#define DT_N_S_soc_S_gpio_5003c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_interrupts {26 /* 0x1a */, 2 /* 0x2 */, 25 /* 0x19 */, 2 /* 0x2 */}
#define DT_N_S_soc_S_gpio_5003c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_interrupts_IDX_0 26
#define DT_N_S_soc_S_gpio_5003c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_interrupts_IDX_1 2
#define DT_N_S_soc_S_gpio_5003c000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_interrupts_IDX_2 25
#define DT_N_S_soc_S_gpio_5003c000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_interrupts_IDX_3 2
#define DT_N_S_soc_S_gpio_5003c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_location_swo 0
#define DT_N_S_soc_S_gpio_5003c000_P_location_swo_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_status "okay"
#define DT_N_S_soc_S_gpio_5003c000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_5003c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_5003c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_5003c000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_5003c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_5003c000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000, status, 0)
#define DT_N_S_soc_S_gpio_5003c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000, status, 0)
#define DT_N_S_soc_S_gpio_5003c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_P_status_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_compatible {"silabs,gecko-gpio"}
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_IDX_0 "silabs,gecko-gpio"
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-gpio
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_gpio
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_GPIO
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000, compatible, 0)
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000, compatible, 0)
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names {"GPIO_EVEN", "GPIO_ODD"}
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_IDX_0 "GPIO_EVEN"
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_IDX_0_STRING_UNQUOTED GPIO_EVEN
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_IDX_0_STRING_TOKEN GPIO_EVEN
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN GPIO_EVEN
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_IDX_1 "GPIO_ODD"
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_IDX_1_STRING_UNQUOTED GPIO_ODD
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_IDX_1_STRING_TOKEN GPIO_ODD
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN GPIO_ODD
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_gpio_5003c000, interrupt_names, 1)
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_5003c000, interrupt_names, 1)
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_5003c000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_5003c000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_gpio_5003c000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_50008000
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_IDX_0_VAL_enable 26
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_IDX_0_VAL_enable_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_IDX_0_VAL_branch 3
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_IDX_0_VAL_branch_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000, clocks, 0)
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000, clocks, 0)
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_5003c000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_5003c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_5003c000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@5003c000/gpio@5003c060
 *
 * Node identifier: DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060
 *
 * Binding (compatible = silabs,gecko-gpio-port):
 *   $ZEPHYR_BASE/dts/bindings/gpio/silabs,gecko-gpio-port.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_PATH "/soc/gpio@5003c000/gpio@5003c060"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FULL_NAME "gpio@5003c060"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FULL_NAME_UNQUOTED gpio@5003c060
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FULL_NAME_TOKEN gpio_5003c060
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FULL_NAME_UPPER_TOKEN GPIO_5003C060

/* Node parent (/soc/gpio@5003c000) identifier: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_PARENT DT_N_S_soc_S_gpio_5003c000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_NODELABEL(fn) fn(gpiob)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiob, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_gpio_5003c000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_CHILD_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_ORD 10
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_ORD_STR_SORTABLE 00010

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_REQUIRES_ORDS \
	9, /* /soc/gpio@5003c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_SUPPORTS_ORDS \
	11, /* /buttons */ \
	12, /* /buttons/button_0 */ \
	13, /* /buttons/button_1 */ \
	77, /* /soc/gpio@5003c000/gpio@5003c060/board-controller-enable */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_EXISTS 1
#define DT_N_INST_1_silabs_gecko_gpio_port DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060
#define DT_N_NODELABEL_gpiob               DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_REG_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_REG_IDX_0_VAL_ADDRESS 1342423136 /* 0x5003c060 */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_REG_IDX_0_VAL_SIZE 48 /* 0x30 */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_COMPAT_MATCHES_silabs_gecko_gpio_port 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_COMPAT_MODEL_IDX_0 "gecko-gpio-port"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_reg {1342423136 /* 0x5003c060 */, 48 /* 0x30 */}
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_reg_IDX_0 1342423136
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_reg_IDX_1 48
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_peripheral_id 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_peripheral_id_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_ngpios 32
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status "okay"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, status, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, status, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible {"silabs,gecko-gpio-port"}
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_IDX_0 "silabs,gecko-gpio-port"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-gpio-port
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_gpio_port
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_GPIO_PORT
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, compatible, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, compatible, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /buttons
 *
 * Node identifier: DT_N_S_buttons
 *
 * Binding (compatible = gpio-keys):
 *   $ZEPHYR_BASE/dts/bindings/input/gpio-keys.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_PATH "/buttons"

/* Node's name with unit-address: */
#define DT_N_S_buttons_FULL_NAME "buttons"
#define DT_N_S_buttons_FULL_NAME_UNQUOTED buttons
#define DT_N_S_buttons_FULL_NAME_TOKEN buttons
#define DT_N_S_buttons_FULL_NAME_UPPER_TOKEN BUTTONS

/* Node parent (/) identifier: */
#define DT_N_S_buttons_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_NODELABEL_NUM 0
#define DT_N_S_buttons_FOREACH_NODELABEL(fn) 
#define DT_N_S_buttons_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_buttons_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_CHILD_NUM 2
#define DT_N_S_buttons_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_buttons_FOREACH_CHILD(fn) fn(DT_N_S_buttons_S_button_0) fn(DT_N_S_buttons_S_button_1)
#define DT_N_S_buttons_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons_S_button_1)
#define DT_N_S_buttons_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) fn(DT_N_S_buttons_S_button_1, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons_S_button_1, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_buttons_S_button_0) fn(DT_N_S_buttons_S_button_1)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons_S_button_1)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) fn(DT_N_S_buttons_S_button_1, __VA_ARGS__)
#define DT_N_S_buttons_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_buttons_S_button_1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_buttons_ORD 11
#define DT_N_S_buttons_ORD_STR_SORTABLE 00011

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_REQUIRES_ORDS \
	0, /* / */ \
	10, /* /soc/gpio@5003c000/gpio@5003c060 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_SUPPORTS_ORDS \
	12, /* /buttons/button_0 */ \
	13, /* /buttons/button_1 */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_EXISTS 1
#define DT_N_INST_0_gpio_keys DT_N_S_buttons

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_REG_NUM 0
#define DT_N_S_buttons_RANGES_NUM 0
#define DT_N_S_buttons_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_IRQ_NUM 0
#define DT_N_S_buttons_IRQ_LEVEL 0
#define DT_N_S_buttons_COMPAT_MATCHES_gpio_keys 1
#define DT_N_S_buttons_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_P_debounce_interval_ms 30
#define DT_N_S_buttons_P_debounce_interval_ms_EXISTS 1
#define DT_N_S_buttons_P_polling_mode 0
#define DT_N_S_buttons_P_polling_mode_EXISTS 1
#define DT_N_S_buttons_P_no_disconnect 0
#define DT_N_S_buttons_P_no_disconnect_EXISTS 1
#define DT_N_S_buttons_P_compatible {"gpio-keys"}
#define DT_N_S_buttons_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_buttons_P_compatible_IDX_0 "gpio-keys"
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UNQUOTED gpio-keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_TOKEN gpio_keys
#define DT_N_S_buttons_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_KEYS
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons, compatible, 0)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons, compatible, 0, __VA_ARGS__)
#define DT_N_S_buttons_P_compatible_LEN 1
#define DT_N_S_buttons_P_compatible_EXISTS 1
#define DT_N_S_buttons_P_zephyr_deferred_init 0
#define DT_N_S_buttons_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_buttons_P_wakeup_source 0
#define DT_N_S_buttons_P_wakeup_source_EXISTS 1
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_buttons_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /buttons/button_0
 *
 * Node identifier: DT_N_S_buttons_S_button_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_S_button_0_PATH "/buttons/button_0"

/* Node's name with unit-address: */
#define DT_N_S_buttons_S_button_0_FULL_NAME "button_0"
#define DT_N_S_buttons_S_button_0_FULL_NAME_UNQUOTED button_0
#define DT_N_S_buttons_S_button_0_FULL_NAME_TOKEN button_0
#define DT_N_S_buttons_S_button_0_FULL_NAME_UPPER_TOKEN BUTTON_0

/* Node parent (/buttons) identifier: */
#define DT_N_S_buttons_S_button_0_PARENT DT_N_S_buttons

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_S_button_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_S_button_0_NODELABEL_NUM 1
#define DT_N_S_buttons_S_button_0_FOREACH_NODELABEL(fn) fn(button0)
#define DT_N_S_buttons_S_button_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(button0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_buttons) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_S_button_0_CHILD_NUM 0
#define DT_N_S_buttons_S_button_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_buttons_S_button_0_ORD 12
#define DT_N_S_buttons_S_button_0_ORD_STR_SORTABLE 00012

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_S_button_0_REQUIRES_ORDS \
	10, /* /soc/gpio@5003c000/gpio@5003c060 */ \
	11, /* /buttons */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_S_button_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_S_button_0_EXISTS 1
#define DT_N_ALIAS_sw0         DT_N_S_buttons_S_button_0
#define DT_N_NODELABEL_button0 DT_N_S_buttons_S_button_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_S_button_0_REG_NUM 0
#define DT_N_S_buttons_S_button_0_RANGES_NUM 0
#define DT_N_S_buttons_S_button_0_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_S_button_0_IRQ_NUM 0
#define DT_N_S_buttons_S_button_0_IRQ_LEVEL 0
#define DT_N_S_buttons_S_button_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_S_button_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin 2
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_buttons_S_button_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, gpios, 0)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_gpios_LEN 1
#define DT_N_S_buttons_S_button_0_P_gpios_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label "User Push Button 0"
#define DT_N_S_buttons_S_button_0_P_label_STRING_UNQUOTED User Push Button 0
#define DT_N_S_buttons_S_button_0_P_label_STRING_TOKEN User_Push_Button_0
#define DT_N_S_buttons_S_button_0_P_label_STRING_UPPER_TOKEN USER_PUSH_BUTTON_0
#define DT_N_S_buttons_S_button_0_P_label_IDX_0 "User Push Button 0"
#define DT_N_S_buttons_S_button_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_0, label, 0)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_0, label, 0)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_0, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_0_P_label_LEN 1
#define DT_N_S_buttons_S_button_0_P_label_EXISTS 1
#define DT_N_S_buttons_S_button_0_P_zephyr_code 11
#define DT_N_S_buttons_S_button_0_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /buttons/button_1
 *
 * Node identifier: DT_N_S_buttons_S_button_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_buttons_S_button_1_PATH "/buttons/button_1"

/* Node's name with unit-address: */
#define DT_N_S_buttons_S_button_1_FULL_NAME "button_1"
#define DT_N_S_buttons_S_button_1_FULL_NAME_UNQUOTED button_1
#define DT_N_S_buttons_S_button_1_FULL_NAME_TOKEN button_1
#define DT_N_S_buttons_S_button_1_FULL_NAME_UPPER_TOKEN BUTTON_1

/* Node parent (/buttons) identifier: */
#define DT_N_S_buttons_S_button_1_PARENT DT_N_S_buttons

/* Node's index in its parent's list of children: */
#define DT_N_S_buttons_S_button_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_buttons_S_button_1_NODELABEL_NUM 1
#define DT_N_S_buttons_S_button_1_FOREACH_NODELABEL(fn) fn(button1)
#define DT_N_S_buttons_S_button_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(button1, __VA_ARGS__)
#define DT_N_S_buttons_S_button_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_buttons) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_buttons_S_button_1_CHILD_NUM 0
#define DT_N_S_buttons_S_button_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD(fn) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_buttons_S_button_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_buttons_S_button_1_ORD 13
#define DT_N_S_buttons_S_button_1_ORD_STR_SORTABLE 00013

/* Ordinals for what this node depends on directly: */
#define DT_N_S_buttons_S_button_1_REQUIRES_ORDS \
	10, /* /soc/gpio@5003c000/gpio@5003c060 */ \
	11, /* /buttons */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_buttons_S_button_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_buttons_S_button_1_EXISTS 1
#define DT_N_ALIAS_sw1         DT_N_S_buttons_S_button_1
#define DT_N_NODELABEL_button1 DT_N_S_buttons_S_button_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_buttons_S_button_1_REG_NUM 0
#define DT_N_S_buttons_S_button_1_RANGES_NUM 0
#define DT_N_S_buttons_S_button_1_FOREACH_RANGE(fn) 
#define DT_N_S_buttons_S_button_1_IRQ_NUM 0
#define DT_N_S_buttons_S_button_1_IRQ_LEVEL 0
#define DT_N_S_buttons_S_button_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_buttons_S_button_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_VAL_pin 3
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_VAL_flags 1
#define DT_N_S_buttons_S_button_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_1, gpios, 0)
#define DT_N_S_buttons_S_button_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_1, gpios, 0)
#define DT_N_S_buttons_S_button_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_1_P_gpios_LEN 1
#define DT_N_S_buttons_S_button_1_P_gpios_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_label "User Push Button 1"
#define DT_N_S_buttons_S_button_1_P_label_STRING_UNQUOTED User Push Button 1
#define DT_N_S_buttons_S_button_1_P_label_STRING_TOKEN User_Push_Button_1
#define DT_N_S_buttons_S_button_1_P_label_STRING_UPPER_TOKEN USER_PUSH_BUTTON_1
#define DT_N_S_buttons_S_button_1_P_label_IDX_0 "User Push Button 1"
#define DT_N_S_buttons_S_button_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_buttons_S_button_1, label, 0)
#define DT_N_S_buttons_S_button_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_buttons_S_button_1, label, 0)
#define DT_N_S_buttons_S_button_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_buttons_S_button_1, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_buttons_S_button_1, label, 0, __VA_ARGS__)
#define DT_N_S_buttons_S_button_1_P_label_LEN 1
#define DT_N_S_buttons_S_button_1_P_label_EXISTS 1
#define DT_N_S_buttons_S_button_1_P_zephyr_code 2
#define DT_N_S_buttons_S_button_1_P_zephyr_code_EXISTS 1

/*
 * Devicetree node: /clocks
 *
 * Node identifier: DT_N_S_clocks
 */

/* Node's full path: */
#define DT_N_S_clocks_PATH "/clocks"

/* Node's name with unit-address: */
#define DT_N_S_clocks_FULL_NAME "clocks"
#define DT_N_S_clocks_FULL_NAME_UNQUOTED clocks
#define DT_N_S_clocks_FULL_NAME_TOKEN clocks
#define DT_N_S_clocks_FULL_NAME_UPPER_TOKEN CLOCKS

/* Node parent (/) identifier: */
#define DT_N_S_clocks_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_NODELABEL_NUM 0
#define DT_N_S_clocks_FOREACH_NODELABEL(fn) 
#define DT_N_S_clocks_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_clocks_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_CHILD_NUM 20
#define DT_N_S_clocks_CHILD_NUM_STATUS_OKAY 20
#define DT_N_S_clocks_FOREACH_CHILD(fn) fn(DT_N_S_clocks_S_hfxort) fn(DT_N_S_clocks_S_hfrcodpllrt) fn(DT_N_S_clocks_S_sysclk) fn(DT_N_S_clocks_S_hclk) fn(DT_N_S_clocks_S_pclk) fn(DT_N_S_clocks_S_lspclk) fn(DT_N_S_clocks_S_hclkdiv1024) fn(DT_N_S_clocks_S_traceclk) fn(DT_N_S_clocks_S_em01grpaclk) fn(DT_N_S_clocks_S_em01grpcclk) fn(DT_N_S_clocks_S_iadcclk) fn(DT_N_S_clocks_S_em23grpaclk) fn(DT_N_S_clocks_S_em4grpaclk) fn(DT_N_S_clocks_S_sysrtcclk) fn(DT_N_S_clocks_S_wdog0clk) fn(DT_N_S_clocks_S_wdog1clk) fn(DT_N_S_clocks_S_pcnt0clk) fn(DT_N_S_clocks_S_eusart0clk) fn(DT_N_S_clocks_S_systickclk) fn(DT_N_S_clocks_S_vdac0clk)
#define DT_N_S_clocks_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_clocks_S_hfxort) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hfrcodpllrt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_sysclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_lspclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hclkdiv1024) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_traceclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em01grpaclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em01grpcclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_iadcclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em23grpaclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em4grpaclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_sysrtcclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_wdog0clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_wdog1clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pcnt0clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_eusart0clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_systickclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_vdac0clk)
#define DT_N_S_clocks_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_clocks_S_hfxort, __VA_ARGS__) fn(DT_N_S_clocks_S_hfrcodpllrt, __VA_ARGS__) fn(DT_N_S_clocks_S_sysclk, __VA_ARGS__) fn(DT_N_S_clocks_S_hclk, __VA_ARGS__) fn(DT_N_S_clocks_S_pclk, __VA_ARGS__) fn(DT_N_S_clocks_S_lspclk, __VA_ARGS__) fn(DT_N_S_clocks_S_hclkdiv1024, __VA_ARGS__) fn(DT_N_S_clocks_S_traceclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em01grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em01grpcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_iadcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em23grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em4grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_sysrtcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_wdog0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_wdog1clk, __VA_ARGS__) fn(DT_N_S_clocks_S_pcnt0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_eusart0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_systickclk, __VA_ARGS__) fn(DT_N_S_clocks_S_vdac0clk, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_hfxort, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hfrcodpllrt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_sysclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_lspclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hclkdiv1024, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_traceclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em01grpaclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em01grpcclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_iadcclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em23grpaclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em4grpaclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_sysrtcclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_wdog0clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_wdog1clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pcnt0clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_eusart0clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_systickclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_vdac0clk, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_clocks_S_hfxort) fn(DT_N_S_clocks_S_hfrcodpllrt) fn(DT_N_S_clocks_S_sysclk) fn(DT_N_S_clocks_S_hclk) fn(DT_N_S_clocks_S_pclk) fn(DT_N_S_clocks_S_lspclk) fn(DT_N_S_clocks_S_hclkdiv1024) fn(DT_N_S_clocks_S_traceclk) fn(DT_N_S_clocks_S_em01grpaclk) fn(DT_N_S_clocks_S_em01grpcclk) fn(DT_N_S_clocks_S_iadcclk) fn(DT_N_S_clocks_S_em23grpaclk) fn(DT_N_S_clocks_S_em4grpaclk) fn(DT_N_S_clocks_S_sysrtcclk) fn(DT_N_S_clocks_S_wdog0clk) fn(DT_N_S_clocks_S_wdog1clk) fn(DT_N_S_clocks_S_pcnt0clk) fn(DT_N_S_clocks_S_eusart0clk) fn(DT_N_S_clocks_S_systickclk) fn(DT_N_S_clocks_S_vdac0clk)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_clocks_S_hfxort) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hfrcodpllrt) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_sysclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_lspclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hclkdiv1024) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_traceclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em01grpaclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em01grpcclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_iadcclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em23grpaclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em4grpaclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_sysrtcclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_wdog0clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_wdog1clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pcnt0clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_eusart0clk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_systickclk) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_vdac0clk)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_clocks_S_hfxort, __VA_ARGS__) fn(DT_N_S_clocks_S_hfrcodpllrt, __VA_ARGS__) fn(DT_N_S_clocks_S_sysclk, __VA_ARGS__) fn(DT_N_S_clocks_S_hclk, __VA_ARGS__) fn(DT_N_S_clocks_S_pclk, __VA_ARGS__) fn(DT_N_S_clocks_S_lspclk, __VA_ARGS__) fn(DT_N_S_clocks_S_hclkdiv1024, __VA_ARGS__) fn(DT_N_S_clocks_S_traceclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em01grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em01grpcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_iadcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em23grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em4grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_sysrtcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_wdog0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_wdog1clk, __VA_ARGS__) fn(DT_N_S_clocks_S_pcnt0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_eusart0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_systickclk, __VA_ARGS__) fn(DT_N_S_clocks_S_vdac0clk, __VA_ARGS__)
#define DT_N_S_clocks_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_hfxort, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hfrcodpllrt, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_sysclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_lspclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_hclkdiv1024, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_traceclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em01grpaclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em01grpcclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_iadcclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em23grpaclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_em4grpaclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_sysrtcclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_wdog0clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_wdog1clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_pcnt0clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_eusart0clk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_systickclk, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_clocks_S_vdac0clk, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_clocks_ORD 14
#define DT_N_S_clocks_ORD_STR_SORTABLE 00014

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_SUPPORTS_ORDS \
	16, /* /clocks/em4grpaclk */ \
	19, /* /clocks/em01grpcclk */ \
	20, /* /clocks/eusart0clk */ \
	21, /* /clocks/sysclk */ \
	22, /* /clocks/hclk */ \
	23, /* /clocks/hclkdiv1024 */ \
	24, /* /clocks/hfrcodpllrt */ \
	25, /* /clocks/hfxort */ \
	26, /* /clocks/em01grpaclk */ \
	27, /* /clocks/iadcclk */ \
	28, /* /clocks/pclk */ \
	29, /* /clocks/lspclk */ \
	30, /* /clocks/em23grpaclk */ \
	31, /* /clocks/pcnt0clk */ \
	32, /* /clocks/sysrtcclk */ \
	33, /* /clocks/systickclk */ \
	34, /* /clocks/traceclk */ \
	35, /* /clocks/vdac0clk */ \
	36, /* /clocks/wdog0clk */ \
	37, /* /clocks/wdog1clk */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_REG_NUM 0
#define DT_N_S_clocks_RANGES_NUM 0
#define DT_N_S_clocks_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_IRQ_NUM 0
#define DT_N_S_clocks_IRQ_LEVEL 0
#define DT_N_S_clocks_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/lfxo@50020000
 *
 * Node identifier: DT_N_S_soc_S_lfxo_50020000
 *
 * Binding (compatible = silabs,series2-lfxo):
 *   $ZEPHYR_BASE/dts/bindings/clock/silabs,series2-lfxo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_lfxo_50020000_PATH "/soc/lfxo@50020000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_lfxo_50020000_FULL_NAME "lfxo@50020000"
#define DT_N_S_soc_S_lfxo_50020000_FULL_NAME_UNQUOTED lfxo@50020000
#define DT_N_S_soc_S_lfxo_50020000_FULL_NAME_TOKEN lfxo_50020000
#define DT_N_S_soc_S_lfxo_50020000_FULL_NAME_UPPER_TOKEN LFXO_50020000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_lfxo_50020000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_lfxo_50020000_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_lfxo_50020000_NODELABEL_NUM 1
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_NODELABEL(fn) fn(lfxo)
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_NODELABEL_VARGS(fn, ...) fn(lfxo, __VA_ARGS__)
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_lfxo_50020000_CHILD_NUM 0
#define DT_N_S_soc_S_lfxo_50020000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_lfxo_50020000_ORD 15
#define DT_N_S_soc_S_lfxo_50020000_ORD_STR_SORTABLE 00015

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_lfxo_50020000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_lfxo_50020000_SUPPORTS_ORDS \
	16, /* /clocks/em4grpaclk */ \
	30, /* /clocks/em23grpaclk */ \
	32, /* /clocks/sysrtcclk */ \
	36, /* /clocks/wdog0clk */ \
	37, /* /clocks/wdog1clk */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_lfxo_50020000_EXISTS 1
#define DT_N_INST_0_silabs_series2_lfxo DT_N_S_soc_S_lfxo_50020000
#define DT_N_NODELABEL_lfxo             DT_N_S_soc_S_lfxo_50020000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_lfxo_50020000_REG_NUM 1
#define DT_N_S_soc_S_lfxo_50020000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_REG_IDX_0_VAL_ADDRESS 1342308352 /* 0x50020000 */
#define DT_N_S_soc_S_lfxo_50020000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_lfxo_50020000_RANGES_NUM 0
#define DT_N_S_soc_S_lfxo_50020000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_lfxo_50020000_IRQ_NUM 0
#define DT_N_S_soc_S_lfxo_50020000_IRQ_LEVEL 0
#define DT_N_S_soc_S_lfxo_50020000_COMPAT_MATCHES_silabs_series2_lfxo 1
#define DT_N_S_soc_S_lfxo_50020000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_lfxo_50020000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_COMPAT_MODEL_IDX_0 "series2-lfxo"
#define DT_N_S_soc_S_lfxo_50020000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_lfxo_50020000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_lfxo_50020000_P_ctune 44
#define DT_N_S_soc_S_lfxo_50020000_P_ctune_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_precision 50
#define DT_N_S_soc_S_lfxo_50020000_P_precision_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_timeout 4096
#define DT_N_S_soc_S_lfxo_50020000_P_timeout_IDX_0_ENUM_IDX 4
#define DT_N_S_soc_S_lfxo_50020000_P_timeout_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_timeout_IDX_0_ENUM_VAL_4096_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_timeout_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_mode "xtal"
#define DT_N_S_soc_S_lfxo_50020000_P_mode_STRING_UNQUOTED xtal
#define DT_N_S_soc_S_lfxo_50020000_P_mode_STRING_TOKEN xtal
#define DT_N_S_soc_S_lfxo_50020000_P_mode_STRING_UPPER_TOKEN XTAL
#define DT_N_S_soc_S_lfxo_50020000_P_mode_IDX_0 "xtal"
#define DT_N_S_soc_S_lfxo_50020000_P_mode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_mode_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_lfxo_50020000_P_mode_IDX_0_ENUM_VAL_xtal_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_mode_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_lfxo_50020000, mode, 0)
#define DT_N_S_soc_S_lfxo_50020000_P_mode_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_lfxo_50020000, mode, 0)
#define DT_N_S_soc_S_lfxo_50020000_P_mode_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_lfxo_50020000, mode, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lfxo_50020000_P_mode_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_lfxo_50020000, mode, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lfxo_50020000_P_mode_LEN 1
#define DT_N_S_soc_S_lfxo_50020000_P_mode_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_clock_frequency 32768
#define DT_N_S_soc_S_lfxo_50020000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_status "okay"
#define DT_N_S_soc_S_lfxo_50020000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_lfxo_50020000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_lfxo_50020000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_lfxo_50020000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_lfxo_50020000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_lfxo_50020000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_lfxo_50020000, status, 0)
#define DT_N_S_soc_S_lfxo_50020000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_lfxo_50020000, status, 0)
#define DT_N_S_soc_S_lfxo_50020000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_lfxo_50020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lfxo_50020000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_lfxo_50020000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lfxo_50020000_P_status_LEN 1
#define DT_N_S_soc_S_lfxo_50020000_P_status_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_compatible {"silabs,series2-lfxo"}
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_IDX_0 "silabs,series2-lfxo"
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_IDX_0_STRING_UNQUOTED silabs,series2-lfxo
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_IDX_0_STRING_TOKEN silabs_series2_lfxo
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_SERIES2_LFXO
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_lfxo_50020000, compatible, 0)
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_lfxo_50020000, compatible, 0)
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_lfxo_50020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_lfxo_50020000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_LEN 1
#define DT_N_S_soc_S_lfxo_50020000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_reg {1342308352 /* 0x50020000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_lfxo_50020000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_reg_IDX_0 1342308352
#define DT_N_S_soc_S_lfxo_50020000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_lfxo_50020000_P_reg_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_lfxo_50020000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_wakeup_source 0
#define DT_N_S_soc_S_lfxo_50020000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_lfxo_50020000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_lfxo_50020000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/em4grpaclk
 *
 * Node identifier: DT_N_S_clocks_S_em4grpaclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_em4grpaclk_PATH "/clocks/em4grpaclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_em4grpaclk_FULL_NAME "em4grpaclk"
#define DT_N_S_clocks_S_em4grpaclk_FULL_NAME_UNQUOTED em4grpaclk
#define DT_N_S_clocks_S_em4grpaclk_FULL_NAME_TOKEN em4grpaclk
#define DT_N_S_clocks_S_em4grpaclk_FULL_NAME_UPPER_TOKEN EM4GRPACLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_em4grpaclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_em4grpaclk_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_em4grpaclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_NODELABEL(fn) fn(em4grpaclk)
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(em4grpaclk, __VA_ARGS__)
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_em4grpaclk_CHILD_NUM 0
#define DT_N_S_clocks_S_em4grpaclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_em4grpaclk_ORD 16
#define DT_N_S_clocks_S_em4grpaclk_ORD_STR_SORTABLE 00016

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_em4grpaclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	15, /* /soc/lfxo@50020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_em4grpaclk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_em4grpaclk_EXISTS 1
#define DT_N_INST_12_fixed_factor_clock DT_N_S_clocks_S_em4grpaclk
#define DT_N_NODELABEL_em4grpaclk       DT_N_S_clocks_S_em4grpaclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_em4grpaclk_REG_NUM 0
#define DT_N_S_clocks_S_em4grpaclk_RANGES_NUM 0
#define DT_N_S_clocks_S_em4grpaclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_em4grpaclk_IRQ_NUM 0
#define DT_N_S_clocks_S_em4grpaclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_em4grpaclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_em4grpaclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_em4grpaclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_em4grpaclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_em4grpaclk_P_clocks_IDX_0_PH DT_N_S_soc_S_lfxo_50020000
#define DT_N_S_clocks_S_em4grpaclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_em4grpaclk, clocks, 0)
#define DT_N_S_clocks_S_em4grpaclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_em4grpaclk, clocks, 0)
#define DT_N_S_clocks_S_em4grpaclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_em4grpaclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_em4grpaclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_em4grpaclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_em4grpaclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_em4grpaclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /soc/hfxo@5a004000
 *
 * Node identifier: DT_N_S_soc_S_hfxo_5a004000
 *
 * Binding (compatible = silabs,hfxo):
 *   $ZEPHYR_BASE/dts/bindings/clock/silabs,hfxo.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_hfxo_5a004000_PATH "/soc/hfxo@5a004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_hfxo_5a004000_FULL_NAME "hfxo@5a004000"
#define DT_N_S_soc_S_hfxo_5a004000_FULL_NAME_UNQUOTED hfxo@5a004000
#define DT_N_S_soc_S_hfxo_5a004000_FULL_NAME_TOKEN hfxo_5a004000
#define DT_N_S_soc_S_hfxo_5a004000_FULL_NAME_UPPER_TOKEN HFXO_5A004000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_hfxo_5a004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_hfxo_5a004000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_hfxo_5a004000_NODELABEL_NUM 2
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_NODELABEL(fn) fn(clk_hfxo) fn(hfxo)
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_NODELABEL_VARGS(fn, ...) fn(clk_hfxo, __VA_ARGS__) fn(hfxo, __VA_ARGS__)
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_hfxo_5a004000_CHILD_NUM 0
#define DT_N_S_soc_S_hfxo_5a004000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_hfxo_5a004000_ORD 17
#define DT_N_S_soc_S_hfxo_5a004000_ORD_STR_SORTABLE 00017

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_hfxo_5a004000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_hfxo_5a004000_SUPPORTS_ORDS \
	18, /* /soc/hfrcodpll@50010000 */ \
	25, /* /clocks/hfxort */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_hfxo_5a004000_EXISTS 1
#define DT_N_INST_0_silabs_hfxo DT_N_S_soc_S_hfxo_5a004000
#define DT_N_NODELABEL_clk_hfxo DT_N_S_soc_S_hfxo_5a004000
#define DT_N_NODELABEL_hfxo     DT_N_S_soc_S_hfxo_5a004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_hfxo_5a004000_REG_NUM 1
#define DT_N_S_soc_S_hfxo_5a004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_REG_IDX_0_VAL_ADDRESS 1509965824 /* 0x5a004000 */
#define DT_N_S_soc_S_hfxo_5a004000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_hfxo_5a004000_RANGES_NUM 0
#define DT_N_S_soc_S_hfxo_5a004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_NUM 1
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_IDX_0_VAL_irq 44
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_LEVEL 1
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_NAME_hfxo_VAL_irq DT_N_S_soc_S_hfxo_5a004000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_NAME_hfxo_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_NAME_hfxo_VAL_priority DT_N_S_soc_S_hfxo_5a004000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_NAME_hfxo_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_IRQ_NAME_hfxo_CONTROLLER DT_N_S_soc_S_hfxo_5a004000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_hfxo_5a004000_COMPAT_MATCHES_silabs_hfxo 1
#define DT_N_S_soc_S_hfxo_5a004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_hfxo_5a004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_COMPAT_MODEL_IDX_0 "hfxo"
#define DT_N_S_soc_S_hfxo_5a004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_hfxo_5a004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_hfxo_5a004000_P_ctune 95
#define DT_N_S_soc_S_hfxo_5a004000_P_ctune_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_precision 50
#define DT_N_S_soc_S_hfxo_5a004000_P_precision_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_mode "xtal"
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_STRING_UNQUOTED xtal
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_STRING_TOKEN xtal
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_STRING_UPPER_TOKEN XTAL
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_IDX_0 "xtal"
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_IDX_0_ENUM_VAL_xtal_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_hfxo_5a004000, mode, 0)
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_hfxo_5a004000, mode, 0)
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_hfxo_5a004000, mode, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_hfxo_5a004000, mode, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_LEN 1
#define DT_N_S_soc_S_hfxo_5a004000_P_mode_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_clock_frequency 39000000
#define DT_N_S_soc_S_hfxo_5a004000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_status "okay"
#define DT_N_S_soc_S_hfxo_5a004000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_hfxo_5a004000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_hfxo_5a004000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_hfxo_5a004000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_hfxo_5a004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_hfxo_5a004000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_hfxo_5a004000, status, 0)
#define DT_N_S_soc_S_hfxo_5a004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_hfxo_5a004000, status, 0)
#define DT_N_S_soc_S_hfxo_5a004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_hfxo_5a004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfxo_5a004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_hfxo_5a004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfxo_5a004000_P_status_LEN 1
#define DT_N_S_soc_S_hfxo_5a004000_P_status_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible {"silabs,hfxo"}
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_IDX_0 "silabs,hfxo"
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_IDX_0_STRING_UNQUOTED silabs,hfxo
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_IDX_0_STRING_TOKEN silabs_hfxo
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_HFXO
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_hfxo_5a004000, compatible, 0)
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_hfxo_5a004000, compatible, 0)
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_hfxo_5a004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_hfxo_5a004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_LEN 1
#define DT_N_S_soc_S_hfxo_5a004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_reg {1509965824 /* 0x5a004000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_hfxo_5a004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_reg_IDX_0 1509965824
#define DT_N_S_soc_S_hfxo_5a004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_hfxo_5a004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupts {44 /* 0x2c */, 0 /* 0x0 */}
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupts_IDX_0 44
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names {"hfxo"}
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_IDX_0 "hfxo"
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_IDX_0_STRING_UNQUOTED hfxo
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_IDX_0_STRING_TOKEN hfxo
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN HFXO
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_hfxo_5a004000, interrupt_names, 0)
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_hfxo_5a004000, interrupt_names, 0)
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_hfxo_5a004000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_hfxo_5a004000, interrupt_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_LEN 1
#define DT_N_S_soc_S_hfxo_5a004000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_hfxo_5a004000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_wakeup_source 0
#define DT_N_S_soc_S_hfxo_5a004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_hfxo_5a004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_hfxo_5a004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/hfrcodpll@50010000
 *
 * Node identifier: DT_N_S_soc_S_hfrcodpll_50010000
 *
 * Binding (compatible = silabs,series2-hfrcodpll):
 *   $ZEPHYR_BASE/dts/bindings/clock/silabs,series2-hfrcodpll.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_hfrcodpll_50010000_PATH "/soc/hfrcodpll@50010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_hfrcodpll_50010000_FULL_NAME "hfrcodpll@50010000"
#define DT_N_S_soc_S_hfrcodpll_50010000_FULL_NAME_UNQUOTED hfrcodpll@50010000
#define DT_N_S_soc_S_hfrcodpll_50010000_FULL_NAME_TOKEN hfrcodpll_50010000
#define DT_N_S_soc_S_hfrcodpll_50010000_FULL_NAME_UPPER_TOKEN HFRCODPLL_50010000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_hfrcodpll_50010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_hfrcodpll_50010000_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_hfrcodpll_50010000_NODELABEL_NUM 1
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_NODELABEL(fn) fn(hfrcodpll)
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_NODELABEL_VARGS(fn, ...) fn(hfrcodpll, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_hfrcodpll_50010000_CHILD_NUM 0
#define DT_N_S_soc_S_hfrcodpll_50010000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_hfrcodpll_50010000_ORD 18
#define DT_N_S_soc_S_hfrcodpll_50010000_ORD_STR_SORTABLE 00018

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_hfrcodpll_50010000_REQUIRES_ORDS \
	6, /* /soc */ \
	17, /* /soc/hfxo@5a004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_hfrcodpll_50010000_SUPPORTS_ORDS \
	19, /* /clocks/em01grpcclk */ \
	21, /* /clocks/sysclk */ \
	24, /* /clocks/hfrcodpllrt */ \
	26, /* /clocks/em01grpaclk */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_hfrcodpll_50010000_EXISTS 1
#define DT_N_INST_0_silabs_series2_hfrcodpll DT_N_S_soc_S_hfrcodpll_50010000
#define DT_N_NODELABEL_hfrcodpll             DT_N_S_soc_S_hfrcodpll_50010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_hfrcodpll_50010000_REG_NUM 1
#define DT_N_S_soc_S_hfrcodpll_50010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_REG_IDX_0_VAL_ADDRESS 1342242816 /* 0x50010000 */
#define DT_N_S_soc_S_hfrcodpll_50010000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_hfrcodpll_50010000_RANGES_NUM 0
#define DT_N_S_soc_S_hfrcodpll_50010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_hfrcodpll_50010000_IRQ_NUM 0
#define DT_N_S_soc_S_hfrcodpll_50010000_IRQ_LEVEL 0
#define DT_N_S_soc_S_hfrcodpll_50010000_COMPAT_MATCHES_silabs_series2_hfrcodpll 1
#define DT_N_S_soc_S_hfrcodpll_50010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_hfrcodpll_50010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_COMPAT_MODEL_IDX_0 "series2-hfrcodpll"
#define DT_N_S_soc_S_hfrcodpll_50010000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_hfrcodpll_50010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_n 3839
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_n_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_m 1919
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_m_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge "fall"
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_STRING_UNQUOTED fall
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_STRING_TOKEN fall
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_STRING_UPPER_TOKEN FALL
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_IDX_0 "fall"
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_IDX_0_ENUM_VAL_fall_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_hfrcodpll_50010000, dpll_edge, 0)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_hfrcodpll_50010000, dpll_edge, 0)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_hfrcodpll_50010000, dpll_edge, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_hfrcodpll_50010000, dpll_edge, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_LEN 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_edge_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock "phase"
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_STRING_UNQUOTED phase
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_STRING_TOKEN phase
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_STRING_UPPER_TOKEN PHASE
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_IDX_0 "phase"
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_IDX_0_ENUM_VAL_phase_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_hfrcodpll_50010000, dpll_lock, 0)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_hfrcodpll_50010000, dpll_lock, 0)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_hfrcodpll_50010000, dpll_lock, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_hfrcodpll_50010000, dpll_lock, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_LEN 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_lock_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_autorecover 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_autorecover_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_dither 0
#define DT_N_S_soc_S_hfrcodpll_50010000_P_dpll_dither_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_clock_frequency 78000000
#define DT_N_S_soc_S_hfrcodpll_50010000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible {"silabs,series2-hfrcodpll"}
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_IDX_0 "silabs,series2-hfrcodpll"
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_IDX_0_STRING_UNQUOTED silabs,series2-hfrcodpll
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_IDX_0_STRING_TOKEN silabs_series2_hfrcodpll
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_SERIES2_HFRCODPLL
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_hfrcodpll_50010000, compatible, 0)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_hfrcodpll_50010000, compatible, 0)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_hfrcodpll_50010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_hfrcodpll_50010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_LEN 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_reg {1342242816 /* 0x50010000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_hfrcodpll_50010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_reg_IDX_0 1342242816
#define DT_N_S_soc_S_hfrcodpll_50010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_hfrcodpll_50010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_clocks_IDX_0_PH DT_N_S_soc_S_hfxo_5a004000
#define DT_N_S_soc_S_hfrcodpll_50010000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_hfrcodpll_50010000, clocks, 0)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_hfrcodpll_50010000, clocks, 0)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_hfrcodpll_50010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_hfrcodpll_50010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcodpll_50010000_P_clocks_LEN 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_hfrcodpll_50010000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_wakeup_source 0
#define DT_N_S_soc_S_hfrcodpll_50010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_hfrcodpll_50010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_hfrcodpll_50010000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /clocks/em01grpcclk
 *
 * Node identifier: DT_N_S_clocks_S_em01grpcclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_em01grpcclk_PATH "/clocks/em01grpcclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_em01grpcclk_FULL_NAME "em01grpcclk"
#define DT_N_S_clocks_S_em01grpcclk_FULL_NAME_UNQUOTED em01grpcclk
#define DT_N_S_clocks_S_em01grpcclk_FULL_NAME_TOKEN em01grpcclk
#define DT_N_S_clocks_S_em01grpcclk_FULL_NAME_UPPER_TOKEN EM01GRPCCLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_em01grpcclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_em01grpcclk_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_em01grpcclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_NODELABEL(fn) fn(em01grpcclk)
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(em01grpcclk, __VA_ARGS__)
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_em01grpcclk_CHILD_NUM 0
#define DT_N_S_clocks_S_em01grpcclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_em01grpcclk_ORD 19
#define DT_N_S_clocks_S_em01grpcclk_ORD_STR_SORTABLE 00019

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_em01grpcclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	18, /* /soc/hfrcodpll@50010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_em01grpcclk_SUPPORTS_ORDS \
	20, /* /clocks/eusart0clk */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_em01grpcclk_EXISTS 1
#define DT_N_INST_9_fixed_factor_clock DT_N_S_clocks_S_em01grpcclk
#define DT_N_NODELABEL_em01grpcclk     DT_N_S_clocks_S_em01grpcclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_em01grpcclk_REG_NUM 0
#define DT_N_S_clocks_S_em01grpcclk_RANGES_NUM 0
#define DT_N_S_clocks_S_em01grpcclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_em01grpcclk_IRQ_NUM 0
#define DT_N_S_clocks_S_em01grpcclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_em01grpcclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_em01grpcclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_em01grpcclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_em01grpcclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_em01grpcclk_P_clocks_IDX_0_PH DT_N_S_soc_S_hfrcodpll_50010000
#define DT_N_S_clocks_S_em01grpcclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_em01grpcclk, clocks, 0)
#define DT_N_S_clocks_S_em01grpcclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_em01grpcclk, clocks, 0)
#define DT_N_S_clocks_S_em01grpcclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_em01grpcclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_em01grpcclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_em01grpcclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_em01grpcclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_em01grpcclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/eusart0clk
 *
 * Node identifier: DT_N_S_clocks_S_eusart0clk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_eusart0clk_PATH "/clocks/eusart0clk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_eusart0clk_FULL_NAME "eusart0clk"
#define DT_N_S_clocks_S_eusart0clk_FULL_NAME_UNQUOTED eusart0clk
#define DT_N_S_clocks_S_eusart0clk_FULL_NAME_TOKEN eusart0clk
#define DT_N_S_clocks_S_eusart0clk_FULL_NAME_UPPER_TOKEN EUSART0CLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_eusart0clk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_eusart0clk_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_eusart0clk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_eusart0clk_FOREACH_NODELABEL(fn) fn(eusart0clk)
#define DT_N_S_clocks_S_eusart0clk_FOREACH_NODELABEL_VARGS(fn, ...) fn(eusart0clk, __VA_ARGS__)
#define DT_N_S_clocks_S_eusart0clk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_eusart0clk_CHILD_NUM 0
#define DT_N_S_clocks_S_eusart0clk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_eusart0clk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_eusart0clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_eusart0clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_eusart0clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_eusart0clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_eusart0clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_eusart0clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_eusart0clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_eusart0clk_ORD 20
#define DT_N_S_clocks_S_eusart0clk_ORD_STR_SORTABLE 00020

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_eusart0clk_REQUIRES_ORDS \
	14, /* /clocks */ \
	19, /* /clocks/em01grpcclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_eusart0clk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_eusart0clk_EXISTS 1
#define DT_N_INST_17_fixed_factor_clock DT_N_S_clocks_S_eusart0clk
#define DT_N_NODELABEL_eusart0clk       DT_N_S_clocks_S_eusart0clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_eusart0clk_REG_NUM 0
#define DT_N_S_clocks_S_eusart0clk_RANGES_NUM 0
#define DT_N_S_clocks_S_eusart0clk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_eusart0clk_IRQ_NUM 0
#define DT_N_S_clocks_S_eusart0clk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_eusart0clk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_eusart0clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_eusart0clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_eusart0clk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_eusart0clk_P_clocks_IDX_0_PH DT_N_S_clocks_S_em01grpcclk
#define DT_N_S_clocks_S_eusart0clk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_eusart0clk, clocks, 0)
#define DT_N_S_clocks_S_eusart0clk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_eusart0clk, clocks, 0)
#define DT_N_S_clocks_S_eusart0clk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_eusart0clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_eusart0clk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_eusart0clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_eusart0clk_P_clocks_LEN 1
#define DT_N_S_clocks_S_eusart0clk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/sysclk
 *
 * Node identifier: DT_N_S_clocks_S_sysclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_sysclk_PATH "/clocks/sysclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_sysclk_FULL_NAME "sysclk"
#define DT_N_S_clocks_S_sysclk_FULL_NAME_UNQUOTED sysclk
#define DT_N_S_clocks_S_sysclk_FULL_NAME_TOKEN sysclk
#define DT_N_S_clocks_S_sysclk_FULL_NAME_UPPER_TOKEN SYSCLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_sysclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_sysclk_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_sysclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_sysclk_FOREACH_NODELABEL(fn) fn(sysclk)
#define DT_N_S_clocks_S_sysclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(sysclk, __VA_ARGS__)
#define DT_N_S_clocks_S_sysclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_sysclk_CHILD_NUM 0
#define DT_N_S_clocks_S_sysclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_sysclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_sysclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_sysclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_sysclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_sysclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_sysclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_sysclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_sysclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_sysclk_ORD 21
#define DT_N_S_clocks_S_sysclk_ORD_STR_SORTABLE 00021

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_sysclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	18, /* /soc/hfrcodpll@50010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_sysclk_SUPPORTS_ORDS \
	22, /* /clocks/hclk */ \
	34, /* /clocks/traceclk */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_sysclk_EXISTS 1
#define DT_N_INST_2_fixed_factor_clock DT_N_S_clocks_S_sysclk
#define DT_N_NODELABEL_sysclk          DT_N_S_clocks_S_sysclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_sysclk_REG_NUM 0
#define DT_N_S_clocks_S_sysclk_RANGES_NUM 0
#define DT_N_S_clocks_S_sysclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_sysclk_IRQ_NUM 0
#define DT_N_S_clocks_S_sysclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_sysclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_sysclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_sysclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_sysclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_sysclk_P_clocks_IDX_0_PH DT_N_S_soc_S_hfrcodpll_50010000
#define DT_N_S_clocks_S_sysclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_sysclk, clocks, 0)
#define DT_N_S_clocks_S_sysclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_sysclk, clocks, 0)
#define DT_N_S_clocks_S_sysclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_sysclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_sysclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_sysclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_sysclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_sysclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/hclk
 *
 * Node identifier: DT_N_S_clocks_S_hclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_hclk_PATH "/clocks/hclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_hclk_FULL_NAME "hclk"
#define DT_N_S_clocks_S_hclk_FULL_NAME_UNQUOTED hclk
#define DT_N_S_clocks_S_hclk_FULL_NAME_TOKEN hclk
#define DT_N_S_clocks_S_hclk_FULL_NAME_UPPER_TOKEN HCLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_hclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_hclk_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_hclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_hclk_FOREACH_NODELABEL(fn) fn(hclk)
#define DT_N_S_clocks_S_hclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(hclk, __VA_ARGS__)
#define DT_N_S_clocks_S_hclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_hclk_CHILD_NUM 0
#define DT_N_S_clocks_S_hclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_hclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_hclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_hclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_hclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_hclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_hclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_hclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_hclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_hclk_ORD 22
#define DT_N_S_clocks_S_hclk_ORD_STR_SORTABLE 00022

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_hclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	21, /* /clocks/sysclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_hclk_SUPPORTS_ORDS \
	23, /* /clocks/hclkdiv1024 */ \
	28, /* /clocks/pclk */ \
	33, /* /clocks/systickclk */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_hclk_EXISTS 1
#define DT_N_INST_3_fixed_factor_clock DT_N_S_clocks_S_hclk
#define DT_N_NODELABEL_hclk            DT_N_S_clocks_S_hclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_hclk_REG_NUM 0
#define DT_N_S_clocks_S_hclk_RANGES_NUM 0
#define DT_N_S_clocks_S_hclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_hclk_IRQ_NUM 0
#define DT_N_S_clocks_S_hclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_hclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_hclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_hclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_hclk_P_clock_div 1
#define DT_N_S_clocks_S_hclk_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_hclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_hclk_P_clocks_IDX_0_PH DT_N_S_clocks_S_sysclk
#define DT_N_S_clocks_S_hclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_hclk, clocks, 0)
#define DT_N_S_clocks_S_hclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_hclk, clocks, 0)
#define DT_N_S_clocks_S_hclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_hclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_hclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_hclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/hclkdiv1024
 *
 * Node identifier: DT_N_S_clocks_S_hclkdiv1024
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_hclkdiv1024_PATH "/clocks/hclkdiv1024"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_hclkdiv1024_FULL_NAME "hclkdiv1024"
#define DT_N_S_clocks_S_hclkdiv1024_FULL_NAME_UNQUOTED hclkdiv1024
#define DT_N_S_clocks_S_hclkdiv1024_FULL_NAME_TOKEN hclkdiv1024
#define DT_N_S_clocks_S_hclkdiv1024_FULL_NAME_UPPER_TOKEN HCLKDIV1024

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_hclkdiv1024_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_hclkdiv1024_CHILD_IDX 6

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_hclkdiv1024_NODELABEL_NUM 1
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_NODELABEL(fn) fn(hclkdiv1024)
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_NODELABEL_VARGS(fn, ...) fn(hclkdiv1024, __VA_ARGS__)
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_hclkdiv1024_CHILD_NUM 0
#define DT_N_S_clocks_S_hclkdiv1024_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_hclkdiv1024_ORD 23
#define DT_N_S_clocks_S_hclkdiv1024_ORD_STR_SORTABLE 00023

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_hclkdiv1024_REQUIRES_ORDS \
	14, /* /clocks */ \
	22, /* /clocks/hclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_hclkdiv1024_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_hclkdiv1024_EXISTS 1
#define DT_N_INST_6_fixed_factor_clock DT_N_S_clocks_S_hclkdiv1024
#define DT_N_NODELABEL_hclkdiv1024     DT_N_S_clocks_S_hclkdiv1024

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_hclkdiv1024_REG_NUM 0
#define DT_N_S_clocks_S_hclkdiv1024_RANGES_NUM 0
#define DT_N_S_clocks_S_hclkdiv1024_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_hclkdiv1024_IRQ_NUM 0
#define DT_N_S_clocks_S_hclkdiv1024_IRQ_LEVEL 0
#define DT_N_S_clocks_S_hclkdiv1024_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_hclkdiv1024_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_hclkdiv1024_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_hclkdiv1024_P_clock_div 1024
#define DT_N_S_clocks_S_hclkdiv1024_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_hclkdiv1024_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_hclkdiv1024_P_clocks_IDX_0_PH DT_N_S_clocks_S_hclk
#define DT_N_S_clocks_S_hclkdiv1024_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_hclkdiv1024, clocks, 0)
#define DT_N_S_clocks_S_hclkdiv1024_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_hclkdiv1024, clocks, 0)
#define DT_N_S_clocks_S_hclkdiv1024_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_hclkdiv1024, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hclkdiv1024_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_hclkdiv1024, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hclkdiv1024_P_clocks_LEN 1
#define DT_N_S_clocks_S_hclkdiv1024_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/hfrcodpllrt
 *
 * Node identifier: DT_N_S_clocks_S_hfrcodpllrt
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_hfrcodpllrt_PATH "/clocks/hfrcodpllrt"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_hfrcodpllrt_FULL_NAME "hfrcodpllrt"
#define DT_N_S_clocks_S_hfrcodpllrt_FULL_NAME_UNQUOTED hfrcodpllrt
#define DT_N_S_clocks_S_hfrcodpllrt_FULL_NAME_TOKEN hfrcodpllrt
#define DT_N_S_clocks_S_hfrcodpllrt_FULL_NAME_UPPER_TOKEN HFRCODPLLRT

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_hfrcodpllrt_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_hfrcodpllrt_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_hfrcodpllrt_NODELABEL_NUM 1
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_NODELABEL(fn) fn(hfrcodpllrt)
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_NODELABEL_VARGS(fn, ...) fn(hfrcodpllrt, __VA_ARGS__)
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_hfrcodpllrt_CHILD_NUM 0
#define DT_N_S_clocks_S_hfrcodpllrt_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_hfrcodpllrt_ORD 24
#define DT_N_S_clocks_S_hfrcodpllrt_ORD_STR_SORTABLE 00024

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_hfrcodpllrt_REQUIRES_ORDS \
	14, /* /clocks */ \
	18, /* /soc/hfrcodpll@50010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_hfrcodpllrt_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_hfrcodpllrt_EXISTS 1
#define DT_N_INST_1_fixed_factor_clock DT_N_S_clocks_S_hfrcodpllrt
#define DT_N_NODELABEL_hfrcodpllrt     DT_N_S_clocks_S_hfrcodpllrt

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_hfrcodpllrt_REG_NUM 0
#define DT_N_S_clocks_S_hfrcodpllrt_RANGES_NUM 0
#define DT_N_S_clocks_S_hfrcodpllrt_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_hfrcodpllrt_IRQ_NUM 0
#define DT_N_S_clocks_S_hfrcodpllrt_IRQ_LEVEL 0
#define DT_N_S_clocks_S_hfrcodpllrt_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_hfrcodpllrt_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_hfrcodpllrt_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_hfrcodpllrt_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_hfrcodpllrt_P_clocks_IDX_0_PH DT_N_S_soc_S_hfrcodpll_50010000
#define DT_N_S_clocks_S_hfrcodpllrt_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_hfrcodpllrt, clocks, 0)
#define DT_N_S_clocks_S_hfrcodpllrt_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_hfrcodpllrt, clocks, 0)
#define DT_N_S_clocks_S_hfrcodpllrt_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_hfrcodpllrt, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hfrcodpllrt_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_hfrcodpllrt, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hfrcodpllrt_P_clocks_LEN 1
#define DT_N_S_clocks_S_hfrcodpllrt_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/hfxort
 *
 * Node identifier: DT_N_S_clocks_S_hfxort
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_hfxort_PATH "/clocks/hfxort"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_hfxort_FULL_NAME "hfxort"
#define DT_N_S_clocks_S_hfxort_FULL_NAME_UNQUOTED hfxort
#define DT_N_S_clocks_S_hfxort_FULL_NAME_TOKEN hfxort
#define DT_N_S_clocks_S_hfxort_FULL_NAME_UPPER_TOKEN HFXORT

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_hfxort_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_hfxort_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_hfxort_NODELABEL_NUM 1
#define DT_N_S_clocks_S_hfxort_FOREACH_NODELABEL(fn) fn(hfxort)
#define DT_N_S_clocks_S_hfxort_FOREACH_NODELABEL_VARGS(fn, ...) fn(hfxort, __VA_ARGS__)
#define DT_N_S_clocks_S_hfxort_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_hfxort_CHILD_NUM 0
#define DT_N_S_clocks_S_hfxort_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_hfxort_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_hfxort_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_hfxort_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_hfxort_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_hfxort_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_hfxort_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_hfxort_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_hfxort_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_hfxort_ORD 25
#define DT_N_S_clocks_S_hfxort_ORD_STR_SORTABLE 00025

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_hfxort_REQUIRES_ORDS \
	14, /* /clocks */ \
	17, /* /soc/hfxo@5a004000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_hfxort_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_hfxort_EXISTS 1
#define DT_N_INST_0_fixed_factor_clock DT_N_S_clocks_S_hfxort
#define DT_N_NODELABEL_hfxort          DT_N_S_clocks_S_hfxort

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_hfxort_REG_NUM 0
#define DT_N_S_clocks_S_hfxort_RANGES_NUM 0
#define DT_N_S_clocks_S_hfxort_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_hfxort_IRQ_NUM 0
#define DT_N_S_clocks_S_hfxort_IRQ_LEVEL 0
#define DT_N_S_clocks_S_hfxort_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_hfxort_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_hfxort_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_hfxort_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_hfxort_P_clocks_IDX_0_PH DT_N_S_soc_S_hfxo_5a004000
#define DT_N_S_clocks_S_hfxort_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_hfxort, clocks, 0)
#define DT_N_S_clocks_S_hfxort_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_hfxort, clocks, 0)
#define DT_N_S_clocks_S_hfxort_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_hfxort, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hfxort_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_hfxort, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_hfxort_P_clocks_LEN 1
#define DT_N_S_clocks_S_hfxort_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/em01grpaclk
 *
 * Node identifier: DT_N_S_clocks_S_em01grpaclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_em01grpaclk_PATH "/clocks/em01grpaclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_em01grpaclk_FULL_NAME "em01grpaclk"
#define DT_N_S_clocks_S_em01grpaclk_FULL_NAME_UNQUOTED em01grpaclk
#define DT_N_S_clocks_S_em01grpaclk_FULL_NAME_TOKEN em01grpaclk
#define DT_N_S_clocks_S_em01grpaclk_FULL_NAME_UPPER_TOKEN EM01GRPACLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_em01grpaclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_em01grpaclk_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_em01grpaclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_NODELABEL(fn) fn(em01grpaclk)
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(em01grpaclk, __VA_ARGS__)
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_em01grpaclk_CHILD_NUM 0
#define DT_N_S_clocks_S_em01grpaclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_em01grpaclk_ORD 26
#define DT_N_S_clocks_S_em01grpaclk_ORD_STR_SORTABLE 00026

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_em01grpaclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	18, /* /soc/hfrcodpll@50010000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_em01grpaclk_SUPPORTS_ORDS \
	27, /* /clocks/iadcclk */ \
	35, /* /clocks/vdac0clk */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_em01grpaclk_EXISTS 1
#define DT_N_INST_8_fixed_factor_clock DT_N_S_clocks_S_em01grpaclk
#define DT_N_NODELABEL_em01grpaclk     DT_N_S_clocks_S_em01grpaclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_em01grpaclk_REG_NUM 0
#define DT_N_S_clocks_S_em01grpaclk_RANGES_NUM 0
#define DT_N_S_clocks_S_em01grpaclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_em01grpaclk_IRQ_NUM 0
#define DT_N_S_clocks_S_em01grpaclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_em01grpaclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_em01grpaclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_em01grpaclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_em01grpaclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_em01grpaclk_P_clocks_IDX_0_PH DT_N_S_soc_S_hfrcodpll_50010000
#define DT_N_S_clocks_S_em01grpaclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_em01grpaclk, clocks, 0)
#define DT_N_S_clocks_S_em01grpaclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_em01grpaclk, clocks, 0)
#define DT_N_S_clocks_S_em01grpaclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_em01grpaclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_em01grpaclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_em01grpaclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_em01grpaclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_em01grpaclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/iadcclk
 *
 * Node identifier: DT_N_S_clocks_S_iadcclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_iadcclk_PATH "/clocks/iadcclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_iadcclk_FULL_NAME "iadcclk"
#define DT_N_S_clocks_S_iadcclk_FULL_NAME_UNQUOTED iadcclk
#define DT_N_S_clocks_S_iadcclk_FULL_NAME_TOKEN iadcclk
#define DT_N_S_clocks_S_iadcclk_FULL_NAME_UPPER_TOKEN IADCCLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_iadcclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_iadcclk_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_iadcclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_iadcclk_FOREACH_NODELABEL(fn) fn(iadcclk)
#define DT_N_S_clocks_S_iadcclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(iadcclk, __VA_ARGS__)
#define DT_N_S_clocks_S_iadcclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_iadcclk_CHILD_NUM 0
#define DT_N_S_clocks_S_iadcclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_iadcclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_iadcclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_iadcclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_iadcclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_iadcclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_iadcclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_iadcclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_iadcclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_iadcclk_ORD 27
#define DT_N_S_clocks_S_iadcclk_ORD_STR_SORTABLE 00027

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_iadcclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	26, /* /clocks/em01grpaclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_iadcclk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_iadcclk_EXISTS 1
#define DT_N_INST_10_fixed_factor_clock DT_N_S_clocks_S_iadcclk
#define DT_N_NODELABEL_iadcclk          DT_N_S_clocks_S_iadcclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_iadcclk_REG_NUM 0
#define DT_N_S_clocks_S_iadcclk_RANGES_NUM 0
#define DT_N_S_clocks_S_iadcclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_iadcclk_IRQ_NUM 0
#define DT_N_S_clocks_S_iadcclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_iadcclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_iadcclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_iadcclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_iadcclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_iadcclk_P_clocks_IDX_0_PH DT_N_S_clocks_S_em01grpaclk
#define DT_N_S_clocks_S_iadcclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_iadcclk, clocks, 0)
#define DT_N_S_clocks_S_iadcclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_iadcclk, clocks, 0)
#define DT_N_S_clocks_S_iadcclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_iadcclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_iadcclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_iadcclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_iadcclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_iadcclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/pclk
 *
 * Node identifier: DT_N_S_clocks_S_pclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pclk_PATH "/clocks/pclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pclk_FULL_NAME "pclk"
#define DT_N_S_clocks_S_pclk_FULL_NAME_UNQUOTED pclk
#define DT_N_S_clocks_S_pclk_FULL_NAME_TOKEN pclk
#define DT_N_S_clocks_S_pclk_FULL_NAME_UPPER_TOKEN PCLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pclk_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_pclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_pclk_FOREACH_NODELABEL(fn) fn(pclk)
#define DT_N_S_clocks_S_pclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(pclk, __VA_ARGS__)
#define DT_N_S_clocks_S_pclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pclk_CHILD_NUM 0
#define DT_N_S_clocks_S_pclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pclk_ORD 28
#define DT_N_S_clocks_S_pclk_ORD_STR_SORTABLE 00028

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	22, /* /clocks/hclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pclk_SUPPORTS_ORDS \
	29, /* /clocks/lspclk */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pclk_EXISTS 1
#define DT_N_INST_4_fixed_factor_clock DT_N_S_clocks_S_pclk
#define DT_N_NODELABEL_pclk            DT_N_S_clocks_S_pclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pclk_REG_NUM 0
#define DT_N_S_clocks_S_pclk_RANGES_NUM 0
#define DT_N_S_clocks_S_pclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pclk_IRQ_NUM 0
#define DT_N_S_clocks_S_pclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_pclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pclk_P_clock_div 2
#define DT_N_S_clocks_S_pclk_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_pclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pclk_P_clocks_IDX_0_PH DT_N_S_clocks_S_hclk
#define DT_N_S_clocks_S_pclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pclk, clocks, 0)
#define DT_N_S_clocks_S_pclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pclk, clocks, 0)
#define DT_N_S_clocks_S_pclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_pclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/lspclk
 *
 * Node identifier: DT_N_S_clocks_S_lspclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_lspclk_PATH "/clocks/lspclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_lspclk_FULL_NAME "lspclk"
#define DT_N_S_clocks_S_lspclk_FULL_NAME_UNQUOTED lspclk
#define DT_N_S_clocks_S_lspclk_FULL_NAME_TOKEN lspclk
#define DT_N_S_clocks_S_lspclk_FULL_NAME_UPPER_TOKEN LSPCLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_lspclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_lspclk_CHILD_IDX 5

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_lspclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_lspclk_FOREACH_NODELABEL(fn) fn(lspclk)
#define DT_N_S_clocks_S_lspclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(lspclk, __VA_ARGS__)
#define DT_N_S_clocks_S_lspclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_lspclk_CHILD_NUM 0
#define DT_N_S_clocks_S_lspclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_lspclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_lspclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_lspclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_lspclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_lspclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_lspclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_lspclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_lspclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_lspclk_ORD 29
#define DT_N_S_clocks_S_lspclk_ORD_STR_SORTABLE 00029

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_lspclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	28, /* /clocks/pclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_lspclk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_lspclk_EXISTS 1
#define DT_N_INST_5_fixed_factor_clock DT_N_S_clocks_S_lspclk
#define DT_N_NODELABEL_lspclk          DT_N_S_clocks_S_lspclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_lspclk_REG_NUM 0
#define DT_N_S_clocks_S_lspclk_RANGES_NUM 0
#define DT_N_S_clocks_S_lspclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_lspclk_IRQ_NUM 0
#define DT_N_S_clocks_S_lspclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_lspclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_lspclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_lspclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_lspclk_P_clock_div 2
#define DT_N_S_clocks_S_lspclk_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_lspclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_lspclk_P_clocks_IDX_0_PH DT_N_S_clocks_S_pclk
#define DT_N_S_clocks_S_lspclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_lspclk, clocks, 0)
#define DT_N_S_clocks_S_lspclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_lspclk, clocks, 0)
#define DT_N_S_clocks_S_lspclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_lspclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_lspclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_lspclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_lspclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_lspclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/em23grpaclk
 *
 * Node identifier: DT_N_S_clocks_S_em23grpaclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_em23grpaclk_PATH "/clocks/em23grpaclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_em23grpaclk_FULL_NAME "em23grpaclk"
#define DT_N_S_clocks_S_em23grpaclk_FULL_NAME_UNQUOTED em23grpaclk
#define DT_N_S_clocks_S_em23grpaclk_FULL_NAME_TOKEN em23grpaclk
#define DT_N_S_clocks_S_em23grpaclk_FULL_NAME_UPPER_TOKEN EM23GRPACLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_em23grpaclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_em23grpaclk_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_em23grpaclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_NODELABEL(fn) fn(em23grpaclk)
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(em23grpaclk, __VA_ARGS__)
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_em23grpaclk_CHILD_NUM 0
#define DT_N_S_clocks_S_em23grpaclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_em23grpaclk_ORD 30
#define DT_N_S_clocks_S_em23grpaclk_ORD_STR_SORTABLE 00030

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_em23grpaclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	15, /* /soc/lfxo@50020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_em23grpaclk_SUPPORTS_ORDS \
	31, /* /clocks/pcnt0clk */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_em23grpaclk_EXISTS 1
#define DT_N_INST_11_fixed_factor_clock DT_N_S_clocks_S_em23grpaclk
#define DT_N_NODELABEL_em23grpaclk      DT_N_S_clocks_S_em23grpaclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_em23grpaclk_REG_NUM 0
#define DT_N_S_clocks_S_em23grpaclk_RANGES_NUM 0
#define DT_N_S_clocks_S_em23grpaclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_em23grpaclk_IRQ_NUM 0
#define DT_N_S_clocks_S_em23grpaclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_em23grpaclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_em23grpaclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_em23grpaclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_em23grpaclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_em23grpaclk_P_clocks_IDX_0_PH DT_N_S_soc_S_lfxo_50020000
#define DT_N_S_clocks_S_em23grpaclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_em23grpaclk, clocks, 0)
#define DT_N_S_clocks_S_em23grpaclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_em23grpaclk, clocks, 0)
#define DT_N_S_clocks_S_em23grpaclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_em23grpaclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_em23grpaclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_em23grpaclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_em23grpaclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_em23grpaclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/pcnt0clk
 *
 * Node identifier: DT_N_S_clocks_S_pcnt0clk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_pcnt0clk_PATH "/clocks/pcnt0clk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_pcnt0clk_FULL_NAME "pcnt0clk"
#define DT_N_S_clocks_S_pcnt0clk_FULL_NAME_UNQUOTED pcnt0clk
#define DT_N_S_clocks_S_pcnt0clk_FULL_NAME_TOKEN pcnt0clk
#define DT_N_S_clocks_S_pcnt0clk_FULL_NAME_UPPER_TOKEN PCNT0CLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_pcnt0clk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_pcnt0clk_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_pcnt0clk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_NODELABEL(fn) fn(pcnt0clk)
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_NODELABEL_VARGS(fn, ...) fn(pcnt0clk, __VA_ARGS__)
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_pcnt0clk_CHILD_NUM 0
#define DT_N_S_clocks_S_pcnt0clk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_pcnt0clk_ORD 31
#define DT_N_S_clocks_S_pcnt0clk_ORD_STR_SORTABLE 00031

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_pcnt0clk_REQUIRES_ORDS \
	14, /* /clocks */ \
	30, /* /clocks/em23grpaclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_pcnt0clk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_pcnt0clk_EXISTS 1
#define DT_N_INST_16_fixed_factor_clock DT_N_S_clocks_S_pcnt0clk
#define DT_N_NODELABEL_pcnt0clk         DT_N_S_clocks_S_pcnt0clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_pcnt0clk_REG_NUM 0
#define DT_N_S_clocks_S_pcnt0clk_RANGES_NUM 0
#define DT_N_S_clocks_S_pcnt0clk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_pcnt0clk_IRQ_NUM 0
#define DT_N_S_clocks_S_pcnt0clk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_pcnt0clk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_pcnt0clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_pcnt0clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_pcnt0clk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_pcnt0clk_P_clocks_IDX_0_PH DT_N_S_clocks_S_em23grpaclk
#define DT_N_S_clocks_S_pcnt0clk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_pcnt0clk, clocks, 0)
#define DT_N_S_clocks_S_pcnt0clk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_pcnt0clk, clocks, 0)
#define DT_N_S_clocks_S_pcnt0clk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_pcnt0clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pcnt0clk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_pcnt0clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_pcnt0clk_P_clocks_LEN 1
#define DT_N_S_clocks_S_pcnt0clk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/sysrtcclk
 *
 * Node identifier: DT_N_S_clocks_S_sysrtcclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_sysrtcclk_PATH "/clocks/sysrtcclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_sysrtcclk_FULL_NAME "sysrtcclk"
#define DT_N_S_clocks_S_sysrtcclk_FULL_NAME_UNQUOTED sysrtcclk
#define DT_N_S_clocks_S_sysrtcclk_FULL_NAME_TOKEN sysrtcclk
#define DT_N_S_clocks_S_sysrtcclk_FULL_NAME_UPPER_TOKEN SYSRTCCLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_sysrtcclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_sysrtcclk_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_sysrtcclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_NODELABEL(fn) fn(sysrtcclk)
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(sysrtcclk, __VA_ARGS__)
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_sysrtcclk_CHILD_NUM 0
#define DT_N_S_clocks_S_sysrtcclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_sysrtcclk_ORD 32
#define DT_N_S_clocks_S_sysrtcclk_ORD_STR_SORTABLE 00032

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_sysrtcclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	15, /* /soc/lfxo@50020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_sysrtcclk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_sysrtcclk_EXISTS 1
#define DT_N_INST_13_fixed_factor_clock DT_N_S_clocks_S_sysrtcclk
#define DT_N_NODELABEL_sysrtcclk        DT_N_S_clocks_S_sysrtcclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_sysrtcclk_REG_NUM 0
#define DT_N_S_clocks_S_sysrtcclk_RANGES_NUM 0
#define DT_N_S_clocks_S_sysrtcclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_sysrtcclk_IRQ_NUM 0
#define DT_N_S_clocks_S_sysrtcclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_sysrtcclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_sysrtcclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_sysrtcclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_sysrtcclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_sysrtcclk_P_clocks_IDX_0_PH DT_N_S_soc_S_lfxo_50020000
#define DT_N_S_clocks_S_sysrtcclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_sysrtcclk, clocks, 0)
#define DT_N_S_clocks_S_sysrtcclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_sysrtcclk, clocks, 0)
#define DT_N_S_clocks_S_sysrtcclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_sysrtcclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_sysrtcclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_sysrtcclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_sysrtcclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_sysrtcclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/systickclk
 *
 * Node identifier: DT_N_S_clocks_S_systickclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_systickclk_PATH "/clocks/systickclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_systickclk_FULL_NAME "systickclk"
#define DT_N_S_clocks_S_systickclk_FULL_NAME_UNQUOTED systickclk
#define DT_N_S_clocks_S_systickclk_FULL_NAME_TOKEN systickclk
#define DT_N_S_clocks_S_systickclk_FULL_NAME_UPPER_TOKEN SYSTICKCLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_systickclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_systickclk_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_systickclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_systickclk_FOREACH_NODELABEL(fn) fn(systickclk)
#define DT_N_S_clocks_S_systickclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(systickclk, __VA_ARGS__)
#define DT_N_S_clocks_S_systickclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_systickclk_CHILD_NUM 0
#define DT_N_S_clocks_S_systickclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_systickclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_systickclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_systickclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_systickclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_systickclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_systickclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_systickclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_systickclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_systickclk_ORD 33
#define DT_N_S_clocks_S_systickclk_ORD_STR_SORTABLE 00033

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_systickclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	22, /* /clocks/hclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_systickclk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_systickclk_EXISTS 1
#define DT_N_INST_18_fixed_factor_clock DT_N_S_clocks_S_systickclk
#define DT_N_NODELABEL_systickclk       DT_N_S_clocks_S_systickclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_systickclk_REG_NUM 0
#define DT_N_S_clocks_S_systickclk_RANGES_NUM 0
#define DT_N_S_clocks_S_systickclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_systickclk_IRQ_NUM 0
#define DT_N_S_clocks_S_systickclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_systickclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_systickclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_systickclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_systickclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_systickclk_P_clocks_IDX_0_PH DT_N_S_clocks_S_hclk
#define DT_N_S_clocks_S_systickclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_systickclk, clocks, 0)
#define DT_N_S_clocks_S_systickclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_systickclk, clocks, 0)
#define DT_N_S_clocks_S_systickclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_systickclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_systickclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_systickclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_systickclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_systickclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/traceclk
 *
 * Node identifier: DT_N_S_clocks_S_traceclk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_traceclk_PATH "/clocks/traceclk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_traceclk_FULL_NAME "traceclk"
#define DT_N_S_clocks_S_traceclk_FULL_NAME_UNQUOTED traceclk
#define DT_N_S_clocks_S_traceclk_FULL_NAME_TOKEN traceclk
#define DT_N_S_clocks_S_traceclk_FULL_NAME_UPPER_TOKEN TRACECLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_traceclk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_traceclk_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_traceclk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_traceclk_FOREACH_NODELABEL(fn) fn(traceclk)
#define DT_N_S_clocks_S_traceclk_FOREACH_NODELABEL_VARGS(fn, ...) fn(traceclk, __VA_ARGS__)
#define DT_N_S_clocks_S_traceclk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_traceclk_CHILD_NUM 0
#define DT_N_S_clocks_S_traceclk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_traceclk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_traceclk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_traceclk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_traceclk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_traceclk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_traceclk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_traceclk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_traceclk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_traceclk_ORD 34
#define DT_N_S_clocks_S_traceclk_ORD_STR_SORTABLE 00034

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_traceclk_REQUIRES_ORDS \
	14, /* /clocks */ \
	21, /* /clocks/sysclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_traceclk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_traceclk_EXISTS 1
#define DT_N_INST_7_fixed_factor_clock DT_N_S_clocks_S_traceclk
#define DT_N_NODELABEL_traceclk        DT_N_S_clocks_S_traceclk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_traceclk_REG_NUM 0
#define DT_N_S_clocks_S_traceclk_RANGES_NUM 0
#define DT_N_S_clocks_S_traceclk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_traceclk_IRQ_NUM 0
#define DT_N_S_clocks_S_traceclk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_traceclk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_traceclk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_traceclk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_traceclk_P_clock_div 1
#define DT_N_S_clocks_S_traceclk_P_clock_div_EXISTS 1
#define DT_N_S_clocks_S_traceclk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_traceclk_P_clocks_IDX_0_PH DT_N_S_clocks_S_sysclk
#define DT_N_S_clocks_S_traceclk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_traceclk, clocks, 0)
#define DT_N_S_clocks_S_traceclk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_traceclk, clocks, 0)
#define DT_N_S_clocks_S_traceclk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_traceclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_traceclk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_traceclk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_traceclk_P_clocks_LEN 1
#define DT_N_S_clocks_S_traceclk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/vdac0clk
 *
 * Node identifier: DT_N_S_clocks_S_vdac0clk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_vdac0clk_PATH "/clocks/vdac0clk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_vdac0clk_FULL_NAME "vdac0clk"
#define DT_N_S_clocks_S_vdac0clk_FULL_NAME_UNQUOTED vdac0clk
#define DT_N_S_clocks_S_vdac0clk_FULL_NAME_TOKEN vdac0clk
#define DT_N_S_clocks_S_vdac0clk_FULL_NAME_UPPER_TOKEN VDAC0CLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_vdac0clk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_vdac0clk_CHILD_IDX 19

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_vdac0clk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_vdac0clk_FOREACH_NODELABEL(fn) fn(vdac0clk)
#define DT_N_S_clocks_S_vdac0clk_FOREACH_NODELABEL_VARGS(fn, ...) fn(vdac0clk, __VA_ARGS__)
#define DT_N_S_clocks_S_vdac0clk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_vdac0clk_CHILD_NUM 0
#define DT_N_S_clocks_S_vdac0clk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_vdac0clk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_vdac0clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_vdac0clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_vdac0clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_vdac0clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_vdac0clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_vdac0clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_vdac0clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_vdac0clk_ORD 35
#define DT_N_S_clocks_S_vdac0clk_ORD_STR_SORTABLE 00035

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_vdac0clk_REQUIRES_ORDS \
	14, /* /clocks */ \
	26, /* /clocks/em01grpaclk */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_vdac0clk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_vdac0clk_EXISTS 1
#define DT_N_INST_19_fixed_factor_clock DT_N_S_clocks_S_vdac0clk
#define DT_N_NODELABEL_vdac0clk         DT_N_S_clocks_S_vdac0clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_vdac0clk_REG_NUM 0
#define DT_N_S_clocks_S_vdac0clk_RANGES_NUM 0
#define DT_N_S_clocks_S_vdac0clk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_vdac0clk_IRQ_NUM 0
#define DT_N_S_clocks_S_vdac0clk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_vdac0clk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_vdac0clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_vdac0clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_vdac0clk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_vdac0clk_P_clocks_IDX_0_PH DT_N_S_clocks_S_em01grpaclk
#define DT_N_S_clocks_S_vdac0clk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_vdac0clk, clocks, 0)
#define DT_N_S_clocks_S_vdac0clk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_vdac0clk, clocks, 0)
#define DT_N_S_clocks_S_vdac0clk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_vdac0clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_vdac0clk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_vdac0clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_vdac0clk_P_clocks_LEN 1
#define DT_N_S_clocks_S_vdac0clk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/wdog0clk
 *
 * Node identifier: DT_N_S_clocks_S_wdog0clk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_wdog0clk_PATH "/clocks/wdog0clk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_wdog0clk_FULL_NAME "wdog0clk"
#define DT_N_S_clocks_S_wdog0clk_FULL_NAME_UNQUOTED wdog0clk
#define DT_N_S_clocks_S_wdog0clk_FULL_NAME_TOKEN wdog0clk
#define DT_N_S_clocks_S_wdog0clk_FULL_NAME_UPPER_TOKEN WDOG0CLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_wdog0clk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_wdog0clk_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_wdog0clk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_wdog0clk_FOREACH_NODELABEL(fn) fn(wdog0clk)
#define DT_N_S_clocks_S_wdog0clk_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdog0clk, __VA_ARGS__)
#define DT_N_S_clocks_S_wdog0clk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_wdog0clk_CHILD_NUM 0
#define DT_N_S_clocks_S_wdog0clk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_wdog0clk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_wdog0clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_wdog0clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_wdog0clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_wdog0clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_wdog0clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_wdog0clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_wdog0clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_wdog0clk_ORD 36
#define DT_N_S_clocks_S_wdog0clk_ORD_STR_SORTABLE 00036

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_wdog0clk_REQUIRES_ORDS \
	14, /* /clocks */ \
	15, /* /soc/lfxo@50020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_wdog0clk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_wdog0clk_EXISTS 1
#define DT_N_INST_14_fixed_factor_clock DT_N_S_clocks_S_wdog0clk
#define DT_N_NODELABEL_wdog0clk         DT_N_S_clocks_S_wdog0clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_wdog0clk_REG_NUM 0
#define DT_N_S_clocks_S_wdog0clk_RANGES_NUM 0
#define DT_N_S_clocks_S_wdog0clk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_wdog0clk_IRQ_NUM 0
#define DT_N_S_clocks_S_wdog0clk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_wdog0clk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_wdog0clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_wdog0clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_wdog0clk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_wdog0clk_P_clocks_IDX_0_PH DT_N_S_soc_S_lfxo_50020000
#define DT_N_S_clocks_S_wdog0clk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_wdog0clk, clocks, 0)
#define DT_N_S_clocks_S_wdog0clk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_wdog0clk, clocks, 0)
#define DT_N_S_clocks_S_wdog0clk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_wdog0clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_wdog0clk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_wdog0clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_wdog0clk_P_clocks_LEN 1
#define DT_N_S_clocks_S_wdog0clk_P_clocks_EXISTS 1

/*
 * Devicetree node: /clocks/wdog1clk
 *
 * Node identifier: DT_N_S_clocks_S_wdog1clk
 *
 * Binding (compatible = fixed-factor-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-factor-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_clocks_S_wdog1clk_PATH "/clocks/wdog1clk"

/* Node's name with unit-address: */
#define DT_N_S_clocks_S_wdog1clk_FULL_NAME "wdog1clk"
#define DT_N_S_clocks_S_wdog1clk_FULL_NAME_UNQUOTED wdog1clk
#define DT_N_S_clocks_S_wdog1clk_FULL_NAME_TOKEN wdog1clk
#define DT_N_S_clocks_S_wdog1clk_FULL_NAME_UPPER_TOKEN WDOG1CLK

/* Node parent (/clocks) identifier: */
#define DT_N_S_clocks_S_wdog1clk_PARENT DT_N_S_clocks

/* Node's index in its parent's list of children: */
#define DT_N_S_clocks_S_wdog1clk_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_clocks_S_wdog1clk_NODELABEL_NUM 1
#define DT_N_S_clocks_S_wdog1clk_FOREACH_NODELABEL(fn) fn(wdog1clk)
#define DT_N_S_clocks_S_wdog1clk_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdog1clk, __VA_ARGS__)
#define DT_N_S_clocks_S_wdog1clk_FOREACH_ANCESTOR(fn) fn(DT_N_S_clocks) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_clocks_S_wdog1clk_CHILD_NUM 0
#define DT_N_S_clocks_S_wdog1clk_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_clocks_S_wdog1clk_FOREACH_CHILD(fn) 
#define DT_N_S_clocks_S_wdog1clk_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_clocks_S_wdog1clk_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_clocks_S_wdog1clk_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_clocks_S_wdog1clk_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_clocks_S_wdog1clk_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_clocks_S_wdog1clk_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_clocks_S_wdog1clk_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_clocks_S_wdog1clk_ORD 37
#define DT_N_S_clocks_S_wdog1clk_ORD_STR_SORTABLE 00037

/* Ordinals for what this node depends on directly: */
#define DT_N_S_clocks_S_wdog1clk_REQUIRES_ORDS \
	14, /* /clocks */ \
	15, /* /soc/lfxo@50020000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_clocks_S_wdog1clk_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_clocks_S_wdog1clk_EXISTS 1
#define DT_N_INST_15_fixed_factor_clock DT_N_S_clocks_S_wdog1clk
#define DT_N_NODELABEL_wdog1clk         DT_N_S_clocks_S_wdog1clk

/* Macros for properties that are special in the specification: */
#define DT_N_S_clocks_S_wdog1clk_REG_NUM 0
#define DT_N_S_clocks_S_wdog1clk_RANGES_NUM 0
#define DT_N_S_clocks_S_wdog1clk_FOREACH_RANGE(fn) 
#define DT_N_S_clocks_S_wdog1clk_IRQ_NUM 0
#define DT_N_S_clocks_S_wdog1clk_IRQ_LEVEL 0
#define DT_N_S_clocks_S_wdog1clk_COMPAT_MATCHES_fixed_factor_clock 1
#define DT_N_S_clocks_S_wdog1clk_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_clocks_S_wdog1clk_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_clocks_S_wdog1clk_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_clocks_S_wdog1clk_P_clocks_IDX_0_PH DT_N_S_soc_S_lfxo_50020000
#define DT_N_S_clocks_S_wdog1clk_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_clocks_S_wdog1clk, clocks, 0)
#define DT_N_S_clocks_S_wdog1clk_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_clocks_S_wdog1clk, clocks, 0)
#define DT_N_S_clocks_S_wdog1clk_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_clocks_S_wdog1clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_wdog1clk_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_clocks_S_wdog1clk, clocks, 0, __VA_ARGS__)
#define DT_N_S_clocks_S_wdog1clk_P_clocks_LEN 1
#define DT_N_S_clocks_S_wdog1clk_P_clocks_EXISTS 1

/*
 * Devicetree node: /cpus
 *
 * Node identifier: DT_N_S_cpus
 */

/* Node's full path: */
#define DT_N_S_cpus_PATH "/cpus"

/* Node's name with unit-address: */
#define DT_N_S_cpus_FULL_NAME "cpus"
#define DT_N_S_cpus_FULL_NAME_UNQUOTED cpus
#define DT_N_S_cpus_FULL_NAME_TOKEN cpus
#define DT_N_S_cpus_FULL_NAME_UPPER_TOKEN CPUS

/* Node parent (/) identifier: */
#define DT_N_S_cpus_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_NODELABEL_NUM 0
#define DT_N_S_cpus_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_CHILD_NUM 2
#define DT_N_S_cpus_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)
#define DT_N_S_cpus_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_ORD 38
#define DT_N_S_cpus_ORD_STR_SORTABLE 00038

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_REQUIRES_ORDS \
	0, /* / */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_SUPPORTS_ORDS \
	39, /* /cpus/power-states */ \
	43, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_REG_NUM 0
#define DT_N_S_cpus_RANGES_NUM 0
#define DT_N_S_cpus_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_IRQ_NUM 0
#define DT_N_S_cpus_IRQ_LEVEL 0
#define DT_N_S_cpus_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states
 *
 * Node identifier: DT_N_S_cpus_S_power_states
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_PATH "/cpus/power-states"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_FULL_NAME "power-states"
#define DT_N_S_cpus_S_power_states_FULL_NAME_UNQUOTED power-states
#define DT_N_S_cpus_S_power_states_FULL_NAME_TOKEN power_states
#define DT_N_S_cpus_S_power_states_FULL_NAME_UPPER_TOKEN POWER_STATES

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_power_states_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_NODELABEL_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL(fn) 
#define DT_N_S_cpus_S_power_states_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_CHILD_NUM 3
#define DT_N_S_cpus_S_power_states_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD(fn) fn(DT_N_S_cpus_S_power_states_S_em1) fn(DT_N_S_cpus_S_power_states_S_em2) fn(DT_N_S_cpus_S_power_states_S_em3)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_em1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_em2) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_em3)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_em1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_em2, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_em3, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_em1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_em2, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_em3, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_cpus_S_power_states_S_em1) fn(DT_N_S_cpus_S_power_states_S_em2)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_em1) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_em2)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_em1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_em2, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_em1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_cpus_S_power_states_S_em2, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_ORD 39
#define DT_N_S_cpus_S_power_states_ORD_STR_SORTABLE 00039

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_REQUIRES_ORDS \
	38, /* /cpus */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_SUPPORTS_ORDS \
	40, /* /cpus/power-states/em1 */ \
	41, /* /cpus/power-states/em2 */ \
	42, /* /cpus/power-states/em3 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_REG_NUM 0
#define DT_N_S_cpus_S_power_states_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /cpus/power-states/em1
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_em1
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_em1_PATH "/cpus/power-states/em1"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_em1_FULL_NAME "em1"
#define DT_N_S_cpus_S_power_states_S_em1_FULL_NAME_UNQUOTED em1
#define DT_N_S_cpus_S_power_states_S_em1_FULL_NAME_TOKEN em1
#define DT_N_S_cpus_S_power_states_S_em1_FULL_NAME_UPPER_TOKEN EM1

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_em1_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_em1_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_em1_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_NODELABEL(fn) fn(pstate_em1)
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_NODELABEL_VARGS(fn, ...) fn(pstate_em1, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_em1_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_em1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_em1_ORD 40
#define DT_N_S_cpus_S_power_states_S_em1_ORD_STR_SORTABLE 00040

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_em1_REQUIRES_ORDS \
	39, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_em1_SUPPORTS_ORDS \
	43, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_em1_EXISTS 1
#define DT_N_INST_0_zephyr_power_state DT_N_S_cpus_S_power_states_S_em1
#define DT_N_NODELABEL_pstate_em1      DT_N_S_cpus_S_power_states_S_em1

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_em1_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_em1_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_em1_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_em1_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_em1_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_em1_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_em1_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em1_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_em1_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em1_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_em1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_em1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name "runtime-idle"
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_STRING_UNQUOTED runtime-idle
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_STRING_TOKEN runtime_idle
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_STRING_UPPER_TOKEN RUNTIME_IDLE
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_IDX_0 "runtime-idle"
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_IDX_0_ENUM_IDX 1
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_IDX_0_ENUM_VAL_runtime_idle_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_em1, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_em1, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_em1, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_em1, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_em1_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em1_P_min_residency_us 4
#define DT_N_S_cpus_S_power_states_S_em1_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em1_P_exit_latency_us 2
#define DT_N_S_cpus_S_power_states_S_em1_P_exit_latency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em1_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_em1_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/power-states/em2
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_em2
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_em2_PATH "/cpus/power-states/em2"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_em2_FULL_NAME "em2"
#define DT_N_S_cpus_S_power_states_S_em2_FULL_NAME_UNQUOTED em2
#define DT_N_S_cpus_S_power_states_S_em2_FULL_NAME_TOKEN em2
#define DT_N_S_cpus_S_power_states_S_em2_FULL_NAME_UPPER_TOKEN EM2

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_em2_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_em2_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_em2_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_NODELABEL(fn) fn(pstate_em2)
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_NODELABEL_VARGS(fn, ...) fn(pstate_em2, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_em2_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_em2_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_em2_ORD 41
#define DT_N_S_cpus_S_power_states_S_em2_ORD_STR_SORTABLE 00041

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_em2_REQUIRES_ORDS \
	39, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_em2_SUPPORTS_ORDS \
	43, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_em2_EXISTS 1
#define DT_N_INST_1_zephyr_power_state DT_N_S_cpus_S_power_states_S_em2
#define DT_N_NODELABEL_pstate_em2      DT_N_S_cpus_S_power_states_S_em2

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_em2_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_em2_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_em2_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_em2_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_em2_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_em2_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_em2_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em2_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_em2_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em2_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_em2_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_em2_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_STRING_UNQUOTED suspend-to-idle
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_STRING_TOKEN suspend_to_idle
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_STRING_UPPER_TOKEN SUSPEND_TO_IDLE
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_IDX_0 "suspend-to-idle"
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_IDX_0_ENUM_IDX 2
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_IDX_0_ENUM_VAL_suspend_to_idle_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_em2, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_em2, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_em2, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_em2, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_em2_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em2_P_min_residency_us 260
#define DT_N_S_cpus_S_power_states_S_em2_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em2_P_exit_latency_us 250
#define DT_N_S_cpus_S_power_states_S_em2_P_exit_latency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em2_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_em2_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/power-states/em3
 *
 * Node identifier: DT_N_S_cpus_S_power_states_S_em3
 *
 * Binding (compatible = zephyr,power-state):
 *   $ZEPHYR_BASE/dts/bindings/power/zephyr,power-state.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_power_states_S_em3_PATH "/cpus/power-states/em3"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_power_states_S_em3_FULL_NAME "em3"
#define DT_N_S_cpus_S_power_states_S_em3_FULL_NAME_UNQUOTED em3
#define DT_N_S_cpus_S_power_states_S_em3_FULL_NAME_TOKEN em3
#define DT_N_S_cpus_S_power_states_S_em3_FULL_NAME_UPPER_TOKEN EM3

/* Node parent (/cpus/power-states) identifier: */
#define DT_N_S_cpus_S_power_states_S_em3_PARENT DT_N_S_cpus_S_power_states

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_power_states_S_em3_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_power_states_S_em3_NODELABEL_NUM 1
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_NODELABEL(fn) fn(pstate_em3)
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_NODELABEL_VARGS(fn, ...) fn(pstate_em3, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_power_states_S_em3_CHILD_NUM 0
#define DT_N_S_cpus_S_power_states_S_em3_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_power_states_S_em3_ORD 42
#define DT_N_S_cpus_S_power_states_S_em3_ORD_STR_SORTABLE 00042

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_power_states_S_em3_REQUIRES_ORDS \
	39, /* /cpus/power-states */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_power_states_S_em3_SUPPORTS_ORDS \
	43, /* /cpus/cpu@0 */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_power_states_S_em3_EXISTS 1
#define DT_N_INST_2_zephyr_power_state DT_N_S_cpus_S_power_states_S_em3
#define DT_N_NODELABEL_pstate_em3      DT_N_S_cpus_S_power_states_S_em3

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_power_states_S_em3_REG_NUM 0
#define DT_N_S_cpus_S_power_states_S_em3_RANGES_NUM 0
#define DT_N_S_cpus_S_power_states_S_em3_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_power_states_S_em3_IRQ_NUM 0
#define DT_N_S_cpus_S_power_states_S_em3_IRQ_LEVEL 0
#define DT_N_S_cpus_S_power_states_S_em3_COMPAT_MATCHES_zephyr_power_state 1
#define DT_N_S_cpus_S_power_states_S_em3_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em3_COMPAT_VENDOR_IDX_0 "Zephyr-specific binding"
#define DT_N_S_cpus_S_power_states_S_em3_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em3_COMPAT_MODEL_IDX_0 "power-state"
#define DT_N_S_cpus_S_power_states_S_em3_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_power_states_S_em3_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name "standby"
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_STRING_UNQUOTED standby
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_STRING_TOKEN standby
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_STRING_UPPER_TOKEN STANDBY
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_IDX_0 "standby"
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_IDX_0_ENUM_IDX 3
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_IDX_0_ENUM_VAL_standby_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_power_states_S_em3, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_power_states_S_em3, power_state_name, 0)
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_power_states_S_em3, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_power_states_S_em3, power_state_name, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_LEN 1
#define DT_N_S_cpus_S_power_states_S_em3_P_power_state_name_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em3_P_min_residency_us 20000
#define DT_N_S_cpus_S_power_states_S_em3_P_min_residency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em3_P_exit_latency_us 2000
#define DT_N_S_cpus_S_power_states_S_em3_P_exit_latency_us_EXISTS 1
#define DT_N_S_cpus_S_power_states_S_em3_P_zephyr_pm_device_disabled 0
#define DT_N_S_cpus_S_power_states_S_em3_P_zephyr_pm_device_disabled_EXISTS 1

/*
 * Devicetree node: /cpus/cpu@0
 *
 * Node identifier: DT_N_S_cpus_S_cpu_0
 *
 * Binding (compatible = arm,cortex-m33):
 *   $ZEPHYR_BASE/dts/bindings/cpu/arm,cortex-m33.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_cpus_S_cpu_0_PATH "/cpus/cpu@0"

/* Node's name with unit-address: */
#define DT_N_S_cpus_S_cpu_0_FULL_NAME "cpu@0"
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UNQUOTED cpu@0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_TOKEN cpu_0
#define DT_N_S_cpus_S_cpu_0_FULL_NAME_UPPER_TOKEN CPU_0

/* Node parent (/cpus) identifier: */
#define DT_N_S_cpus_S_cpu_0_PARENT DT_N_S_cpus

/* Node's index in its parent's list of children: */
#define DT_N_S_cpus_S_cpu_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_cpus_S_cpu_0_NODELABEL_NUM 1
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL(fn) fn(cpu0)
#define DT_N_S_cpus_S_cpu_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(cpu0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_cpus) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM 0
#define DT_N_S_cpus_S_cpu_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_cpus_S_cpu_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_cpus_S_cpu_0_ORD 43
#define DT_N_S_cpus_S_cpu_0_ORD_STR_SORTABLE 00043

/* Ordinals for what this node depends on directly: */
#define DT_N_S_cpus_S_cpu_0_REQUIRES_ORDS \
	38, /* /cpus */ \
	40, /* /cpus/power-states/em1 */ \
	41, /* /cpus/power-states/em2 */ \
	42, /* /cpus/power-states/em3 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_cpus_S_cpu_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_cpus_S_cpu_0_EXISTS 1
#define DT_N_INST_0_arm_cortex_m33 DT_N_S_cpus_S_cpu_0
#define DT_N_NODELABEL_cpu0        DT_N_S_cpus_S_cpu_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_cpus_S_cpu_0_REG_NUM 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_cpus_S_cpu_0_RANGES_NUM 0
#define DT_N_S_cpus_S_cpu_0_FOREACH_RANGE(fn) 
#define DT_N_S_cpus_S_cpu_0_IRQ_NUM 0
#define DT_N_S_cpus_S_cpu_0_IRQ_LEVEL 0
#define DT_N_S_cpus_S_cpu_0_COMPAT_MATCHES_arm_cortex_m33 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_COMPAT_MODEL_IDX_0 "cortex-m33"
#define DT_N_S_cpus_S_cpu_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_cpus_S_cpu_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency 78000000
#define DT_N_S_cpus_S_cpu_0_P_clock_frequency_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0 DT_N_S_cpus_S_power_states_S_em1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_PH DT_N_S_cpus_S_power_states_S_em1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1 DT_N_S_cpus_S_power_states_S_em2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_PH DT_N_S_cpus_S_power_states_S_em2
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_1_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2 DT_N_S_cpus_S_power_states_S_em3
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2_PH DT_N_S_cpus_S_power_states_S_em3
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_IDX_2_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__) \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_cpus_S_cpu_0, cpu_power_states, 2, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_LEN 3
#define DT_N_S_cpus_S_cpu_0_P_cpu_power_states_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible {"arm,cortex-m33"}
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0 "arm,cortex-m33"
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UNQUOTED arm,cortex-m33
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_TOKEN arm_cortex_m33
#define DT_N_S_cpus_S_cpu_0_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_CORTEX_M33
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_cpus_S_cpu_0, compatible, 0)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_cpus_S_cpu_0, compatible, 0, __VA_ARGS__)
#define DT_N_S_cpus_S_cpu_0_P_compatible_LEN 1
#define DT_N_S_cpus_S_cpu_0_P_compatible_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg {0 /* 0x0 */}
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_reg_IDX_0 0
#define DT_N_S_cpus_S_cpu_0_P_reg_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source 0
#define DT_N_S_cpus_S_cpu_0_P_wakeup_source_EXISTS 1
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_cpus_S_cpu_0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@5003c000/gpio@5003c030
 *
 * Node identifier: DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030
 *
 * Binding (compatible = silabs,gecko-gpio-port):
 *   $ZEPHYR_BASE/dts/bindings/gpio/silabs,gecko-gpio-port.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_PATH "/soc/gpio@5003c000/gpio@5003c030"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FULL_NAME "gpio@5003c030"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FULL_NAME_UNQUOTED gpio@5003c030
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FULL_NAME_TOKEN gpio_5003c030
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FULL_NAME_UPPER_TOKEN GPIO_5003C030

/* Node parent (/soc/gpio@5003c000) identifier: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_PARENT DT_N_S_soc_S_gpio_5003c000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_NODELABEL(fn) fn(gpioa)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioa, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_gpio_5003c000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_ORD 44
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_ORD_STR_SORTABLE 00044

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_REQUIRES_ORDS \
	9, /* /soc/gpio@5003c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_SUPPORTS_ORDS \
	45, /* /leds */ \
	46, /* /leds/led_0 */ \
	47, /* /leds/led_1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_EXISTS 1
#define DT_N_INST_0_silabs_gecko_gpio_port DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030
#define DT_N_NODELABEL_gpioa               DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_REG_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_REG_IDX_0_VAL_ADDRESS 1342423088 /* 0x5003c030 */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_REG_IDX_0_VAL_SIZE 48 /* 0x30 */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_COMPAT_MATCHES_silabs_gecko_gpio_port 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_COMPAT_MODEL_IDX_0 "gecko-gpio-port"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_reg {1342423088 /* 0x5003c030 */, 48 /* 0x30 */}
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_reg_IDX_0 1342423088
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_reg_IDX_1 48
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_peripheral_id 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_peripheral_id_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_ngpios 32
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status "okay"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, status, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, status, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible {"silabs,gecko-gpio-port"}
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_IDX_0 "silabs,gecko-gpio-port"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-gpio-port
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_gpio_port
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_GPIO_PORT
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, compatible, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, compatible, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /leds
 *
 * Node identifier: DT_N_S_leds
 *
 * Binding (compatible = gpio-leds):
 *   $ZEPHYR_BASE/dts/bindings/led/gpio-leds.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_PATH "/leds"

/* Node's name with unit-address: */
#define DT_N_S_leds_FULL_NAME "leds"
#define DT_N_S_leds_FULL_NAME_UNQUOTED leds
#define DT_N_S_leds_FULL_NAME_TOKEN leds
#define DT_N_S_leds_FULL_NAME_UPPER_TOKEN LEDS

/* Node parent (/) identifier: */
#define DT_N_S_leds_PARENT DT_N

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_NODELABEL_NUM 0
#define DT_N_S_leds_FOREACH_NODELABEL(fn) 
#define DT_N_S_leds_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_leds_FOREACH_ANCESTOR(fn) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_CHILD_NUM 2
#define DT_N_S_leds_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_leds_FOREACH_CHILD(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_leds_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_leds_S_led_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__)
#define DT_N_S_leds_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_leds_S_led_1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_leds_ORD 45
#define DT_N_S_leds_ORD_STR_SORTABLE 00045

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_REQUIRES_ORDS \
	0, /* / */ \
	44, /* /soc/gpio@5003c000/gpio@5003c030 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_SUPPORTS_ORDS \
	46, /* /leds/led_0 */ \
	47, /* /leds/led_1 */

/* Existence and alternate IDs: */
#define DT_N_S_leds_EXISTS 1
#define DT_N_INST_0_gpio_leds DT_N_S_leds

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_REG_NUM 0
#define DT_N_S_leds_RANGES_NUM 0
#define DT_N_S_leds_FOREACH_RANGE(fn) 
#define DT_N_S_leds_IRQ_NUM 0
#define DT_N_S_leds_IRQ_LEVEL 0
#define DT_N_S_leds_COMPAT_MATCHES_gpio_leds 1
#define DT_N_S_leds_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_P_compatible {"gpio-leds"}
#define DT_N_S_leds_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_leds_P_compatible_IDX_0 "gpio-leds"
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UNQUOTED gpio-leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_TOKEN gpio_leds
#define DT_N_S_leds_P_compatible_IDX_0_STRING_UPPER_TOKEN GPIO_LEDS
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds, compatible, 0)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds, compatible, 0, __VA_ARGS__)
#define DT_N_S_leds_P_compatible_LEN 1
#define DT_N_S_leds_P_compatible_EXISTS 1

/*
 * Devicetree node: /leds/led_0
 *
 * Node identifier: DT_N_S_leds_S_led_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_0_PATH "/leds/led_0"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_0_FULL_NAME "led_0"
#define DT_N_S_leds_S_led_0_FULL_NAME_UNQUOTED led_0
#define DT_N_S_leds_S_led_0_FULL_NAME_TOKEN led_0
#define DT_N_S_leds_S_led_0_FULL_NAME_UPPER_TOKEN LED_0

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_0_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_0_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL(fn) fn(led0)
#define DT_N_S_leds_S_led_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(led0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_0_CHILD_NUM 0
#define DT_N_S_leds_S_led_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_0_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_0_ORD 46
#define DT_N_S_leds_S_led_0_ORD_STR_SORTABLE 00046

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_0_REQUIRES_ORDS \
	44, /* /soc/gpio@5003c000/gpio@5003c030 */ \
	45, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_0_EXISTS 1
#define DT_N_ALIAS_led0     DT_N_S_leds_S_led_0
#define DT_N_NODELABEL_led0 DT_N_S_leds_S_led_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_0_REG_NUM 0
#define DT_N_S_leds_S_led_0_RANGES_NUM 0
#define DT_N_S_leds_S_led_0_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_0_IRQ_NUM 0
#define DT_N_S_leds_S_led_0_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin 4
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_0_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, gpios, 0)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_gpios_LEN 1
#define DT_N_S_leds_S_led_0_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label "LED 0"
#define DT_N_S_leds_S_led_0_P_label_STRING_UNQUOTED LED 0
#define DT_N_S_leds_S_led_0_P_label_STRING_TOKEN LED_0
#define DT_N_S_leds_S_led_0_P_label_STRING_UPPER_TOKEN LED_0
#define DT_N_S_leds_S_led_0_P_label_IDX_0 "LED 0"
#define DT_N_S_leds_S_led_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_0, label, 0)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_0, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_0_P_label_LEN 1
#define DT_N_S_leds_S_led_0_P_label_EXISTS 1

/*
 * Devicetree node: /leds/led_1
 *
 * Node identifier: DT_N_S_leds_S_led_1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_leds_S_led_1_PATH "/leds/led_1"

/* Node's name with unit-address: */
#define DT_N_S_leds_S_led_1_FULL_NAME "led_1"
#define DT_N_S_leds_S_led_1_FULL_NAME_UNQUOTED led_1
#define DT_N_S_leds_S_led_1_FULL_NAME_TOKEN led_1
#define DT_N_S_leds_S_led_1_FULL_NAME_UPPER_TOKEN LED_1

/* Node parent (/leds) identifier: */
#define DT_N_S_leds_S_led_1_PARENT DT_N_S_leds

/* Node's index in its parent's list of children: */
#define DT_N_S_leds_S_led_1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_leds_S_led_1_NODELABEL_NUM 1
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL(fn) fn(led1)
#define DT_N_S_leds_S_led_1_FOREACH_NODELABEL_VARGS(fn, ...) fn(led1, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_FOREACH_ANCESTOR(fn) fn(DT_N_S_leds) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_leds_S_led_1_CHILD_NUM 0
#define DT_N_S_leds_S_led_1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_leds_S_led_1_FOREACH_CHILD(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_leds_S_led_1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_leds_S_led_1_ORD 47
#define DT_N_S_leds_S_led_1_ORD_STR_SORTABLE 00047

/* Ordinals for what this node depends on directly: */
#define DT_N_S_leds_S_led_1_REQUIRES_ORDS \
	44, /* /soc/gpio@5003c000/gpio@5003c030 */ \
	45, /* /leds */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_leds_S_led_1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_leds_S_led_1_EXISTS 1
#define DT_N_ALIAS_led1     DT_N_S_leds_S_led_1
#define DT_N_NODELABEL_led1 DT_N_S_leds_S_led_1

/* Macros for properties that are special in the specification: */
#define DT_N_S_leds_S_led_1_REG_NUM 0
#define DT_N_S_leds_S_led_1_RANGES_NUM 0
#define DT_N_S_leds_S_led_1_FOREACH_RANGE(fn) 
#define DT_N_S_leds_S_led_1_IRQ_NUM 0
#define DT_N_S_leds_S_led_1_IRQ_LEVEL 0
#define DT_N_S_leds_S_led_1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_leds_S_led_1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_PH DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin 7
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags 0
#define DT_N_S_leds_S_led_1_P_gpios_IDX_0_VAL_flags_EXISTS 1
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, gpios, 0)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, gpios, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_gpios_LEN 1
#define DT_N_S_leds_S_led_1_P_gpios_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label "LED 1"
#define DT_N_S_leds_S_led_1_P_label_STRING_UNQUOTED LED 1
#define DT_N_S_leds_S_led_1_P_label_STRING_TOKEN LED_1
#define DT_N_S_leds_S_led_1_P_label_STRING_UPPER_TOKEN LED_1
#define DT_N_S_leds_S_led_1_P_label_IDX_0 "LED 1"
#define DT_N_S_leds_S_led_1_P_label_IDX_0_EXISTS 1
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_leds_S_led_1, label, 0)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_leds_S_led_1, label, 0, __VA_ARGS__)
#define DT_N_S_leds_S_led_1_P_label_LEN 1
#define DT_N_S_leds_S_led_1_P_label_EXISTS 1

/*
 * Devicetree node: /soc/adc@59004000
 *
 * Node identifier: DT_N_S_soc_S_adc_59004000
 *
 * Binding (compatible = silabs,gecko-iadc):
 *   $ZEPHYR_BASE/dts/bindings/adc/silabs,gecko-iadc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_adc_59004000_PATH "/soc/adc@59004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_adc_59004000_FULL_NAME "adc@59004000"
#define DT_N_S_soc_S_adc_59004000_FULL_NAME_UNQUOTED adc@59004000
#define DT_N_S_soc_S_adc_59004000_FULL_NAME_TOKEN adc_59004000
#define DT_N_S_soc_S_adc_59004000_FULL_NAME_UPPER_TOKEN ADC_59004000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_adc_59004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_adc_59004000_CHILD_IDX 24

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_adc_59004000_NODELABEL_NUM 1
#define DT_N_S_soc_S_adc_59004000_FOREACH_NODELABEL(fn) fn(adc0)
#define DT_N_S_soc_S_adc_59004000_FOREACH_NODELABEL_VARGS(fn, ...) fn(adc0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_59004000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_adc_59004000_CHILD_NUM 0
#define DT_N_S_soc_S_adc_59004000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_adc_59004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_adc_59004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_59004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_59004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_adc_59004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_adc_59004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_adc_59004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_adc_59004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_adc_59004000_ORD 48
#define DT_N_S_soc_S_adc_59004000_ORD_STR_SORTABLE 00048

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_adc_59004000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_adc_59004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_adc_59004000_EXISTS 1
#define DT_N_INST_0_silabs_gecko_iadc DT_N_S_soc_S_adc_59004000
#define DT_N_NODELABEL_adc0           DT_N_S_soc_S_adc_59004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_adc_59004000_REG_NUM 1
#define DT_N_S_soc_S_adc_59004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_REG_IDX_0_VAL_ADDRESS 1493188608 /* 0x59004000 */
#define DT_N_S_soc_S_adc_59004000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_adc_59004000_RANGES_NUM 0
#define DT_N_S_soc_S_adc_59004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_adc_59004000_IRQ_NUM 1
#define DT_N_S_soc_S_adc_59004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_IRQ_IDX_0_VAL_irq 49
#define DT_N_S_soc_S_adc_59004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_adc_59004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_adc_59004000_IRQ_LEVEL 1
#define DT_N_S_soc_S_adc_59004000_COMPAT_MATCHES_silabs_gecko_iadc 1
#define DT_N_S_soc_S_adc_59004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_adc_59004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_COMPAT_MODEL_IDX_0 "gecko-iadc"
#define DT_N_S_soc_S_adc_59004000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_adc_59004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_adc_59004000_P_reg {1493188608 /* 0x59004000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_adc_59004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_reg_IDX_0 1493188608
#define DT_N_S_soc_S_adc_59004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_adc_59004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_interrupts {49 /* 0x31 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_adc_59004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_interrupts_IDX_0 49
#define DT_N_S_soc_S_adc_59004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_adc_59004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_status "disabled"
#define DT_N_S_soc_S_adc_59004000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_adc_59004000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_adc_59004000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_adc_59004000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_adc_59004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_adc_59004000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_59004000, status, 0)
#define DT_N_S_soc_S_adc_59004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_59004000, status, 0)
#define DT_N_S_soc_S_adc_59004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_59004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_59004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_59004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_59004000_P_status_LEN 1
#define DT_N_S_soc_S_adc_59004000_P_status_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_compatible {"silabs,gecko-iadc"}
#define DT_N_S_soc_S_adc_59004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_compatible_IDX_0 "silabs,gecko-iadc"
#define DT_N_S_soc_S_adc_59004000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-iadc
#define DT_N_S_soc_S_adc_59004000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_iadc
#define DT_N_S_soc_S_adc_59004000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_IADC
#define DT_N_S_soc_S_adc_59004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_59004000, compatible, 0)
#define DT_N_S_soc_S_adc_59004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_59004000, compatible, 0)
#define DT_N_S_soc_S_adc_59004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_59004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_59004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_59004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_59004000_P_compatible_LEN 1
#define DT_N_S_soc_S_adc_59004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_50008000
#define DT_N_S_soc_S_adc_59004000_P_clocks_IDX_0_VAL_enable 10
#define DT_N_S_soc_S_adc_59004000_P_clocks_IDX_0_VAL_enable_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_clocks_IDX_0_VAL_branch 15
#define DT_N_S_soc_S_adc_59004000_P_clocks_IDX_0_VAL_branch_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_adc_59004000, clocks, 0)
#define DT_N_S_soc_S_adc_59004000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_adc_59004000, clocks, 0)
#define DT_N_S_soc_S_adc_59004000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_adc_59004000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_59004000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_adc_59004000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_adc_59004000_P_clocks_LEN 1
#define DT_N_S_soc_S_adc_59004000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_adc_59004000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_wakeup_source 0
#define DT_N_S_soc_S_adc_59004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_adc_59004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_adc_59004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/burtc@50064000
 *
 * Node identifier: DT_N_S_soc_S_burtc_50064000
 *
 * Binding (compatible = silabs,gecko-burtc):
 *   $ZEPHYR_BASE/dts/bindings/timer/silabs,gecko-burtc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_burtc_50064000_PATH "/soc/burtc@50064000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_burtc_50064000_FULL_NAME "burtc@50064000"
#define DT_N_S_soc_S_burtc_50064000_FULL_NAME_UNQUOTED burtc@50064000
#define DT_N_S_soc_S_burtc_50064000_FULL_NAME_TOKEN burtc_50064000
#define DT_N_S_soc_S_burtc_50064000_FULL_NAME_UPPER_TOKEN BURTC_50064000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_burtc_50064000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_burtc_50064000_CHILD_IDX 15

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_burtc_50064000_NODELABEL_NUM 1
#define DT_N_S_soc_S_burtc_50064000_FOREACH_NODELABEL(fn) fn(burtc0)
#define DT_N_S_soc_S_burtc_50064000_FOREACH_NODELABEL_VARGS(fn, ...) fn(burtc0, __VA_ARGS__)
#define DT_N_S_soc_S_burtc_50064000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_burtc_50064000_CHILD_NUM 0
#define DT_N_S_soc_S_burtc_50064000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_burtc_50064000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_burtc_50064000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_burtc_50064000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_burtc_50064000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_burtc_50064000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_burtc_50064000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_burtc_50064000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_burtc_50064000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_burtc_50064000_ORD 49
#define DT_N_S_soc_S_burtc_50064000_ORD_STR_SORTABLE 00049

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_burtc_50064000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_burtc_50064000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_burtc_50064000_EXISTS 1
#define DT_N_INST_0_silabs_gecko_burtc DT_N_S_soc_S_burtc_50064000
#define DT_N_NODELABEL_burtc0          DT_N_S_soc_S_burtc_50064000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_burtc_50064000_REG_NUM 1
#define DT_N_S_soc_S_burtc_50064000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_REG_IDX_0_VAL_ADDRESS 1342586880 /* 0x50064000 */
#define DT_N_S_soc_S_burtc_50064000_REG_IDX_0_VAL_SIZE 12340 /* 0x3034 */
#define DT_N_S_soc_S_burtc_50064000_RANGES_NUM 0
#define DT_N_S_soc_S_burtc_50064000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_burtc_50064000_IRQ_NUM 1
#define DT_N_S_soc_S_burtc_50064000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_IRQ_IDX_0_VAL_irq 17
#define DT_N_S_soc_S_burtc_50064000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_burtc_50064000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_burtc_50064000_IRQ_LEVEL 1
#define DT_N_S_soc_S_burtc_50064000_COMPAT_MATCHES_silabs_gecko_burtc 1
#define DT_N_S_soc_S_burtc_50064000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_burtc_50064000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_COMPAT_MODEL_IDX_0 "gecko-burtc"
#define DT_N_S_soc_S_burtc_50064000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_burtc_50064000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_burtc_50064000_P_reg {1342586880 /* 0x50064000 */, 12340 /* 0x3034 */}
#define DT_N_S_soc_S_burtc_50064000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_reg_IDX_0 1342586880
#define DT_N_S_soc_S_burtc_50064000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_reg_IDX_1 12340
#define DT_N_S_soc_S_burtc_50064000_P_reg_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_interrupts {17 /* 0x11 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_burtc_50064000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_interrupts_IDX_0 17
#define DT_N_S_soc_S_burtc_50064000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_burtc_50064000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_status "disabled"
#define DT_N_S_soc_S_burtc_50064000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_burtc_50064000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_burtc_50064000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_burtc_50064000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_burtc_50064000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_burtc_50064000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_burtc_50064000, status, 0)
#define DT_N_S_soc_S_burtc_50064000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_burtc_50064000, status, 0)
#define DT_N_S_soc_S_burtc_50064000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_burtc_50064000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_burtc_50064000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_burtc_50064000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_burtc_50064000_P_status_LEN 1
#define DT_N_S_soc_S_burtc_50064000_P_status_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_compatible {"silabs,gecko-burtc"}
#define DT_N_S_soc_S_burtc_50064000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_compatible_IDX_0 "silabs,gecko-burtc"
#define DT_N_S_soc_S_burtc_50064000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-burtc
#define DT_N_S_soc_S_burtc_50064000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_burtc
#define DT_N_S_soc_S_burtc_50064000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_BURTC
#define DT_N_S_soc_S_burtc_50064000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_burtc_50064000, compatible, 0)
#define DT_N_S_soc_S_burtc_50064000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_burtc_50064000, compatible, 0)
#define DT_N_S_soc_S_burtc_50064000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_burtc_50064000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_burtc_50064000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_burtc_50064000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_burtc_50064000_P_compatible_LEN 1
#define DT_N_S_soc_S_burtc_50064000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_50008000
#define DT_N_S_soc_S_burtc_50064000_P_clocks_IDX_0_VAL_enable 29
#define DT_N_S_soc_S_burtc_50064000_P_clocks_IDX_0_VAL_enable_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_clocks_IDX_0_VAL_branch 13
#define DT_N_S_soc_S_burtc_50064000_P_clocks_IDX_0_VAL_branch_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_burtc_50064000, clocks, 0)
#define DT_N_S_soc_S_burtc_50064000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_burtc_50064000, clocks, 0)
#define DT_N_S_soc_S_burtc_50064000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_burtc_50064000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_burtc_50064000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_burtc_50064000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_burtc_50064000_P_clocks_LEN 1
#define DT_N_S_soc_S_burtc_50064000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_burtc_50064000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_wakeup_source 0
#define DT_N_S_soc_S_burtc_50064000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_burtc_50064000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_burtc_50064000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/clkin0@5003c46c
 *
 * Node identifier: DT_N_S_soc_S_clkin0_5003c46c
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_clkin0_5003c46c_PATH "/soc/clkin0@5003c46c"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_clkin0_5003c46c_FULL_NAME "clkin0@5003c46c"
#define DT_N_S_soc_S_clkin0_5003c46c_FULL_NAME_UNQUOTED clkin0@5003c46c
#define DT_N_S_soc_S_clkin0_5003c46c_FULL_NAME_TOKEN clkin0_5003c46c
#define DT_N_S_soc_S_clkin0_5003c46c_FULL_NAME_UPPER_TOKEN CLKIN0_5003C46C

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_clkin0_5003c46c_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_clkin0_5003c46c_CHILD_IDX 10

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_clkin0_5003c46c_NODELABEL_NUM 1
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_NODELABEL(fn) fn(clkin0)
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_NODELABEL_VARGS(fn, ...) fn(clkin0, __VA_ARGS__)
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_clkin0_5003c46c_CHILD_NUM 0
#define DT_N_S_soc_S_clkin0_5003c46c_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_clkin0_5003c46c_ORD 50
#define DT_N_S_soc_S_clkin0_5003c46c_ORD_STR_SORTABLE 00050

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_clkin0_5003c46c_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_clkin0_5003c46c_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_clkin0_5003c46c_EXISTS 1
#define DT_N_INST_2_fixed_clock DT_N_S_soc_S_clkin0_5003c46c
#define DT_N_NODELABEL_clkin0   DT_N_S_soc_S_clkin0_5003c46c

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_clkin0_5003c46c_REG_NUM 1
#define DT_N_S_soc_S_clkin0_5003c46c_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clkin0_5003c46c_REG_IDX_0_VAL_ADDRESS 1342424172 /* 0x5003c46c */
#define DT_N_S_soc_S_clkin0_5003c46c_REG_IDX_0_VAL_SIZE 4 /* 0x4 */
#define DT_N_S_soc_S_clkin0_5003c46c_RANGES_NUM 0
#define DT_N_S_soc_S_clkin0_5003c46c_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_clkin0_5003c46c_IRQ_NUM 0
#define DT_N_S_soc_S_clkin0_5003c46c_IRQ_LEVEL 0
#define DT_N_S_soc_S_clkin0_5003c46c_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_soc_S_clkin0_5003c46c_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_clkin0_5003c46c_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_clkin0_5003c46c_P_clock_frequency 38000000
#define DT_N_S_soc_S_clkin0_5003c46c_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible {"fixed-clock"}
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_clkin0_5003c46c, compatible, 0)
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_clkin0_5003c46c, compatible, 0)
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_clkin0_5003c46c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_clkin0_5003c46c, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_LEN 1
#define DT_N_S_soc_S_clkin0_5003c46c_P_compatible_EXISTS 1
#define DT_N_S_soc_S_clkin0_5003c46c_P_reg {1342424172 /* 0x5003c46c */, 4 /* 0x4 */}
#define DT_N_S_soc_S_clkin0_5003c46c_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_clkin0_5003c46c_P_reg_IDX_0 1342424172
#define DT_N_S_soc_S_clkin0_5003c46c_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_clkin0_5003c46c_P_reg_IDX_1 4
#define DT_N_S_soc_S_clkin0_5003c46c_P_reg_EXISTS 1
#define DT_N_S_soc_S_clkin0_5003c46c_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_clkin0_5003c46c_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_clkin0_5003c46c_P_wakeup_source 0
#define DT_N_S_soc_S_clkin0_5003c46c_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_clkin0_5003c46c_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_clkin0_5003c46c_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/dcdc@50094000
 *
 * Node identifier: DT_N_S_soc_S_dcdc_50094000
 *
 * Binding (compatible = silabs,series2-dcdc):
 *   $ZEPHYR_BASE/dts/bindings/regulator/silabs,series2-dcdc.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dcdc_50094000_PATH "/soc/dcdc@50094000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dcdc_50094000_FULL_NAME "dcdc@50094000"
#define DT_N_S_soc_S_dcdc_50094000_FULL_NAME_UNQUOTED dcdc@50094000
#define DT_N_S_soc_S_dcdc_50094000_FULL_NAME_TOKEN dcdc_50094000
#define DT_N_S_soc_S_dcdc_50094000_FULL_NAME_UPPER_TOKEN DCDC_50094000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dcdc_50094000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dcdc_50094000_CHILD_IDX 25

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dcdc_50094000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_NODELABEL(fn) fn(dcdc)
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dcdc, __VA_ARGS__)
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dcdc_50094000_CHILD_NUM 0
#define DT_N_S_soc_S_dcdc_50094000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dcdc_50094000_ORD 51
#define DT_N_S_soc_S_dcdc_50094000_ORD_STR_SORTABLE 00051

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dcdc_50094000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dcdc_50094000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dcdc_50094000_EXISTS 1
#define DT_N_INST_0_silabs_series2_dcdc DT_N_S_soc_S_dcdc_50094000
#define DT_N_NODELABEL_dcdc             DT_N_S_soc_S_dcdc_50094000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dcdc_50094000_REG_NUM 1
#define DT_N_S_soc_S_dcdc_50094000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_REG_IDX_0_VAL_ADDRESS 1342783488 /* 0x50094000 */
#define DT_N_S_soc_S_dcdc_50094000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_dcdc_50094000_RANGES_NUM 0
#define DT_N_S_soc_S_dcdc_50094000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dcdc_50094000_IRQ_NUM 1
#define DT_N_S_soc_S_dcdc_50094000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_IRQ_IDX_0_VAL_irq 53
#define DT_N_S_soc_S_dcdc_50094000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dcdc_50094000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dcdc_50094000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dcdc_50094000_COMPAT_MATCHES_silabs_series2_dcdc 1
#define DT_N_S_soc_S_dcdc_50094000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_dcdc_50094000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_COMPAT_MODEL_IDX_0 "series2-dcdc"
#define DT_N_S_soc_S_dcdc_50094000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dcdc_50094000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dcdc_50094000_P_reg {1342783488 /* 0x50094000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_dcdc_50094000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_reg_IDX_0 1342783488
#define DT_N_S_soc_S_dcdc_50094000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_dcdc_50094000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_regulator_initial_mode 0
#define DT_N_S_soc_S_dcdc_50094000_P_regulator_initial_mode_IDX_0_ENUM_IDX 0
#define DT_N_S_soc_S_dcdc_50094000_P_regulator_initial_mode_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_regulator_initial_mode_IDX_0_ENUM_VAL_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_regulator_initial_mode_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_silabs_pfmx_peak_current_milliamp 100
#define DT_N_S_soc_S_dcdc_50094000_P_silabs_pfmx_peak_current_milliamp_IDX_0_ENUM_IDX 6
#define DT_N_S_soc_S_dcdc_50094000_P_silabs_pfmx_peak_current_milliamp_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_silabs_pfmx_peak_current_milliamp_IDX_0_ENUM_VAL_100_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_silabs_pfmx_peak_current_milliamp_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_status "okay"
#define DT_N_S_soc_S_dcdc_50094000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_dcdc_50094000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_dcdc_50094000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_dcdc_50094000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_dcdc_50094000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_dcdc_50094000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcdc_50094000, status, 0)
#define DT_N_S_soc_S_dcdc_50094000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcdc_50094000, status, 0)
#define DT_N_S_soc_S_dcdc_50094000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcdc_50094000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcdc_50094000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcdc_50094000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcdc_50094000_P_status_LEN 1
#define DT_N_S_soc_S_dcdc_50094000_P_status_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_compatible {"silabs,series2-dcdc"}
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_IDX_0 "silabs,series2-dcdc"
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_IDX_0_STRING_UNQUOTED silabs,series2-dcdc
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_IDX_0_STRING_TOKEN silabs_series2_dcdc
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_SERIES2_DCDC
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dcdc_50094000, compatible, 0)
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dcdc_50094000, compatible, 0)
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dcdc_50094000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dcdc_50094000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_LEN 1
#define DT_N_S_soc_S_dcdc_50094000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_interrupts {53 /* 0x35 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dcdc_50094000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_interrupts_IDX_0 53
#define DT_N_S_soc_S_dcdc_50094000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dcdc_50094000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dcdc_50094000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_wakeup_source 0
#define DT_N_S_soc_S_dcdc_50094000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dcdc_50094000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_regulator_boot_on 1
#define DT_N_S_soc_S_dcdc_50094000_P_regulator_boot_on_EXISTS 1
#define DT_N_S_soc_S_dcdc_50094000_P_regulator_allow_bypass 0
#define DT_N_S_soc_S_dcdc_50094000_P_regulator_allow_bypass_EXISTS 1

/*
 * Devicetree node: /soc/dma@40040000
 *
 * Node identifier: DT_N_S_soc_S_dma_40040000
 *
 * Binding (compatible = silabs,ldma):
 *   $ZEPHYR_BASE/dts/bindings/dma/silabs,ldma.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_dma_40040000_PATH "/soc/dma@40040000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_dma_40040000_FULL_NAME "dma@40040000"
#define DT_N_S_soc_S_dma_40040000_FULL_NAME_UNQUOTED dma@40040000
#define DT_N_S_soc_S_dma_40040000_FULL_NAME_TOKEN dma_40040000
#define DT_N_S_soc_S_dma_40040000_FULL_NAME_UPPER_TOKEN DMA_40040000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_dma_40040000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_dma_40040000_CHILD_IDX 21

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_dma_40040000_NODELABEL_NUM 1
#define DT_N_S_soc_S_dma_40040000_FOREACH_NODELABEL(fn) fn(dma0)
#define DT_N_S_soc_S_dma_40040000_FOREACH_NODELABEL_VARGS(fn, ...) fn(dma0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40040000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_dma_40040000_CHILD_NUM 0
#define DT_N_S_soc_S_dma_40040000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_dma_40040000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_dma_40040000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40040000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40040000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_dma_40040000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_dma_40040000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_dma_40040000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_dma_40040000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_dma_40040000_ORD 52
#define DT_N_S_soc_S_dma_40040000_ORD_STR_SORTABLE 00052

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_dma_40040000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_dma_40040000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_dma_40040000_EXISTS 1
#define DT_N_INST_0_silabs_ldma DT_N_S_soc_S_dma_40040000
#define DT_N_NODELABEL_dma0     DT_N_S_soc_S_dma_40040000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_dma_40040000_REG_NUM 1
#define DT_N_S_soc_S_dma_40040000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_REG_IDX_0_VAL_ADDRESS 1074003968 /* 0x40040000 */
#define DT_N_S_soc_S_dma_40040000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_dma_40040000_RANGES_NUM 0
#define DT_N_S_soc_S_dma_40040000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_dma_40040000_IRQ_NUM 1
#define DT_N_S_soc_S_dma_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_IRQ_IDX_0_VAL_irq 21
#define DT_N_S_soc_S_dma_40040000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_dma_40040000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_dma_40040000_IRQ_LEVEL 1
#define DT_N_S_soc_S_dma_40040000_COMPAT_MATCHES_silabs_ldma 1
#define DT_N_S_soc_S_dma_40040000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_dma_40040000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_COMPAT_MODEL_IDX_0 "ldma"
#define DT_N_S_soc_S_dma_40040000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_dma_40040000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_dma_40040000_P_reg {1074003968 /* 0x40040000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_dma_40040000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_reg_IDX_0 1074003968
#define DT_N_S_soc_S_dma_40040000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_dma_40040000_P_reg_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_interrupts {21 /* 0x15 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_dma_40040000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_interrupts_IDX_0 21
#define DT_N_S_soc_S_dma_40040000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_dma_40040000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_dma_channels 8
#define DT_N_S_soc_S_dma_40040000_P_dma_channels_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_status "disabled"
#define DT_N_S_soc_S_dma_40040000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_dma_40040000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_dma_40040000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_dma_40040000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_dma_40040000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_dma_40040000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40040000, status, 0)
#define DT_N_S_soc_S_dma_40040000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40040000, status, 0)
#define DT_N_S_soc_S_dma_40040000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40040000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40040000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40040000_P_status_LEN 1
#define DT_N_S_soc_S_dma_40040000_P_status_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_compatible {"silabs,ldma"}
#define DT_N_S_soc_S_dma_40040000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_compatible_IDX_0 "silabs,ldma"
#define DT_N_S_soc_S_dma_40040000_P_compatible_IDX_0_STRING_UNQUOTED silabs,ldma
#define DT_N_S_soc_S_dma_40040000_P_compatible_IDX_0_STRING_TOKEN silabs_ldma
#define DT_N_S_soc_S_dma_40040000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_LDMA
#define DT_N_S_soc_S_dma_40040000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_dma_40040000, compatible, 0)
#define DT_N_S_soc_S_dma_40040000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_dma_40040000, compatible, 0)
#define DT_N_S_soc_S_dma_40040000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_dma_40040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40040000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_dma_40040000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_dma_40040000_P_compatible_LEN 1
#define DT_N_S_soc_S_dma_40040000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_dma_40040000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_wakeup_source 0
#define DT_N_S_soc_S_dma_40040000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_dma_40040000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_dma_40040000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/eusart@500a0000
 *
 * Node identifier: DT_N_S_soc_S_eusart_500a0000
 *
 * Binding (compatible = silabs,gecko-spi-eusart):
 *   $ZEPHYR_BASE/dts/bindings/spi/silabs,gecko-spi-eusart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_eusart_500a0000_PATH "/soc/eusart@500a0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_eusart_500a0000_FULL_NAME "eusart@500a0000"
#define DT_N_S_soc_S_eusart_500a0000_FULL_NAME_UNQUOTED eusart@500a0000
#define DT_N_S_soc_S_eusart_500a0000_FULL_NAME_TOKEN eusart_500a0000
#define DT_N_S_soc_S_eusart_500a0000_FULL_NAME_UPPER_TOKEN EUSART_500A0000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_eusart_500a0000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_eusart_500a0000_CHILD_IDX 14

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_eusart_500a0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_NODELABEL(fn) fn(eusart1)
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(eusart1, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_eusart_500a0000_CHILD_NUM 0
#define DT_N_S_soc_S_eusart_500a0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_eusart_500a0000_ORD 53
#define DT_N_S_soc_S_eusart_500a0000_ORD_STR_SORTABLE 00053

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_eusart_500a0000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_eusart_500a0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_eusart_500a0000_EXISTS 1
#define DT_N_INST_1_silabs_gecko_spi_eusart DT_N_S_soc_S_eusart_500a0000
#define DT_N_NODELABEL_eusart1              DT_N_S_soc_S_eusart_500a0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_eusart_500a0000_REG_NUM 1
#define DT_N_S_soc_S_eusart_500a0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_REG_IDX_0_VAL_ADDRESS 1342832640 /* 0x500a0000 */
#define DT_N_S_soc_S_eusart_500a0000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_eusart_500a0000_RANGES_NUM 0
#define DT_N_S_soc_S_eusart_500a0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NUM 2
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_0_VAL_irq 13
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_1_VAL_irq 14
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eusart_500a0000_IRQ_LEVEL 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NAME_rx_VAL_irq DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NAME_rx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NAME_rx_VAL_priority DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NAME_rx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NAME_rx_CONTROLLER DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_IRQ_NAME_tx_CONTROLLER DT_N_S_soc_S_eusart_500a0000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_eusart_500a0000_COMPAT_MATCHES_silabs_gecko_spi_eusart 1
#define DT_N_S_soc_S_eusart_500a0000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_eusart_500a0000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_COMPAT_MODEL_IDX_0 "gecko-spi-eusart"
#define DT_N_S_soc_S_eusart_500a0000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_eusart_500a0000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_eusart_500a0000_P_reg {1342832640 /* 0x500a0000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_eusart_500a0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_reg_IDX_0 1342832640
#define DT_N_S_soc_S_eusart_500a0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_eusart_500a0000_P_reg_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_interrupts {13 /* 0xd */, 0 /* 0x0 */, 14 /* 0xe */, 0 /* 0x0 */}
#define DT_N_S_soc_S_eusart_500a0000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_interrupts_IDX_0 13
#define DT_N_S_soc_S_eusart_500a0000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_eusart_500a0000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_interrupts_IDX_2 14
#define DT_N_S_soc_S_eusart_500a0000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_eusart_500a0000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_50008000
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_IDX_0_VAL_enable 87
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_IDX_0_VAL_enable_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_IDX_0_VAL_branch 10
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_IDX_0_VAL_branch_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eusart_500a0000, clocks, 0)
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eusart_500a0000, clocks, 0)
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eusart_500a0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eusart_500a0000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_LEN 1
#define DT_N_S_soc_S_eusart_500a0000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_status "disabled"
#define DT_N_S_soc_S_eusart_500a0000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_eusart_500a0000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_eusart_500a0000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_eusart_500a0000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_eusart_500a0000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_eusart_500a0000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eusart_500a0000, status, 0)
#define DT_N_S_soc_S_eusart_500a0000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eusart_500a0000, status, 0)
#define DT_N_S_soc_S_eusart_500a0000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eusart_500a0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_500a0000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eusart_500a0000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_500a0000_P_status_LEN 1
#define DT_N_S_soc_S_eusart_500a0000_P_status_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_compatible {"silabs,gecko-spi-eusart"}
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_IDX_0 "silabs,gecko-spi-eusart"
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-spi-eusart
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_spi_eusart
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_SPI_EUSART
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eusart_500a0000, compatible, 0)
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eusart_500a0000, compatible, 0)
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eusart_500a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eusart_500a0000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_LEN 1
#define DT_N_S_soc_S_eusart_500a0000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names {"rx", "tx"}
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_IDX_0 "rx"
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_IDX_1 "tx"
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eusart_500a0000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_eusart_500a0000, interrupt_names, 1)
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eusart_500a0000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_eusart_500a0000, interrupt_names, 1)
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eusart_500a0000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_eusart_500a0000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eusart_500a0000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_eusart_500a0000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_eusart_500a0000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_eusart_500a0000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_wakeup_source 0
#define DT_N_S_soc_S_eusart_500a0000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_eusart_500a0000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_eusart_500a0000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/eusart@5b010000
 *
 * Node identifier: DT_N_S_soc_S_eusart_5b010000
 *
 * Binding (compatible = silabs,gecko-spi-eusart):
 *   $ZEPHYR_BASE/dts/bindings/spi/silabs,gecko-spi-eusart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_eusart_5b010000_PATH "/soc/eusart@5b010000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_eusart_5b010000_FULL_NAME "eusart@5b010000"
#define DT_N_S_soc_S_eusart_5b010000_FULL_NAME_UNQUOTED eusart@5b010000
#define DT_N_S_soc_S_eusart_5b010000_FULL_NAME_TOKEN eusart_5b010000
#define DT_N_S_soc_S_eusart_5b010000_FULL_NAME_UPPER_TOKEN EUSART_5B010000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_eusart_5b010000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_eusart_5b010000_CHILD_IDX 13

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_eusart_5b010000_NODELABEL_NUM 1
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_NODELABEL(fn) fn(eusart0)
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_NODELABEL_VARGS(fn, ...) fn(eusart0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_eusart_5b010000_CHILD_NUM 0
#define DT_N_S_soc_S_eusart_5b010000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_eusart_5b010000_ORD 54
#define DT_N_S_soc_S_eusart_5b010000_ORD_STR_SORTABLE 00054

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_eusart_5b010000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_eusart_5b010000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_eusart_5b010000_EXISTS 1
#define DT_N_INST_0_silabs_gecko_spi_eusart DT_N_S_soc_S_eusart_5b010000
#define DT_N_NODELABEL_eusart0              DT_N_S_soc_S_eusart_5b010000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_eusart_5b010000_REG_NUM 1
#define DT_N_S_soc_S_eusart_5b010000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_REG_IDX_0_VAL_ADDRESS 1526792192 /* 0x5b010000 */
#define DT_N_S_soc_S_eusart_5b010000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_eusart_5b010000_RANGES_NUM 0
#define DT_N_S_soc_S_eusart_5b010000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NUM 2
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_0_VAL_irq 11
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_1_VAL_irq 12
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_eusart_5b010000_IRQ_LEVEL 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NAME_rx_VAL_irq DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NAME_rx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NAME_rx_VAL_priority DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NAME_rx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NAME_rx_CONTROLLER DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_IRQ_NAME_tx_CONTROLLER DT_N_S_soc_S_eusart_5b010000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_eusart_5b010000_COMPAT_MATCHES_silabs_gecko_spi_eusart 1
#define DT_N_S_soc_S_eusart_5b010000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_eusart_5b010000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_COMPAT_MODEL_IDX_0 "gecko-spi-eusart"
#define DT_N_S_soc_S_eusart_5b010000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_eusart_5b010000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_eusart_5b010000_P_reg {1526792192 /* 0x5b010000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_eusart_5b010000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_reg_IDX_0 1526792192
#define DT_N_S_soc_S_eusart_5b010000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_eusart_5b010000_P_reg_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_interrupts {11 /* 0xb */, 0 /* 0x0 */, 12 /* 0xc */, 0 /* 0x0 */}
#define DT_N_S_soc_S_eusart_5b010000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_interrupts_IDX_0 11
#define DT_N_S_soc_S_eusart_5b010000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_eusart_5b010000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_interrupts_IDX_2 12
#define DT_N_S_soc_S_eusart_5b010000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_eusart_5b010000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_50008000
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_IDX_0_VAL_enable 86
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_IDX_0_VAL_enable_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_IDX_0_VAL_branch 21
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_IDX_0_VAL_branch_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eusart_5b010000, clocks, 0)
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eusart_5b010000, clocks, 0)
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eusart_5b010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eusart_5b010000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_LEN 1
#define DT_N_S_soc_S_eusart_5b010000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_status "disabled"
#define DT_N_S_soc_S_eusart_5b010000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_eusart_5b010000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_eusart_5b010000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_eusart_5b010000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_eusart_5b010000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_eusart_5b010000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eusart_5b010000, status, 0)
#define DT_N_S_soc_S_eusart_5b010000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eusart_5b010000, status, 0)
#define DT_N_S_soc_S_eusart_5b010000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eusart_5b010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_5b010000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eusart_5b010000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_5b010000_P_status_LEN 1
#define DT_N_S_soc_S_eusart_5b010000_P_status_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_compatible {"silabs,gecko-spi-eusart"}
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_IDX_0 "silabs,gecko-spi-eusart"
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-spi-eusart
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_spi_eusart
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_SPI_EUSART
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eusart_5b010000, compatible, 0)
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eusart_5b010000, compatible, 0)
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eusart_5b010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eusart_5b010000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_LEN 1
#define DT_N_S_soc_S_eusart_5b010000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names {"rx", "tx"}
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_IDX_0 "rx"
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_IDX_1 "tx"
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_eusart_5b010000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_eusart_5b010000, interrupt_names, 1)
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_eusart_5b010000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_eusart_5b010000, interrupt_names, 1)
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_eusart_5b010000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_eusart_5b010000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_eusart_5b010000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_eusart_5b010000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_eusart_5b010000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_eusart_5b010000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_wakeup_source 0
#define DT_N_S_soc_S_eusart_5b010000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_eusart_5b010000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_eusart_5b010000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/fsrco@50018000
 *
 * Node identifier: DT_N_S_soc_S_fsrco_50018000
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_fsrco_50018000_PATH "/soc/fsrco@50018000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_fsrco_50018000_FULL_NAME "fsrco@50018000"
#define DT_N_S_soc_S_fsrco_50018000_FULL_NAME_UNQUOTED fsrco@50018000
#define DT_N_S_soc_S_fsrco_50018000_FULL_NAME_TOKEN fsrco_50018000
#define DT_N_S_soc_S_fsrco_50018000_FULL_NAME_UPPER_TOKEN FSRCO_50018000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_fsrco_50018000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_fsrco_50018000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_fsrco_50018000_NODELABEL_NUM 1
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_NODELABEL(fn) fn(fsrco)
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_NODELABEL_VARGS(fn, ...) fn(fsrco, __VA_ARGS__)
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_fsrco_50018000_CHILD_NUM 0
#define DT_N_S_soc_S_fsrco_50018000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_fsrco_50018000_ORD 55
#define DT_N_S_soc_S_fsrco_50018000_ORD_STR_SORTABLE 00055

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_fsrco_50018000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_fsrco_50018000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_fsrco_50018000_EXISTS 1
#define DT_N_INST_0_fixed_clock DT_N_S_soc_S_fsrco_50018000
#define DT_N_NODELABEL_fsrco    DT_N_S_soc_S_fsrco_50018000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_fsrco_50018000_REG_NUM 1
#define DT_N_S_soc_S_fsrco_50018000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_fsrco_50018000_REG_IDX_0_VAL_ADDRESS 1342275584 /* 0x50018000 */
#define DT_N_S_soc_S_fsrco_50018000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_fsrco_50018000_RANGES_NUM 0
#define DT_N_S_soc_S_fsrco_50018000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_fsrco_50018000_IRQ_NUM 0
#define DT_N_S_soc_S_fsrco_50018000_IRQ_LEVEL 0
#define DT_N_S_soc_S_fsrco_50018000_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_soc_S_fsrco_50018000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_fsrco_50018000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_fsrco_50018000_P_clock_frequency 20000000
#define DT_N_S_soc_S_fsrco_50018000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_fsrco_50018000_P_compatible {"fixed-clock"}
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_fsrco_50018000, compatible, 0)
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_fsrco_50018000, compatible, 0)
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_fsrco_50018000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_fsrco_50018000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_LEN 1
#define DT_N_S_soc_S_fsrco_50018000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_fsrco_50018000_P_reg {1342275584 /* 0x50018000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_fsrco_50018000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_fsrco_50018000_P_reg_IDX_0 1342275584
#define DT_N_S_soc_S_fsrco_50018000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_fsrco_50018000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_fsrco_50018000_P_reg_EXISTS 1
#define DT_N_S_soc_S_fsrco_50018000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_fsrco_50018000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_fsrco_50018000_P_wakeup_source 0
#define DT_N_S_soc_S_fsrco_50018000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_fsrco_50018000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_fsrco_50018000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/hfrcoem23@5a000000
 *
 * Node identifier: DT_N_S_soc_S_hfrcoem23_5a000000
 *
 * Binding (compatible = silabs,series2-hfrcoem23):
 *   $ZEPHYR_BASE/dts/bindings/clock/silabs,series2-hfrcoem23.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_PATH "/soc/hfrcoem23@5a000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_FULL_NAME "hfrcoem23@5a000000"
#define DT_N_S_soc_S_hfrcoem23_5a000000_FULL_NAME_UNQUOTED hfrcoem23@5a000000
#define DT_N_S_soc_S_hfrcoem23_5a000000_FULL_NAME_TOKEN hfrcoem23_5a000000
#define DT_N_S_soc_S_hfrcoem23_5a000000_FULL_NAME_UPPER_TOKEN HFRCOEM23_5A000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_CHILD_IDX 7

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_NODELABEL(fn) fn(hfrcoem23)
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(hfrcoem23, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_hfrcoem23_5a000000_CHILD_NUM 0
#define DT_N_S_soc_S_hfrcoem23_5a000000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_ORD 56
#define DT_N_S_soc_S_hfrcoem23_5a000000_ORD_STR_SORTABLE 00056

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_EXISTS 1
#define DT_N_INST_0_silabs_series2_hfrcoem23 DT_N_S_soc_S_hfrcoem23_5a000000
#define DT_N_NODELABEL_hfrcoem23             DT_N_S_soc_S_hfrcoem23_5a000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_REG_NUM 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_REG_IDX_0_VAL_ADDRESS 1509949440 /* 0x5a000000 */
#define DT_N_S_soc_S_hfrcoem23_5a000000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_hfrcoem23_5a000000_RANGES_NUM 0
#define DT_N_S_soc_S_hfrcoem23_5a000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_hfrcoem23_5a000000_IRQ_NUM 0
#define DT_N_S_soc_S_hfrcoem23_5a000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_hfrcoem23_5a000000_COMPAT_MATCHES_silabs_series2_hfrcoem23 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_hfrcoem23_5a000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_COMPAT_MODEL_IDX_0 "series2-hfrcoem23"
#define DT_N_S_soc_S_hfrcoem23_5a000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_clock_frequency 19000000
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_clock_frequency_IDX_0_ENUM_IDX 5
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_clock_frequency_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_clock_frequency_IDX_0_ENUM_VAL_19000000_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible {"silabs,series2-hfrcoem23"}
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_IDX_0 "silabs,series2-hfrcoem23"
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_IDX_0_STRING_UNQUOTED silabs,series2-hfrcoem23
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_IDX_0_STRING_TOKEN silabs_series2_hfrcoem23
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_SERIES2_HFRCOEM23
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_hfrcoem23_5a000000, compatible, 0)
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_hfrcoem23_5a000000, compatible, 0)
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_hfrcoem23_5a000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_hfrcoem23_5a000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_LEN 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_reg {1509949440 /* 0x5a000000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_reg_IDX_0 1509949440
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_wakeup_source 0
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_hfrcoem23_5a000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/lfrco@50024000
 *
 * Node identifier: DT_N_S_soc_S_lfrco_50024000
 *
 * Binding (compatible = silabs,series2-lfrco):
 *   $ZEPHYR_BASE/dts/bindings/clock/silabs,series2-lfrco.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_lfrco_50024000_PATH "/soc/lfrco@50024000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_lfrco_50024000_FULL_NAME "lfrco@50024000"
#define DT_N_S_soc_S_lfrco_50024000_FULL_NAME_UNQUOTED lfrco@50024000
#define DT_N_S_soc_S_lfrco_50024000_FULL_NAME_TOKEN lfrco_50024000
#define DT_N_S_soc_S_lfrco_50024000_FULL_NAME_UPPER_TOKEN LFRCO_50024000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_lfrco_50024000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_lfrco_50024000_CHILD_IDX 8

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_lfrco_50024000_NODELABEL_NUM 1
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_NODELABEL(fn) fn(lfrco)
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_NODELABEL_VARGS(fn, ...) fn(lfrco, __VA_ARGS__)
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_lfrco_50024000_CHILD_NUM 0
#define DT_N_S_soc_S_lfrco_50024000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_lfrco_50024000_ORD 57
#define DT_N_S_soc_S_lfrco_50024000_ORD_STR_SORTABLE 00057

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_lfrco_50024000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_lfrco_50024000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_lfrco_50024000_EXISTS 1
#define DT_N_INST_0_silabs_series2_lfrco DT_N_S_soc_S_lfrco_50024000
#define DT_N_NODELABEL_lfrco             DT_N_S_soc_S_lfrco_50024000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_lfrco_50024000_REG_NUM 1
#define DT_N_S_soc_S_lfrco_50024000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_REG_IDX_0_VAL_ADDRESS 1342324736 /* 0x50024000 */
#define DT_N_S_soc_S_lfrco_50024000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_lfrco_50024000_RANGES_NUM 0
#define DT_N_S_soc_S_lfrco_50024000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_lfrco_50024000_IRQ_NUM 0
#define DT_N_S_soc_S_lfrco_50024000_IRQ_LEVEL 0
#define DT_N_S_soc_S_lfrco_50024000_COMPAT_MATCHES_silabs_series2_lfrco 1
#define DT_N_S_soc_S_lfrco_50024000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_lfrco_50024000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_COMPAT_MODEL_IDX_0 "series2-lfrco"
#define DT_N_S_soc_S_lfrco_50024000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_lfrco_50024000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_lfrco_50024000_P_precision_mode 0
#define DT_N_S_soc_S_lfrco_50024000_P_precision_mode_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_P_clock_frequency 32768
#define DT_N_S_soc_S_lfrco_50024000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_P_compatible {"silabs,series2-lfrco"}
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_IDX_0 "silabs,series2-lfrco"
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_IDX_0_STRING_UNQUOTED silabs,series2-lfrco
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_IDX_0_STRING_TOKEN silabs_series2_lfrco
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_SERIES2_LFRCO
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_lfrco_50024000, compatible, 0)
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_lfrco_50024000, compatible, 0)
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_lfrco_50024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_lfrco_50024000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_LEN 1
#define DT_N_S_soc_S_lfrco_50024000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_P_reg {1342324736 /* 0x50024000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_lfrco_50024000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_P_reg_IDX_0 1342324736
#define DT_N_S_soc_S_lfrco_50024000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_lfrco_50024000_P_reg_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_lfrco_50024000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_P_wakeup_source 0
#define DT_N_S_soc_S_lfrco_50024000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_lfrco_50024000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_lfrco_50024000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/semailbox@5c021000
 *
 * Node identifier: DT_N_S_soc_S_semailbox_5c021000
 *
 * Binding (compatible = silabs,gecko-semailbox):
 *   $ZEPHYR_BASE/dts/bindings/crypto/silabs,gecko-semailbox.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_semailbox_5c021000_PATH "/soc/semailbox@5c021000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_semailbox_5c021000_FULL_NAME "semailbox@5c021000"
#define DT_N_S_soc_S_semailbox_5c021000_FULL_NAME_UNQUOTED semailbox@5c021000
#define DT_N_S_soc_S_semailbox_5c021000_FULL_NAME_TOKEN semailbox_5c021000
#define DT_N_S_soc_S_semailbox_5c021000_FULL_NAME_UPPER_TOKEN SEMAILBOX_5C021000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_semailbox_5c021000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_semailbox_5c021000_CHILD_IDX 16

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_semailbox_5c021000_NODELABEL_NUM 1
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_NODELABEL(fn) fn(se)
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_NODELABEL_VARGS(fn, ...) fn(se, __VA_ARGS__)
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_semailbox_5c021000_CHILD_NUM 0
#define DT_N_S_soc_S_semailbox_5c021000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_semailbox_5c021000_ORD 58
#define DT_N_S_soc_S_semailbox_5c021000_ORD_STR_SORTABLE 00058

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_semailbox_5c021000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_semailbox_5c021000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_semailbox_5c021000_EXISTS 1
#define DT_N_INST_0_silabs_gecko_semailbox DT_N_S_soc_S_semailbox_5c021000
#define DT_N_NODELABEL_se                  DT_N_S_soc_S_semailbox_5c021000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_semailbox_5c021000_REG_NUM 1
#define DT_N_S_soc_S_semailbox_5c021000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_REG_IDX_0_VAL_ADDRESS 1543639040 /* 0x5c021000 */
#define DT_N_S_soc_S_semailbox_5c021000_REG_IDX_0_VAL_SIZE 4096 /* 0x1000 */
#define DT_N_S_soc_S_semailbox_5c021000_RANGES_NUM 0
#define DT_N_S_soc_S_semailbox_5c021000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NUM 3
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_0_VAL_irq 64
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_0_VAL_priority 3
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_1_VAL_irq 65
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_1_VAL_priority 3
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_2_VAL_irq 66
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_2_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_2_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_2_VAL_priority 3
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_2_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_2_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_LEVEL 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_setamperhost_VAL_irq DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_setamperhost_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_setamperhost_VAL_priority DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_setamperhost_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_setamperhost_CONTROLLER DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_sembrx_VAL_irq DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_sembrx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_sembrx_VAL_priority DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_sembrx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_sembrx_CONTROLLER DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_sembtx_VAL_irq DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_2_VAL_irq
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_sembtx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_sembtx_VAL_priority DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_2_VAL_priority
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_sembtx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_IRQ_NAME_sembtx_CONTROLLER DT_N_S_soc_S_semailbox_5c021000_IRQ_IDX_2_CONTROLLER
#define DT_N_S_soc_S_semailbox_5c021000_COMPAT_MATCHES_silabs_gecko_semailbox 1
#define DT_N_S_soc_S_semailbox_5c021000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_semailbox_5c021000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_COMPAT_MODEL_IDX_0 "gecko-semailbox"
#define DT_N_S_soc_S_semailbox_5c021000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_semailbox_5c021000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_semailbox_5c021000_P_reg {1543639040 /* 0x5c021000 */, 4096 /* 0x1000 */}
#define DT_N_S_soc_S_semailbox_5c021000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_reg_IDX_0 1543639040
#define DT_N_S_soc_S_semailbox_5c021000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_reg_IDX_1 4096
#define DT_N_S_soc_S_semailbox_5c021000_P_reg_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts {64 /* 0x40 */, 3 /* 0x3 */, 65 /* 0x41 */, 3 /* 0x3 */, 66 /* 0x42 */, 3 /* 0x3 */}
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_0 64
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_1 3
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_2 65
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_3 3
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_4_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_4 66
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_5_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_IDX_5 3
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_status "okay"
#define DT_N_S_soc_S_semailbox_5c021000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_semailbox_5c021000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_semailbox_5c021000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_semailbox_5c021000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_semailbox_5c021000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_semailbox_5c021000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_semailbox_5c021000, status, 0)
#define DT_N_S_soc_S_semailbox_5c021000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_semailbox_5c021000, status, 0)
#define DT_N_S_soc_S_semailbox_5c021000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_semailbox_5c021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_semailbox_5c021000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_semailbox_5c021000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_semailbox_5c021000_P_status_LEN 1
#define DT_N_S_soc_S_semailbox_5c021000_P_status_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible {"silabs,gecko-semailbox"}
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_IDX_0 "silabs,gecko-semailbox"
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-semailbox
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_semailbox
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_SEMAILBOX
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_semailbox_5c021000, compatible, 0)
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_semailbox_5c021000, compatible, 0)
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_semailbox_5c021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_semailbox_5c021000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_LEN 1
#define DT_N_S_soc_S_semailbox_5c021000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names {"SETAMPERHOST", "SEMBRX", "SEMBTX"}
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_0 "SETAMPERHOST"
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_0_STRING_UNQUOTED SETAMPERHOST
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_0_STRING_TOKEN SETAMPERHOST
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN SETAMPERHOST
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_1 "SEMBRX"
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_1_STRING_UNQUOTED SEMBRX
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_1_STRING_TOKEN SEMBRX
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN SEMBRX
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_2_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_2 "SEMBTX"
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_2_STRING_UNQUOTED SEMBTX
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_2_STRING_TOKEN SEMBTX
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_IDX_2_STRING_UPPER_TOKEN SEMBTX
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 1) \
	fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 2)
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 1) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 2)
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 1, __VA_ARGS__) \
	fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 1, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_semailbox_5c021000, interrupt_names, 2, __VA_ARGS__)
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_LEN 3
#define DT_N_S_soc_S_semailbox_5c021000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_semailbox_5c021000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_wakeup_source 0
#define DT_N_S_soc_S_semailbox_5c021000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_semailbox_5c021000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_semailbox_5c021000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/sysrtc@500a8000
 *
 * Node identifier: DT_N_S_soc_S_sysrtc_500a8000
 *
 * Binding (compatible = silabs,gecko-stimer):
 *   $ZEPHYR_BASE/dts/bindings/rtc/silabs,gecko-stimer.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_sysrtc_500a8000_PATH "/soc/sysrtc@500a8000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_sysrtc_500a8000_FULL_NAME "sysrtc@500a8000"
#define DT_N_S_soc_S_sysrtc_500a8000_FULL_NAME_UNQUOTED sysrtc@500a8000
#define DT_N_S_soc_S_sysrtc_500a8000_FULL_NAME_TOKEN sysrtc_500a8000
#define DT_N_S_soc_S_sysrtc_500a8000_FULL_NAME_UPPER_TOKEN SYSRTC_500A8000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_sysrtc_500a8000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_sysrtc_500a8000_CHILD_IDX 18

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_sysrtc_500a8000_NODELABEL_NUM 2
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_NODELABEL(fn) fn(sysrtc0) fn(stimer0)
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_NODELABEL_VARGS(fn, ...) fn(sysrtc0, __VA_ARGS__) fn(stimer0, __VA_ARGS__)
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_sysrtc_500a8000_CHILD_NUM 0
#define DT_N_S_soc_S_sysrtc_500a8000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_sysrtc_500a8000_ORD 59
#define DT_N_S_soc_S_sysrtc_500a8000_ORD_STR_SORTABLE 00059

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_sysrtc_500a8000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_sysrtc_500a8000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_sysrtc_500a8000_EXISTS 1
#define DT_N_INST_0_silabs_gecko_stimer DT_N_S_soc_S_sysrtc_500a8000
#define DT_N_NODELABEL_sysrtc0          DT_N_S_soc_S_sysrtc_500a8000
#define DT_N_NODELABEL_stimer0          DT_N_S_soc_S_sysrtc_500a8000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_sysrtc_500a8000_REG_NUM 1
#define DT_N_S_soc_S_sysrtc_500a8000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_REG_IDX_0_VAL_ADDRESS 1342865408 /* 0x500a8000 */
#define DT_N_S_soc_S_sysrtc_500a8000_REG_IDX_0_VAL_SIZE 12372 /* 0x3054 */
#define DT_N_S_soc_S_sysrtc_500a8000_RANGES_NUM 0
#define DT_N_S_soc_S_sysrtc_500a8000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NUM 2
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_0_VAL_irq 67
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_1_VAL_irq 68
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_LEVEL 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NAME_sysrtc_app_VAL_irq DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NAME_sysrtc_app_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NAME_sysrtc_app_VAL_priority DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NAME_sysrtc_app_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NAME_sysrtc_app_CONTROLLER DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NAME_sysrtc_seq_VAL_irq DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NAME_sysrtc_seq_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NAME_sysrtc_seq_VAL_priority DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NAME_sysrtc_seq_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_IRQ_NAME_sysrtc_seq_CONTROLLER DT_N_S_soc_S_sysrtc_500a8000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_sysrtc_500a8000_COMPAT_MATCHES_silabs_gecko_stimer 1
#define DT_N_S_soc_S_sysrtc_500a8000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_sysrtc_500a8000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_COMPAT_MODEL_IDX_0 "gecko-stimer"
#define DT_N_S_soc_S_sysrtc_500a8000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_sysrtc_500a8000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_sysrtc_500a8000_P_reg {1342865408 /* 0x500a8000 */, 12372 /* 0x3054 */}
#define DT_N_S_soc_S_sysrtc_500a8000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_reg_IDX_0 1342865408
#define DT_N_S_soc_S_sysrtc_500a8000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_reg_IDX_1 12372
#define DT_N_S_soc_S_sysrtc_500a8000_P_reg_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_clock_frequency 32768
#define DT_N_S_soc_S_sysrtc_500a8000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupts {67 /* 0x43 */, 0 /* 0x0 */, 68 /* 0x44 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupts_IDX_0 67
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupts_IDX_2 68
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_prescaler 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_prescaler_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_status "okay"
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sysrtc_500a8000, status, 0)
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sysrtc_500a8000, status, 0)
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sysrtc_500a8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sysrtc_500a8000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_LEN 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_status_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible {"silabs,gecko-stimer"}
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_IDX_0 "silabs,gecko-stimer"
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-stimer
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_stimer
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_STIMER
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sysrtc_500a8000, compatible, 0)
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sysrtc_500a8000, compatible, 0)
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sysrtc_500a8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sysrtc_500a8000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_LEN 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names {"sysrtc_app", "sysrtc_seq"}
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_IDX_0 "sysrtc_app"
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_IDX_0_STRING_UNQUOTED sysrtc_app
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_IDX_0_STRING_TOKEN sysrtc_app
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN SYSRTC_APP
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_IDX_1 "sysrtc_seq"
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_IDX_1_STRING_UNQUOTED sysrtc_seq
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_IDX_1_STRING_TOKEN sysrtc_seq
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN SYSRTC_SEQ
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sysrtc_500a8000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_sysrtc_500a8000, interrupt_names, 1)
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sysrtc_500a8000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sysrtc_500a8000, interrupt_names, 1)
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sysrtc_500a8000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_sysrtc_500a8000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sysrtc_500a8000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_sysrtc_500a8000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_sysrtc_500a8000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_50008000
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_IDX_0_VAL_enable 30
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_IDX_0_VAL_enable_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_IDX_0_VAL_branch 19
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_IDX_0_VAL_branch_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_sysrtc_500a8000, clocks, 0)
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_sysrtc_500a8000, clocks, 0)
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_sysrtc_500a8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_sysrtc_500a8000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_LEN 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_sysrtc_500a8000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_wakeup_source 0
#define DT_N_S_soc_S_sysrtc_500a8000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_sysrtc_500a8000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_sysrtc_500a8000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/timer@e000e010
 *
 * Node identifier: DT_N_S_soc_S_timer_e000e010
 *
 * Binding (compatible = arm,armv8m-systick):
 *   $ZEPHYR_BASE/dts/bindings/timer/arm,armv8m-systick.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_timer_e000e010_PATH "/soc/timer@e000e010"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME "timer@e000e010"
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UNQUOTED timer@e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_TOKEN timer_e000e010
#define DT_N_S_soc_S_timer_e000e010_FULL_NAME_UPPER_TOKEN TIMER_E000E010

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_timer_e000e010_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_timer_e000e010_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_timer_e000e010_NODELABEL_NUM 1
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL(fn) fn(systick)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_NODELABEL_VARGS(fn, ...) fn(systick, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM 0
#define DT_N_S_soc_S_timer_e000e010_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_timer_e000e010_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_timer_e000e010_ORD 60
#define DT_N_S_soc_S_timer_e000e010_ORD_STR_SORTABLE 00060

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_timer_e000e010_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_timer_e000e010_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_timer_e000e010_EXISTS 1
#define DT_N_INST_0_arm_armv8m_systick DT_N_S_soc_S_timer_e000e010
#define DT_N_NODELABEL_systick         DT_N_S_soc_S_timer_e000e010

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_timer_e000e010_REG_NUM 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_ADDRESS 3758153744 /* 0xe000e010 */
#define DT_N_S_soc_S_timer_e000e010_REG_IDX_0_VAL_SIZE 16 /* 0x10 */
#define DT_N_S_soc_S_timer_e000e010_RANGES_NUM 0
#define DT_N_S_soc_S_timer_e000e010_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_timer_e000e010_IRQ_NUM 0
#define DT_N_S_soc_S_timer_e000e010_IRQ_LEVEL 0
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MATCHES_arm_armv8m_systick 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_VENDOR_IDX_0 "ARM Ltd."
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_COMPAT_MODEL_IDX_0 "armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_timer_e000e010_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_timer_e000e010_P_reg {3758153744 /* 0xe000e010 */, 16 /* 0x10 */}
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_0 3758153744
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_reg_IDX_1 16
#define DT_N_S_soc_S_timer_e000e010_P_reg_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible {"arm,armv8m-systick"}
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0 "arm,armv8m-systick"
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UNQUOTED arm,armv8m-systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_TOKEN arm_armv8m_systick
#define DT_N_S_soc_S_timer_e000e010_P_compatible_IDX_0_STRING_UPPER_TOKEN ARM_ARMV8M_SYSTICK
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_timer_e000e010, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_timer_e000e010_P_compatible_LEN 1
#define DT_N_S_soc_S_timer_e000e010_P_compatible_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source 0
#define DT_N_S_soc_S_timer_e000e010_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_timer_e000e010_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/ulfrco@50028000
 *
 * Node identifier: DT_N_S_soc_S_ulfrco_50028000
 *
 * Binding (compatible = fixed-clock):
 *   $ZEPHYR_BASE/dts/bindings/clock/fixed-clock.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_ulfrco_50028000_PATH "/soc/ulfrco@50028000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_ulfrco_50028000_FULL_NAME "ulfrco@50028000"
#define DT_N_S_soc_S_ulfrco_50028000_FULL_NAME_UNQUOTED ulfrco@50028000
#define DT_N_S_soc_S_ulfrco_50028000_FULL_NAME_TOKEN ulfrco_50028000
#define DT_N_S_soc_S_ulfrco_50028000_FULL_NAME_UPPER_TOKEN ULFRCO_50028000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_ulfrco_50028000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_ulfrco_50028000_CHILD_IDX 9

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_ulfrco_50028000_NODELABEL_NUM 1
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_NODELABEL(fn) fn(ulfrco)
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_NODELABEL_VARGS(fn, ...) fn(ulfrco, __VA_ARGS__)
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_ulfrco_50028000_CHILD_NUM 0
#define DT_N_S_soc_S_ulfrco_50028000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_ulfrco_50028000_ORD 61
#define DT_N_S_soc_S_ulfrco_50028000_ORD_STR_SORTABLE 00061

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_ulfrco_50028000_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_ulfrco_50028000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_ulfrco_50028000_EXISTS 1
#define DT_N_INST_1_fixed_clock DT_N_S_soc_S_ulfrco_50028000
#define DT_N_NODELABEL_ulfrco   DT_N_S_soc_S_ulfrco_50028000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_ulfrco_50028000_REG_NUM 1
#define DT_N_S_soc_S_ulfrco_50028000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ulfrco_50028000_REG_IDX_0_VAL_ADDRESS 1342341120 /* 0x50028000 */
#define DT_N_S_soc_S_ulfrco_50028000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_ulfrco_50028000_RANGES_NUM 0
#define DT_N_S_soc_S_ulfrco_50028000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_ulfrco_50028000_IRQ_NUM 0
#define DT_N_S_soc_S_ulfrco_50028000_IRQ_LEVEL 0
#define DT_N_S_soc_S_ulfrco_50028000_COMPAT_MATCHES_fixed_clock 1
#define DT_N_S_soc_S_ulfrco_50028000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_ulfrco_50028000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_ulfrco_50028000_P_clock_frequency 1000
#define DT_N_S_soc_S_ulfrco_50028000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible {"fixed-clock"}
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_IDX_0 "fixed-clock"
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_IDX_0_STRING_UNQUOTED fixed-clock
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_IDX_0_STRING_TOKEN fixed_clock
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_IDX_0_STRING_UPPER_TOKEN FIXED_CLOCK
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_ulfrco_50028000, compatible, 0)
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_ulfrco_50028000, compatible, 0)
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_ulfrco_50028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_ulfrco_50028000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_LEN 1
#define DT_N_S_soc_S_ulfrco_50028000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_ulfrco_50028000_P_reg {1342341120 /* 0x50028000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_ulfrco_50028000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_ulfrco_50028000_P_reg_IDX_0 1342341120
#define DT_N_S_soc_S_ulfrco_50028000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_ulfrco_50028000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_ulfrco_50028000_P_reg_EXISTS 1
#define DT_N_S_soc_S_ulfrco_50028000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_ulfrco_50028000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_ulfrco_50028000_P_wakeup_source 0
#define DT_N_S_soc_S_ulfrco_50028000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_ulfrco_50028000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_ulfrco_50028000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@5003c440
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_5003c440
 *
 * Binding (compatible = silabs,dbus-pinctrl):
 *   $ZEPHYR_BASE/dts/bindings/pinctrl/silabs,dbus-pinctrl.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_5003c440_PATH "/soc/pin-controller@5003c440"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_5003c440_FULL_NAME "pin-controller@5003c440"
#define DT_N_S_soc_S_pin_controller_5003c440_FULL_NAME_UNQUOTED pin-controller@5003c440
#define DT_N_S_soc_S_pin_controller_5003c440_FULL_NAME_TOKEN pin_controller_5003c440
#define DT_N_S_soc_S_pin_controller_5003c440_FULL_NAME_UPPER_TOKEN PIN_CONTROLLER_5003C440

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_pin_controller_5003c440_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_5003c440_CHILD_IDX 20

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_5003c440_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_NODELABEL(fn) fn(pinctrl)
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_NODELABEL_VARGS(fn, ...) fn(pinctrl, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_5003c440_CHILD_NUM 4
#define DT_N_S_soc_S_pin_controller_5003c440_CHILD_NUM_STATUS_OKAY 4
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin)
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin)
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin)
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin)
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_5003c440_ORD 62
#define DT_N_S_soc_S_pin_controller_5003c440_ORD_STR_SORTABLE 00062

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_5003c440_REQUIRES_ORDS \
	6, /* /soc */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_5003c440_SUPPORTS_ORDS \
	63, /* /soc/pin-controller@5003c440/usart0_default */ \
	78, /* /soc/pin-controller@5003c440/i2c0_default */ \
	81, /* /soc/pin-controller@5003c440/i2c0_scl_pin */ \
	82, /* /soc/pin-controller@5003c440/i2c0_sda_pin */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_5003c440_EXISTS 1
#define DT_N_INST_0_silabs_dbus_pinctrl DT_N_S_soc_S_pin_controller_5003c440
#define DT_N_NODELABEL_pinctrl          DT_N_S_soc_S_pin_controller_5003c440

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_5003c440_REG_NUM 1
#define DT_N_S_soc_S_pin_controller_5003c440_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_REG_IDX_0_VAL_ADDRESS 1342424128 /* 0x5003c440 */
#define DT_N_S_soc_S_pin_controller_5003c440_REG_IDX_0_VAL_SIZE 3008 /* 0xbc0 */
#define DT_N_S_soc_S_pin_controller_5003c440_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_5003c440_COMPAT_MATCHES_silabs_dbus_pinctrl 1
#define DT_N_S_soc_S_pin_controller_5003c440_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_pin_controller_5003c440_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_COMPAT_MODEL_IDX_0 "dbus-pinctrl"
#define DT_N_S_soc_S_pin_controller_5003c440_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_5003c440_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible {"silabs,dbus-pinctrl"}
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_IDX_0 "silabs,dbus-pinctrl"
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_IDX_0_STRING_UNQUOTED silabs,dbus-pinctrl
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_IDX_0_STRING_TOKEN silabs_dbus_pinctrl
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_DBUS_PINCTRL
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_5003c440, compatible, 0)
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_5003c440, compatible, 0)
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_5003c440, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_LEN 1
#define DT_N_S_soc_S_pin_controller_5003c440_P_compatible_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_P_reg {1342424128 /* 0x5003c440 */, 3008 /* 0xbc0 */}
#define DT_N_S_soc_S_pin_controller_5003c440_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_P_reg_IDX_0 1342424128
#define DT_N_S_soc_S_pin_controller_5003c440_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_P_reg_IDX_1 3008
#define DT_N_S_soc_S_pin_controller_5003c440_P_reg_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_pin_controller_5003c440_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_P_wakeup_source 0
#define DT_N_S_soc_S_pin_controller_5003c440_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_pin_controller_5003c440_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@5003c440/usart0_default
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_PATH "/soc/pin-controller@5003c440/usart0_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FULL_NAME "usart0_default"
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FULL_NAME_UNQUOTED usart0_default
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FULL_NAME_TOKEN usart0_default
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FULL_NAME_UPPER_TOKEN USART0_DEFAULT

/* Node parent (/soc/pin-controller@5003c440) identifier: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_PARENT DT_N_S_soc_S_pin_controller_5003c440

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_NODELABEL(fn) fn(usart0_default)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart0_default, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_CHILD_NUM 2
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_CHILD_NUM_STATUS_OKAY 2
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_ORD 63
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_ORD_STR_SORTABLE 00063

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_REQUIRES_ORDS \
	62, /* /soc/pin-controller@5003c440 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_SUPPORTS_ORDS \
	64, /* /soc/usart@5005c000 */ \
	84, /* /soc/pin-controller@5003c440/usart0_default/group0 */ \
	85, /* /soc/pin-controller@5003c440/usart0_default/group1 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_EXISTS 1
#define DT_N_NODELABEL_usart0_default DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/usart@5005c000
 *
 * Node identifier: DT_N_S_soc_S_usart_5005c000
 *
 * Binding (compatible = silabs,gecko-usart):
 *   $ZEPHYR_BASE/dts/bindings/serial/silabs,gecko-usart.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_usart_5005c000_PATH "/soc/usart@5005c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_usart_5005c000_FULL_NAME "usart@5005c000"
#define DT_N_S_soc_S_usart_5005c000_FULL_NAME_UNQUOTED usart@5005c000
#define DT_N_S_soc_S_usart_5005c000_FULL_NAME_TOKEN usart_5005c000
#define DT_N_S_soc_S_usart_5005c000_FULL_NAME_UPPER_TOKEN USART_5005C000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_usart_5005c000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_usart_5005c000_CHILD_IDX 12

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_usart_5005c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_usart_5005c000_FOREACH_NODELABEL(fn) fn(usart0)
#define DT_N_S_soc_S_usart_5005c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(usart0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_usart_5005c000_CHILD_NUM 0
#define DT_N_S_soc_S_usart_5005c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_usart_5005c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_usart_5005c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_5005c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_5005c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_usart_5005c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_usart_5005c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_usart_5005c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_usart_5005c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_usart_5005c000_ORD 64
#define DT_N_S_soc_S_usart_5005c000_ORD_STR_SORTABLE 00064

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_usart_5005c000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */ \
	63, /* /soc/pin-controller@5003c440/usart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_usart_5005c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_usart_5005c000_EXISTS 1
#define DT_N_INST_0_silabs_gecko_usart DT_N_S_soc_S_usart_5005c000
#define DT_N_NODELABEL_usart0          DT_N_S_soc_S_usart_5005c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_usart_5005c000_REG_NUM 1
#define DT_N_S_soc_S_usart_5005c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_REG_IDX_0_VAL_ADDRESS 1342554112 /* 0x5005c000 */
#define DT_N_S_soc_S_usart_5005c000_REG_IDX_0_VAL_SIZE 12396 /* 0x306c */
#define DT_N_S_soc_S_usart_5005c000_RANGES_NUM 0
#define DT_N_S_soc_S_usart_5005c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_usart_5005c000_IRQ_NUM 2
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_0_VAL_irq 9
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_1_VAL_irq 10
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_1_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_1_VAL_priority 0
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_1_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_IDX_1_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_usart_5005c000_IRQ_LEVEL 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_NAME_rx_VAL_irq DT_N_S_soc_S_usart_5005c000_IRQ_IDX_0_VAL_irq
#define DT_N_S_soc_S_usart_5005c000_IRQ_NAME_rx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_NAME_rx_VAL_priority DT_N_S_soc_S_usart_5005c000_IRQ_IDX_0_VAL_priority
#define DT_N_S_soc_S_usart_5005c000_IRQ_NAME_rx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_NAME_rx_CONTROLLER DT_N_S_soc_S_usart_5005c000_IRQ_IDX_0_CONTROLLER
#define DT_N_S_soc_S_usart_5005c000_IRQ_NAME_tx_VAL_irq DT_N_S_soc_S_usart_5005c000_IRQ_IDX_1_VAL_irq
#define DT_N_S_soc_S_usart_5005c000_IRQ_NAME_tx_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_NAME_tx_VAL_priority DT_N_S_soc_S_usart_5005c000_IRQ_IDX_1_VAL_priority
#define DT_N_S_soc_S_usart_5005c000_IRQ_NAME_tx_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_IRQ_NAME_tx_CONTROLLER DT_N_S_soc_S_usart_5005c000_IRQ_IDX_1_CONTROLLER
#define DT_N_S_soc_S_usart_5005c000_COMPAT_MATCHES_silabs_gecko_usart 1
#define DT_N_S_soc_S_usart_5005c000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_usart_5005c000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_COMPAT_MODEL_IDX_0 "gecko-usart"
#define DT_N_S_soc_S_usart_5005c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_usart_5005c000_PINCTRL_NUM 1
#define DT_N_S_soc_S_usart_5005c000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_usart_5005c000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usart_5005c000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_usart_5005c000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default

/* Generic property macros: */
#define DT_N_S_soc_S_usart_5005c000_P_reg {1342554112 /* 0x5005c000 */, 12396 /* 0x306c */}
#define DT_N_S_soc_S_usart_5005c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_reg_IDX_0 1342554112
#define DT_N_S_soc_S_usart_5005c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_reg_IDX_1 12396
#define DT_N_S_soc_S_usart_5005c000_P_reg_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_interrupts {9 /* 0x9 */, 0 /* 0x0 */, 10 /* 0xa */, 0 /* 0x0 */}
#define DT_N_S_soc_S_usart_5005c000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_interrupts_IDX_0 9
#define DT_N_S_soc_S_usart_5005c000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_usart_5005c000_P_interrupts_IDX_2_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_interrupts_IDX_2 10
#define DT_N_S_soc_S_usart_5005c000_P_interrupts_IDX_3_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_interrupts_IDX_3 0
#define DT_N_S_soc_S_usart_5005c000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_peripheral_id 0
#define DT_N_S_soc_S_usart_5005c000_P_peripheral_id_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_current_speed 115200
#define DT_N_S_soc_S_usart_5005c000_P_current_speed_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_hw_flow_control 0
#define DT_N_S_soc_S_usart_5005c000_P_hw_flow_control_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_status "okay"
#define DT_N_S_soc_S_usart_5005c000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_usart_5005c000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_usart_5005c000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_usart_5005c000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_usart_5005c000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_usart_5005c000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_5005c000, status, 0)
#define DT_N_S_soc_S_usart_5005c000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_5005c000, status, 0)
#define DT_N_S_soc_S_usart_5005c000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_5005c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_5005c000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_status_LEN 1
#define DT_N_S_soc_S_usart_5005c000_P_status_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_compatible {"silabs,gecko-usart"}
#define DT_N_S_soc_S_usart_5005c000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_compatible_IDX_0 "silabs,gecko-usart"
#define DT_N_S_soc_S_usart_5005c000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-usart
#define DT_N_S_soc_S_usart_5005c000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_usart
#define DT_N_S_soc_S_usart_5005c000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_USART
#define DT_N_S_soc_S_usart_5005c000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_5005c000, compatible, 0)
#define DT_N_S_soc_S_usart_5005c000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_5005c000, compatible, 0)
#define DT_N_S_soc_S_usart_5005c000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_5005c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_5005c000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_compatible_LEN 1
#define DT_N_S_soc_S_usart_5005c000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names {"rx", "tx"}
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_IDX_0 "rx"
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_IDX_0_STRING_UNQUOTED rx
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_IDX_0_STRING_TOKEN rx
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_IDX_0_STRING_UPPER_TOKEN RX
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_IDX_1_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_IDX_1 "tx"
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_IDX_1_STRING_UNQUOTED tx
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_IDX_1_STRING_TOKEN tx
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_IDX_1_STRING_UPPER_TOKEN TX
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_5005c000, interrupt_names, 0) \
	fn(DT_N_S_soc_S_usart_5005c000, interrupt_names, 1)
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_5005c000, interrupt_names, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usart_5005c000, interrupt_names, 1)
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_5005c000, interrupt_names, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_usart_5005c000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_5005c000, interrupt_names, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_usart_5005c000, interrupt_names, 1, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_LEN 2
#define DT_N_S_soc_S_usart_5005c000_P_interrupt_names_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_50008000
#define DT_N_S_soc_S_usart_5005c000_P_clocks_IDX_0_VAL_enable 9
#define DT_N_S_soc_S_usart_5005c000_P_clocks_IDX_0_VAL_enable_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_clocks_IDX_0_VAL_branch 3
#define DT_N_S_soc_S_usart_5005c000_P_clocks_IDX_0_VAL_branch_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_5005c000, clocks, 0)
#define DT_N_S_soc_S_usart_5005c000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_5005c000, clocks, 0)
#define DT_N_S_soc_S_usart_5005c000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_5005c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_5005c000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_clocks_LEN 1
#define DT_N_S_soc_S_usart_5005c000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_usart_5005c000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_wakeup_source 0
#define DT_N_S_soc_S_usart_5005c000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_usart_5005c000_P_zephyr_pm_device_runtime_auto_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_5005c000, pinctrl_0, 0)
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_5005c000, pinctrl_0, 0)
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_5005c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_5005c000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_usart_5005c000, pinctrl_names, 0)
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_usart_5005c000, pinctrl_names, 0)
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_usart_5005c000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_usart_5005c000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_usart_5005c000_P_pinctrl_names_EXISTS 1

/*
 * Devicetree node: /soc/wdog@5b004000
 *
 * Node identifier: DT_N_S_soc_S_wdog_5b004000
 *
 * Binding (compatible = silabs,gecko-wdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/silabs,gecko-wdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_wdog_5b004000_PATH "/soc/wdog@5b004000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_wdog_5b004000_FULL_NAME "wdog@5b004000"
#define DT_N_S_soc_S_wdog_5b004000_FULL_NAME_UNQUOTED wdog@5b004000
#define DT_N_S_soc_S_wdog_5b004000_FULL_NAME_TOKEN wdog_5b004000
#define DT_N_S_soc_S_wdog_5b004000_FULL_NAME_UPPER_TOKEN WDOG_5B004000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_wdog_5b004000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_wdog_5b004000_CHILD_IDX 22

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_wdog_5b004000_NODELABEL_NUM 1
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_NODELABEL(fn) fn(wdog0)
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdog0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_wdog_5b004000_CHILD_NUM 0
#define DT_N_S_soc_S_wdog_5b004000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_wdog_5b004000_ORD 65
#define DT_N_S_soc_S_wdog_5b004000_ORD_STR_SORTABLE 00065

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_wdog_5b004000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_wdog_5b004000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_wdog_5b004000_EXISTS 1
#define DT_N_ALIAS_watchdog0          DT_N_S_soc_S_wdog_5b004000
#define DT_N_INST_0_silabs_gecko_wdog DT_N_S_soc_S_wdog_5b004000
#define DT_N_NODELABEL_wdog0          DT_N_S_soc_S_wdog_5b004000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_wdog_5b004000_REG_NUM 1
#define DT_N_S_soc_S_wdog_5b004000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_REG_IDX_0_VAL_ADDRESS 1526743040 /* 0x5b004000 */
#define DT_N_S_soc_S_wdog_5b004000_REG_IDX_0_VAL_SIZE 44 /* 0x2c */
#define DT_N_S_soc_S_wdog_5b004000_RANGES_NUM 0
#define DT_N_S_soc_S_wdog_5b004000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_wdog_5b004000_IRQ_NUM 1
#define DT_N_S_soc_S_wdog_5b004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_IRQ_IDX_0_VAL_irq 42
#define DT_N_S_soc_S_wdog_5b004000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_wdog_5b004000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_wdog_5b004000_IRQ_LEVEL 1
#define DT_N_S_soc_S_wdog_5b004000_COMPAT_MATCHES_silabs_gecko_wdog 1
#define DT_N_S_soc_S_wdog_5b004000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_wdog_5b004000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_COMPAT_MODEL_IDX_0 "gecko-wdog"
#define DT_N_S_soc_S_wdog_5b004000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_wdog_5b004000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_wdog_5b004000_P_reg {1526743040 /* 0x5b004000 */, 44 /* 0x2c */}
#define DT_N_S_soc_S_wdog_5b004000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_reg_IDX_0 1526743040
#define DT_N_S_soc_S_wdog_5b004000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_reg_IDX_1 44
#define DT_N_S_soc_S_wdog_5b004000_P_reg_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_interrupts {42 /* 0x2a */, 0 /* 0x0 */}
#define DT_N_S_soc_S_wdog_5b004000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_interrupts_IDX_0 42
#define DT_N_S_soc_S_wdog_5b004000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_wdog_5b004000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_peripheral_id 0
#define DT_N_S_soc_S_wdog_5b004000_P_peripheral_id_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_status "okay"
#define DT_N_S_soc_S_wdog_5b004000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_wdog_5b004000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_wdog_5b004000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_wdog_5b004000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_wdog_5b004000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_wdog_5b004000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_5b004000, status, 0)
#define DT_N_S_soc_S_wdog_5b004000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_5b004000, status, 0)
#define DT_N_S_soc_S_wdog_5b004000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_5b004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b004000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_5b004000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b004000_P_status_LEN 1
#define DT_N_S_soc_S_wdog_5b004000_P_status_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_compatible {"silabs,gecko-wdog"}
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_IDX_0 "silabs,gecko-wdog"
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-wdog
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_wdog
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_WDOG
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_5b004000, compatible, 0)
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_5b004000, compatible, 0)
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_5b004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_5b004000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_LEN 1
#define DT_N_S_soc_S_wdog_5b004000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_50008000
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_IDX_0_VAL_enable 13
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_IDX_0_VAL_enable_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_IDX_0_VAL_branch 16
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_IDX_0_VAL_branch_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_5b004000, clocks, 0)
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_5b004000, clocks, 0)
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_5b004000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_5b004000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_LEN 1
#define DT_N_S_soc_S_wdog_5b004000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_wdog_5b004000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_wakeup_source 0
#define DT_N_S_soc_S_wdog_5b004000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_wdog_5b004000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_wdog_5b004000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/wdog@5b008000
 *
 * Node identifier: DT_N_S_soc_S_wdog_5b008000
 *
 * Binding (compatible = silabs,gecko-wdog):
 *   $ZEPHYR_BASE/dts/bindings/watchdog/silabs,gecko-wdog.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_wdog_5b008000_PATH "/soc/wdog@5b008000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_wdog_5b008000_FULL_NAME "wdog@5b008000"
#define DT_N_S_soc_S_wdog_5b008000_FULL_NAME_UNQUOTED wdog@5b008000
#define DT_N_S_soc_S_wdog_5b008000_FULL_NAME_TOKEN wdog_5b008000
#define DT_N_S_soc_S_wdog_5b008000_FULL_NAME_UPPER_TOKEN WDOG_5B008000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_wdog_5b008000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_wdog_5b008000_CHILD_IDX 23

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_wdog_5b008000_NODELABEL_NUM 1
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_NODELABEL(fn) fn(wdog1)
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_NODELABEL_VARGS(fn, ...) fn(wdog1, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_wdog_5b008000_CHILD_NUM 0
#define DT_N_S_soc_S_wdog_5b008000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_wdog_5b008000_ORD 66
#define DT_N_S_soc_S_wdog_5b008000_ORD_STR_SORTABLE 00066

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_wdog_5b008000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_wdog_5b008000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_wdog_5b008000_EXISTS 1
#define DT_N_INST_1_silabs_gecko_wdog DT_N_S_soc_S_wdog_5b008000
#define DT_N_NODELABEL_wdog1          DT_N_S_soc_S_wdog_5b008000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_wdog_5b008000_REG_NUM 1
#define DT_N_S_soc_S_wdog_5b008000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_REG_IDX_0_VAL_ADDRESS 1526759424 /* 0x5b008000 */
#define DT_N_S_soc_S_wdog_5b008000_REG_IDX_0_VAL_SIZE 44 /* 0x2c */
#define DT_N_S_soc_S_wdog_5b008000_RANGES_NUM 0
#define DT_N_S_soc_S_wdog_5b008000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_wdog_5b008000_IRQ_NUM 1
#define DT_N_S_soc_S_wdog_5b008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_IRQ_IDX_0_VAL_irq 43
#define DT_N_S_soc_S_wdog_5b008000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_wdog_5b008000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_wdog_5b008000_IRQ_LEVEL 1
#define DT_N_S_soc_S_wdog_5b008000_COMPAT_MATCHES_silabs_gecko_wdog 1
#define DT_N_S_soc_S_wdog_5b008000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_wdog_5b008000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_COMPAT_MODEL_IDX_0 "gecko-wdog"
#define DT_N_S_soc_S_wdog_5b008000_STATUS_disabled 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_wdog_5b008000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_wdog_5b008000_P_reg {1526759424 /* 0x5b008000 */, 44 /* 0x2c */}
#define DT_N_S_soc_S_wdog_5b008000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_reg_IDX_0 1526759424
#define DT_N_S_soc_S_wdog_5b008000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_reg_IDX_1 44
#define DT_N_S_soc_S_wdog_5b008000_P_reg_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_interrupts {43 /* 0x2b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_wdog_5b008000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_interrupts_IDX_0 43
#define DT_N_S_soc_S_wdog_5b008000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_wdog_5b008000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_peripheral_id 1
#define DT_N_S_soc_S_wdog_5b008000_P_peripheral_id_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_status "disabled"
#define DT_N_S_soc_S_wdog_5b008000_P_status_STRING_UNQUOTED disabled
#define DT_N_S_soc_S_wdog_5b008000_P_status_STRING_TOKEN disabled
#define DT_N_S_soc_S_wdog_5b008000_P_status_STRING_UPPER_TOKEN DISABLED
#define DT_N_S_soc_S_wdog_5b008000_P_status_IDX_0 "disabled"
#define DT_N_S_soc_S_wdog_5b008000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_status_IDX_0_ENUM_IDX 2
#define DT_N_S_soc_S_wdog_5b008000_P_status_IDX_0_ENUM_VAL_disabled_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_5b008000, status, 0)
#define DT_N_S_soc_S_wdog_5b008000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_5b008000, status, 0)
#define DT_N_S_soc_S_wdog_5b008000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_5b008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b008000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_5b008000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b008000_P_status_LEN 1
#define DT_N_S_soc_S_wdog_5b008000_P_status_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_compatible {"silabs,gecko-wdog"}
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_IDX_0 "silabs,gecko-wdog"
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-wdog
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_wdog
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_WDOG
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_5b008000, compatible, 0)
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_5b008000, compatible, 0)
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_5b008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_5b008000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_LEN 1
#define DT_N_S_soc_S_wdog_5b008000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_50008000
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_IDX_0_VAL_enable 81
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_IDX_0_VAL_enable_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_IDX_0_VAL_branch 17
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_IDX_0_VAL_branch_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_wdog_5b008000, clocks, 0)
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_wdog_5b008000, clocks, 0)
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_wdog_5b008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_wdog_5b008000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_LEN 1
#define DT_N_S_soc_S_wdog_5b008000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_wdog_5b008000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_wakeup_source 0
#define DT_N_S_soc_S_wdog_5b008000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_wdog_5b008000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_wdog_5b008000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@50030000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_50030000
 *
 * Binding (compatible = silabs,gecko-flash-controller):
 *   $ZEPHYR_BASE/dts/bindings/flash_controller/silabs,gecko-flash-controller.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_50030000_PATH "/soc/flash-controller@50030000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_50030000_FULL_NAME "flash-controller@50030000"
#define DT_N_S_soc_S_flash_controller_50030000_FULL_NAME_UNQUOTED flash-controller@50030000
#define DT_N_S_soc_S_flash_controller_50030000_FULL_NAME_TOKEN flash_controller_50030000
#define DT_N_S_soc_S_flash_controller_50030000_FULL_NAME_UPPER_TOKEN FLASH_CONTROLLER_50030000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_50030000_CHILD_IDX 11

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_50030000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_NODELABEL(fn) fn(msc)
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_NODELABEL_VARGS(fn, ...) fn(msc, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_50030000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000)
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_50030000_ORD 67
#define DT_N_S_soc_S_flash_controller_50030000_ORD_STR_SORTABLE 00067

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_50030000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_50030000_SUPPORTS_ORDS \
	68, /* /soc/flash-controller@50030000/flash@8000000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_50030000_EXISTS 1
#define DT_N_INST_0_silabs_gecko_flash_controller DT_N_S_soc_S_flash_controller_50030000
#define DT_N_NODELABEL_msc                        DT_N_S_soc_S_flash_controller_50030000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_50030000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_REG_IDX_0_VAL_ADDRESS 1342373888 /* 0x50030000 */
#define DT_N_S_soc_S_flash_controller_50030000_REG_IDX_0_VAL_SIZE 12616 /* 0x3148 */
#define DT_N_S_soc_S_flash_controller_50030000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_IRQ_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_IRQ_IDX_0_VAL_irq 50
#define DT_N_S_soc_S_flash_controller_50030000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_flash_controller_50030000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_flash_controller_50030000_IRQ_LEVEL 1
#define DT_N_S_soc_S_flash_controller_50030000_COMPAT_MATCHES_silabs_gecko_flash_controller 1
#define DT_N_S_soc_S_flash_controller_50030000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_flash_controller_50030000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_COMPAT_MODEL_IDX_0 "gecko-flash-controller"
#define DT_N_S_soc_S_flash_controller_50030000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_50030000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_50030000_P_reg {1342373888 /* 0x50030000 */, 12616 /* 0x3148 */}
#define DT_N_S_soc_S_flash_controller_50030000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_P_reg_IDX_0 1342373888
#define DT_N_S_soc_S_flash_controller_50030000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_P_reg_IDX_1 12616
#define DT_N_S_soc_S_flash_controller_50030000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible {"silabs,gecko-flash-controller"}
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_IDX_0 "silabs,gecko-flash-controller"
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-flash-controller
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_flash_controller
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_FLASH_CONTROLLER
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_50030000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_50030000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_P_interrupts {50 /* 0x32 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_flash_controller_50030000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_P_interrupts_IDX_0 50
#define DT_N_S_soc_S_flash_controller_50030000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_flash_controller_50030000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_50030000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_50030000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_50030000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@50030000/flash@8000000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000
 *
 * Binding (compatible = soc-nv-flash):
 *   $ZEPHYR_BASE/dts/bindings/mtd/soc-nv-flash.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_PATH "/soc/flash-controller@50030000/flash@8000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FULL_NAME "flash@8000000"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FULL_NAME_UNQUOTED flash@8000000
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FULL_NAME_TOKEN flash_8000000
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FULL_NAME_UPPER_TOKEN FLASH_8000000

/* Node parent (/soc/flash-controller@50030000) identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_PARENT DT_N_S_soc_S_flash_controller_50030000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_NODELABEL(fn) fn(flash0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(flash0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_CHILD_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_ORD 68
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_ORD_STR_SORTABLE 00068

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_REQUIRES_ORDS \
	67, /* /soc/flash-controller@50030000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_SUPPORTS_ORDS \
	69, /* /soc/flash-controller@50030000/flash@8000000/partitions */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_EXISTS 1
#define DT_N_INST_0_soc_nv_flash DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000
#define DT_N_NODELABEL_flash0    DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_REG_IDX_0_VAL_ADDRESS 134217728 /* 0x8000000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_REG_IDX_0_VAL_SIZE 1572864 /* 0x180000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_COMPAT_MATCHES_soc_nv_flash 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_erase_block_size 8192
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_erase_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_write_block_size 4
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_write_block_size_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible {"soc-nv-flash"}
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_IDX_0 "soc-nv-flash"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_IDX_0_STRING_UNQUOTED soc-nv-flash
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_IDX_0_STRING_TOKEN soc_nv_flash
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_IDX_0_STRING_UPPER_TOKEN SOC_NV_FLASH
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, compatible, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_LEN 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_reg {134217728 /* 0x8000000 */, 1572864 /* 0x180000 */}
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_reg_IDX_0 134217728
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_reg_IDX_1 1572864
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_wakeup_source 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@50030000/flash@8000000/partitions
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions
 *
 * Binding (compatible = fixed-partitions):
 *   $ZEPHYR_BASE/dts/bindings/mtd/fixed-partitions.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_PATH "/soc/flash-controller@50030000/flash@8000000/partitions"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FULL_NAME "partitions"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FULL_NAME_UNQUOTED partitions
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FULL_NAME_TOKEN partitions
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FULL_NAME_UPPER_TOKEN PARTITIONS

/* Node parent (/soc/flash-controller@50030000/flash@8000000) identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_PARENT DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_NODELABEL_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_CHILD_NUM 5
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_CHILD_NUM_STATUS_OKAY 5
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_ORD 69
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_ORD_STR_SORTABLE 00069

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_REQUIRES_ORDS \
	68, /* /soc/flash-controller@50030000/flash@8000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_SUPPORTS_ORDS \
	70, /* /soc/flash-controller@50030000/flash@8000000/partitions/partition@0 */ \
	71, /* /soc/flash-controller@50030000/flash@8000000/partitions/partition@c000 */ \
	72, /* /soc/flash-controller@50030000/flash@8000000/partitions/partition@C0000 */ \
	73, /* /soc/flash-controller@50030000/flash@8000000/partitions/partition@174000 */ \
	74, /* /soc/flash-controller@50030000/flash@8000000/partitions/partition@17c000 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_EXISTS 1
#define DT_N_INST_0_fixed_partitions DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_REG_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_COMPAT_MATCHES_fixed_partitions 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/flash-controller@50030000/flash@8000000/partitions/partition@0
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_PATH "/soc/flash-controller@50030000/flash@8000000/partitions/partition@0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME "partition@0"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME_UNQUOTED partition@0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME_TOKEN partition_0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FULL_NAME_UPPER_TOKEN PARTITION_0

/* Node parent (/soc/flash-controller@50030000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_PARENT DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_NODELABEL(fn) fn(boot_partition)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_NODELABEL_VARGS(fn, ...) fn(boot_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_ORD 70
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_ORD_STR_SORTABLE 00070

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_REQUIRES_ORDS \
	69, /* /soc/flash-controller@50030000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_EXISTS 1
#define DT_N_NODELABEL_boot_partition DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_ADDRESS 0 /* 0x0 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_REG_IDX_0_VAL_SIZE 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_PARTITION_ID 0

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label "mcuboot"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_UNQUOTED mcuboot
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_TOKEN mcuboot
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_STRING_UPPER_TOKEN MCUBOOT
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_IDX_0 "mcuboot"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0, label, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_read_only 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_reg {0 /* 0x0 */, 49152 /* 0xc000 */}
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_0 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_reg_IDX_1 49152
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@50030000/flash@8000000/partitions/partition@c000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_PATH "/soc/flash-controller@50030000/flash@8000000/partitions/partition@c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FULL_NAME "partition@c000"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FULL_NAME_UNQUOTED partition@c000
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FULL_NAME_TOKEN partition_c000
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FULL_NAME_UPPER_TOKEN PARTITION_C000

/* Node parent (/soc/flash-controller@50030000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_PARENT DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_NODELABEL(fn) fn(slot0_partition)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot0_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_ORD 71
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_ORD_STR_SORTABLE 00071

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_REQUIRES_ORDS \
	69, /* /soc/flash-controller@50030000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_EXISTS 1
#define DT_N_NODELABEL_slot0_partition DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_REG_IDX_0_VAL_ADDRESS 49152 /* 0xc000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_REG_IDX_0_VAL_SIZE 737280 /* 0xb4000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_PARTITION_ID 1

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label "image-0"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_STRING_UNQUOTED image-0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_STRING_TOKEN image_0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_STRING_UPPER_TOKEN IMAGE_0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_IDX_0 "image-0"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000, label, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000, label, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_reg {49152 /* 0xc000 */, 737280 /* 0xb4000 */}
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_IDX_0 49152
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_IDX_1 737280
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@50030000/flash@8000000/partitions/partition@C0000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_PATH "/soc/flash-controller@50030000/flash@8000000/partitions/partition@C0000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FULL_NAME "partition@C0000"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FULL_NAME_UNQUOTED partition@C0000
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FULL_NAME_TOKEN partition_C0000
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FULL_NAME_UPPER_TOKEN PARTITION_C0000

/* Node parent (/soc/flash-controller@50030000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_PARENT DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_NODELABEL(fn) fn(slot1_partition)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_NODELABEL_VARGS(fn, ...) fn(slot1_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_ORD 72
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_ORD_STR_SORTABLE 00072

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_REQUIRES_ORDS \
	69, /* /soc/flash-controller@50030000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_EXISTS 1
#define DT_N_NODELABEL_slot1_partition DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_REG_IDX_0_VAL_ADDRESS 786432 /* 0xc0000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_REG_IDX_0_VAL_SIZE 737280 /* 0xb4000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_PARTITION_ID 2

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label "image-1"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_STRING_UNQUOTED image-1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_STRING_TOKEN image_1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_STRING_UPPER_TOKEN IMAGE_1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_IDX_0 "image-1"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000, label, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000, label, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg {786432 /* 0xc0000 */, 737280 /* 0xb4000 */}
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_IDX_0 786432
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_IDX_1 737280
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@50030000/flash@8000000/partitions/partition@174000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_PATH "/soc/flash-controller@50030000/flash@8000000/partitions/partition@174000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FULL_NAME "partition@174000"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FULL_NAME_UNQUOTED partition@174000
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FULL_NAME_TOKEN partition_174000
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FULL_NAME_UPPER_TOKEN PARTITION_174000

/* Node parent (/soc/flash-controller@50030000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_PARENT DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_NODELABEL(fn) fn(scratch_partition)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_NODELABEL_VARGS(fn, ...) fn(scratch_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_ORD 73
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_ORD_STR_SORTABLE 00073

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_REQUIRES_ORDS \
	69, /* /soc/flash-controller@50030000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_EXISTS 1
#define DT_N_NODELABEL_scratch_partition DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_REG_IDX_0_VAL_ADDRESS 1523712 /* 0x174000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_REG_IDX_0_VAL_SIZE 32768 /* 0x8000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_PARTITION_ID 3

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label "image-scratch"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_STRING_UNQUOTED image-scratch
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_STRING_TOKEN image_scratch
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_STRING_UPPER_TOKEN IMAGE_SCRATCH
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_IDX_0 "image-scratch"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000, label, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000, label, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_reg {1523712 /* 0x174000 */, 32768 /* 0x8000 */}
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_reg_IDX_0 1523712
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_reg_IDX_1 32768
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/flash-controller@50030000/flash@8000000/partitions/partition@17c000
 *
 * Node identifier: DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_PATH "/soc/flash-controller@50030000/flash@8000000/partitions/partition@17c000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FULL_NAME "partition@17c000"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FULL_NAME_UNQUOTED partition@17c000
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FULL_NAME_TOKEN partition_17c000
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FULL_NAME_UPPER_TOKEN PARTITION_17C000

/* Node parent (/soc/flash-controller@50030000/flash@8000000/partitions) identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_PARENT DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_CHILD_IDX 4

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_NODELABEL_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_NODELABEL(fn) fn(storage_partition)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_NODELABEL_VARGS(fn, ...) fn(storage_partition, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_CHILD_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_ORD 74
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_ORD_STR_SORTABLE 00074

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_REQUIRES_ORDS \
	69, /* /soc/flash-controller@50030000/flash@8000000/partitions */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_EXISTS 1
#define DT_N_NODELABEL_storage_partition DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_REG_NUM 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_REG_IDX_0_VAL_ADDRESS 1556480 /* 0x17c000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_REG_IDX_0_VAL_SIZE 16384 /* 0x4000 */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_RANGES_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_IRQ_NUM 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_IRQ_LEVEL 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_PINCTRL_NUM 0

/* fixed-partitions identifier: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_PARTITION_ID 4

/* Generic property macros: */
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label "storage"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_STRING_UNQUOTED storage
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_STRING_TOKEN storage
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_STRING_UPPER_TOKEN STORAGE
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_IDX_0 "storage"
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000, label, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000, label, 0)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000, label, 0, __VA_ARGS__)
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_LEN 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_label_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_read_only 0
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_read_only_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_reg {1556480 /* 0x17c000 */, 16384 /* 0x4000 */}
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_reg_IDX_0 1556480
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_reg_IDX_1 16384
#define DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000_P_reg_EXISTS 1

/*
 * Devicetree node: /soc/gpio@5003c000/gpio@5003c090
 *
 * Node identifier: DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090
 *
 * Binding (compatible = silabs,gecko-gpio-port):
 *   $ZEPHYR_BASE/dts/bindings/gpio/silabs,gecko-gpio-port.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_PATH "/soc/gpio@5003c000/gpio@5003c090"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FULL_NAME "gpio@5003c090"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FULL_NAME_UNQUOTED gpio@5003c090
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FULL_NAME_TOKEN gpio_5003c090
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FULL_NAME_UPPER_TOKEN GPIO_5003C090

/* Node parent (/soc/gpio@5003c000) identifier: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_PARENT DT_N_S_soc_S_gpio_5003c000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_NODELABEL(fn) fn(gpioc)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpioc, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_gpio_5003c000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_ORD 75
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_ORD_STR_SORTABLE 00075

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_REQUIRES_ORDS \
	9, /* /soc/gpio@5003c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_EXISTS 1
#define DT_N_INST_2_silabs_gecko_gpio_port DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090
#define DT_N_NODELABEL_gpioc               DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_REG_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_REG_IDX_0_VAL_ADDRESS 1342423184 /* 0x5003c090 */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_REG_IDX_0_VAL_SIZE 48 /* 0x30 */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_COMPAT_MATCHES_silabs_gecko_gpio_port 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_COMPAT_MODEL_IDX_0 "gecko-gpio-port"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_reg {1342423184 /* 0x5003c090 */, 48 /* 0x30 */}
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_reg_IDX_0 1342423184
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_reg_IDX_1 48
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_peripheral_id 2
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_peripheral_id_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_ngpios 32
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status "okay"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, status, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, status, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible {"silabs,gecko-gpio-port"}
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_IDX_0 "silabs,gecko-gpio-port"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-gpio-port
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_gpio_port
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_GPIO_PORT
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, compatible, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, compatible, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@5003c000/gpio@5003c0C0
 *
 * Node identifier: DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0
 *
 * Binding (compatible = silabs,gecko-gpio-port):
 *   $ZEPHYR_BASE/dts/bindings/gpio/silabs,gecko-gpio-port.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_PATH "/soc/gpio@5003c000/gpio@5003c0C0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FULL_NAME "gpio@5003c0C0"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FULL_NAME_UNQUOTED gpio@5003c0C0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FULL_NAME_TOKEN gpio_5003c0C0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FULL_NAME_UPPER_TOKEN GPIO_5003C0C0

/* Node parent (/soc/gpio@5003c000) identifier: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_PARENT DT_N_S_soc_S_gpio_5003c000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_NODELABEL_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_NODELABEL(fn) fn(gpiod)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_NODELABEL_VARGS(fn, ...) fn(gpiod, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_gpio_5003c000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_ORD 76
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_ORD_STR_SORTABLE 00076

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_REQUIRES_ORDS \
	9, /* /soc/gpio@5003c000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_EXISTS 1
#define DT_N_INST_3_silabs_gecko_gpio_port DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0
#define DT_N_NODELABEL_gpiod               DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_REG_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_REG_IDX_0_VAL_ADDRESS 1342423232 /* 0x5003c0c0 */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_REG_IDX_0_VAL_SIZE 48 /* 0x30 */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_COMPAT_MATCHES_silabs_gecko_gpio_port 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_COMPAT_MODEL_IDX_0 "gecko-gpio-port"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_reg {1342423232 /* 0x5003c0c0 */, 48 /* 0x30 */}
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_reg_IDX_0 1342423232
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_reg_IDX_1 48
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_reg_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_peripheral_id 3
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_peripheral_id_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_gpio_controller 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_gpio_controller_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_ngpios 32
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_ngpios_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status "okay"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, status, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, status, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_status_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible {"silabs,gecko-gpio-port"}
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_IDX_0 "silabs,gecko-gpio-port"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-gpio-port
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_gpio_port
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_GPIO_PORT
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, compatible, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, compatible, 0)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_LEN 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_compatible_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_wakeup_source 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/gpio@5003c000/gpio@5003c060/board-controller-enable
 *
 * Node identifier: DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_PATH "/soc/gpio@5003c000/gpio@5003c060/board-controller-enable"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FULL_NAME "board-controller-enable"
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FULL_NAME_UNQUOTED board-controller-enable
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FULL_NAME_TOKEN board_controller_enable
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FULL_NAME_UPPER_TOKEN BOARD_CONTROLLER_ENABLE

/* Node parent (/soc/gpio@5003c000/gpio@5003c060) identifier: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_PARENT DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_NODELABEL_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060) fn(DT_N_S_soc_S_gpio_5003c000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_CHILD_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_ORD 77
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_ORD_STR_SORTABLE 00077

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_REQUIRES_ORDS \
	10, /* /soc/gpio@5003c000/gpio@5003c060 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_REG_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_RANGES_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_IRQ_NUM 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_IRQ_LEVEL 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_PINCTRL_NUM 0

/* GPIO hog properties: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_GPIO_HOGS_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_GPIO_HOGS_NUM 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_GPIO_HOGS_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_GPIO_HOGS_IDX_0_PH DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_GPIO_HOGS_IDX_0_VAL_pin 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_GPIO_HOGS_IDX_0_VAL_pin_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_GPIO_HOGS_IDX_0_VAL_flags 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_GPIO_HOGS_IDX_0_VAL_flags_EXISTS 1

/* Generic property macros: */
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpio_hog 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpio_hog_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios {0 /* 0x0 */, 0 /* 0x0 */}
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios_IDX_0_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios_IDX_0 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios_IDX_1_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios_IDX_1 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, gpios, 0) \
	fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, gpios, 1)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, gpios, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, gpios, 1)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, gpios, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, gpios, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, gpios, 1, __VA_ARGS__)
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios_LEN 2
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_gpios_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_input 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_input_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_output_low 0
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_output_low_EXISTS 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_output_high 1
#define DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@5003c440/i2c0_default
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_PATH "/soc/pin-controller@5003c440/i2c0_default"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FULL_NAME "i2c0_default"
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FULL_NAME_UNQUOTED i2c0_default
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FULL_NAME_TOKEN i2c0_default
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FULL_NAME_UPPER_TOKEN I2C0_DEFAULT

/* Node parent (/soc/pin-controller@5003c440) identifier: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_PARENT DT_N_S_soc_S_pin_controller_5003c440

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_NODELABEL(fn) fn(i2c0_default)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_default, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_CHILD_NUM 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_ORD 78
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_ORD_STR_SORTABLE 00078

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_REQUIRES_ORDS \
	62, /* /soc/pin-controller@5003c440 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_SUPPORTS_ORDS \
	79, /* /soc/i2c@5b000000 */ \
	83, /* /soc/pin-controller@5003c440/i2c0_default/group0 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_EXISTS 1
#define DT_N_NODELABEL_i2c0_default DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/i2c@5b000000
 *
 * Node identifier: DT_N_S_soc_S_i2c_5b000000
 *
 * Binding (compatible = silabs,gecko-i2c):
 *   $ZEPHYR_BASE/dts/bindings/i2c/silabs,gecko-i2c.yaml
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_5b000000_PATH "/soc/i2c@5b000000"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_5b000000_FULL_NAME "i2c@5b000000"
#define DT_N_S_soc_S_i2c_5b000000_FULL_NAME_UNQUOTED i2c@5b000000
#define DT_N_S_soc_S_i2c_5b000000_FULL_NAME_TOKEN i2c_5b000000
#define DT_N_S_soc_S_i2c_5b000000_FULL_NAME_UPPER_TOKEN I2C_5B000000

/* Node parent (/soc) identifier: */
#define DT_N_S_soc_S_i2c_5b000000_PARENT DT_N_S_soc

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_5b000000_CHILD_IDX 17

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_5b000000_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_NODELABEL(fn) fn(i2c0)
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_5b000000_CHILD_NUM 1
#define DT_N_S_soc_S_i2c_5b000000_CHILD_NUM_STATUS_OKAY 1
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_CHILD(fn) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28)
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_CHILD_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28)
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_CHILD_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_CHILD_STATUS_OKAY(fn) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28)
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28)
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, __VA_ARGS__)

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_5b000000_ORD 79
#define DT_N_S_soc_S_i2c_5b000000_ORD_STR_SORTABLE 00079

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_5b000000_REQUIRES_ORDS \
	6, /* /soc */ \
	7, /* /soc/interrupt-controller@e000e100 */ \
	8, /* /soc/clock@50008000 */ \
	78, /* /soc/pin-controller@5003c440/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_5b000000_SUPPORTS_ORDS \
	80, /* /soc/i2c@5b000000/cap1114@28 */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_5b000000_EXISTS 1
#define DT_N_INST_0_silabs_gecko_i2c DT_N_S_soc_S_i2c_5b000000
#define DT_N_NODELABEL_i2c0          DT_N_S_soc_S_i2c_5b000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_5b000000_REG_NUM 1
#define DT_N_S_soc_S_i2c_5b000000_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_REG_IDX_0_VAL_ADDRESS 1526726656 /* 0x5b000000 */
#define DT_N_S_soc_S_i2c_5b000000_REG_IDX_0_VAL_SIZE 12356 /* 0x3044 */
#define DT_N_S_soc_S_i2c_5b000000_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_5b000000_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_5b000000_IRQ_NUM 1
#define DT_N_S_soc_S_i2c_5b000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_IRQ_IDX_0_VAL_irq 27
#define DT_N_S_soc_S_i2c_5b000000_IRQ_IDX_0_VAL_irq_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_IRQ_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_IRQ_IDX_0_VAL_priority 0
#define DT_N_S_soc_S_i2c_5b000000_IRQ_IDX_0_VAL_priority_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_IRQ_IDX_0_CONTROLLER DT_N_S_soc_S_interrupt_controller_e000e100
#define DT_N_S_soc_S_i2c_5b000000_IRQ_LEVEL 1
#define DT_N_S_soc_S_i2c_5b000000_COMPAT_MATCHES_silabs_gecko_i2c 1
#define DT_N_S_soc_S_i2c_5b000000_COMPAT_VENDOR_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_COMPAT_VENDOR_IDX_0 "Silicon Laboratories"
#define DT_N_S_soc_S_i2c_5b000000_COMPAT_MODEL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_COMPAT_MODEL_IDX_0 "gecko-i2c"
#define DT_N_S_soc_S_i2c_5b000000_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_5b000000_PINCTRL_NUM 1
#define DT_N_S_soc_S_i2c_5b000000_PINCTRL_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_PINCTRL_IDX_0_TOKEN default
#define DT_N_S_soc_S_i2c_5b000000_PINCTRL_IDX_0_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_5b000000_PINCTRL_NAME_default_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_PINCTRL_NAME_default_IDX 0
#define DT_N_S_soc_S_i2c_5b000000_PINCTRL_NAME_default_IDX_0_PH DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_5b000000_P_reg {1526726656 /* 0x5b000000 */, 12356 /* 0x3044 */}
#define DT_N_S_soc_S_i2c_5b000000_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_reg_IDX_0 1526726656
#define DT_N_S_soc_S_i2c_5b000000_P_reg_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_reg_IDX_1 12356
#define DT_N_S_soc_S_i2c_5b000000_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_interrupts {27 /* 0x1b */, 0 /* 0x0 */}
#define DT_N_S_soc_S_i2c_5b000000_P_interrupts_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_interrupts_IDX_0 27
#define DT_N_S_soc_S_i2c_5b000000_P_interrupts_IDX_1_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_interrupts_IDX_1 0
#define DT_N_S_soc_S_i2c_5b000000_P_interrupts_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_0_IDX_0 DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_0_IDX_0_PH DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_0_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_0_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_5b000000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_5b000000, pinctrl_0, 0)
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_0_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_0_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_5b000000, pinctrl_0, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_0_LEN 1
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names {"default"}
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_IDX_0 "default"
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_IDX_0_STRING_UNQUOTED default
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_IDX_0_STRING_TOKEN default
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_IDX_0_STRING_UPPER_TOKEN DEFAULT
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_5b000000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_5b000000, pinctrl_names, 0)
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_5b000000, pinctrl_names, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_LEN 1
#define DT_N_S_soc_S_i2c_5b000000_P_pinctrl_names_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_clock_frequency 100000
#define DT_N_S_soc_S_i2c_5b000000_P_clock_frequency_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_sq_size 4
#define DT_N_S_soc_S_i2c_5b000000_P_sq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_cq_size 4
#define DT_N_S_soc_S_i2c_5b000000_P_cq_size_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_status "okay"
#define DT_N_S_soc_S_i2c_5b000000_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_5b000000_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_5b000000_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_5b000000_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_5b000000_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_5b000000_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_5b000000, status, 0)
#define DT_N_S_soc_S_i2c_5b000000_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_5b000000, status, 0)
#define DT_N_S_soc_S_i2c_5b000000_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_5b000000, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_P_status_LEN 1
#define DT_N_S_soc_S_i2c_5b000000_P_status_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_compatible {"silabs,gecko-i2c"}
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_IDX_0 "silabs,gecko-i2c"
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_IDX_0_STRING_UNQUOTED silabs,gecko-i2c
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_IDX_0_STRING_TOKEN silabs_gecko_i2c
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_IDX_0_STRING_UPPER_TOKEN SILABS_GECKO_I2C
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_5b000000, compatible, 0)
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_5b000000, compatible, 0)
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_5b000000, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_5b000000_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_IDX_0_PH DT_N_S_soc_S_clock_50008000
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_IDX_0_VAL_enable 14
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_IDX_0_VAL_enable_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_IDX_0_VAL_branch 4
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_IDX_0_VAL_branch_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_5b000000, clocks, 0)
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_5b000000, clocks, 0)
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_5b000000, clocks, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_LEN 1
#define DT_N_S_soc_S_i2c_5b000000_P_clocks_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_zephyr_deferred_init 0
#define DT_N_S_soc_S_i2c_5b000000_P_zephyr_deferred_init_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_wakeup_source 0
#define DT_N_S_soc_S_i2c_5b000000_P_wakeup_source_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_P_zephyr_pm_device_runtime_auto 0
#define DT_N_S_soc_S_i2c_5b000000_P_zephyr_pm_device_runtime_auto_EXISTS 1

/*
 * Devicetree node: /soc/i2c@5b000000/cap1114@28
 *
 * Node identifier: DT_N_S_soc_S_i2c_5b000000_S_cap1114_28
 */

/* Node's full path: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_PATH "/soc/i2c@5b000000/cap1114@28"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FULL_NAME "cap1114@28"
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FULL_NAME_UNQUOTED cap1114@28
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FULL_NAME_TOKEN cap1114_28
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FULL_NAME_UPPER_TOKEN CAP1114_28

/* Node parent (/soc/i2c@5b000000) identifier: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_PARENT DT_N_S_soc_S_i2c_5b000000

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_NODELABEL_NUM 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_NODELABEL(fn) fn(capsense2)
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_NODELABEL_VARGS(fn, ...) fn(capsense2, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_i2c_5b000000) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_CHILD_NUM 0
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_ORD 80
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_ORD_STR_SORTABLE 00080

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_REQUIRES_ORDS \
	79, /* /soc/i2c@5b000000 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_EXISTS 1
#define DT_N_INST_0_capsense2_cap1114 DT_N_S_soc_S_i2c_5b000000_S_cap1114_28
#define DT_N_NODELABEL_capsense2      DT_N_S_soc_S_i2c_5b000000_S_cap1114_28

/* Bus info (controller: '/soc/i2c@5b000000', type: '['i2c']') */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_BUS_i2c 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_BUS DT_N_S_soc_S_i2c_5b000000

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_REG_NUM 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_REG_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_REG_IDX_0_VAL_ADDRESS 40 /* 0x28 */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_RANGES_NUM 0
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_IRQ_NUM 0
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_IRQ_LEVEL 0
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_COMPAT_MATCHES_capsense2_cap1114 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible {"capsense2,cap1114"}
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_IDX_0 "capsense2,cap1114"
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_IDX_0_STRING_UNQUOTED capsense2,cap1114
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_IDX_0_STRING_TOKEN capsense2_cap1114
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_IDX_0_STRING_UPPER_TOKEN CAPSENSE2_CAP1114
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, compatible, 0)
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, compatible, 0)
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, compatible, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_LEN 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_compatible_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_reg {40 /* 0x28 */}
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_reg_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_reg_IDX_0 40
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_reg_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status "okay"
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_STRING_UNQUOTED okay
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_STRING_TOKEN okay
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_STRING_UPPER_TOKEN OKAY
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_IDX_0 "okay"
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_IDX_0_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_IDX_0_ENUM_IDX 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_IDX_0_ENUM_VAL_okay_EXISTS 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, status, 0)
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, status, 0)
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, status, 0, __VA_ARGS__)
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_LEN 1
#define DT_N_S_soc_S_i2c_5b000000_S_cap1114_28_P_status_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@5003c440/i2c0_scl_pin
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_PATH "/soc/pin-controller@5003c440/i2c0_scl_pin"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FULL_NAME "i2c0_scl_pin"
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FULL_NAME_UNQUOTED i2c0_scl_pin
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FULL_NAME_TOKEN i2c0_scl_pin
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FULL_NAME_UPPER_TOKEN I2C0_SCL_PIN

/* Node parent (/soc/pin-controller@5003c440) identifier: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_PARENT DT_N_S_soc_S_pin_controller_5003c440

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_CHILD_IDX 2

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_NODELABEL(fn) fn(i2c0_scl_pin)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_scl_pin, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_ORD 81
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_ORD_STR_SORTABLE 00081

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_REQUIRES_ORDS \
	62, /* /soc/pin-controller@5003c440 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_EXISTS 1
#define DT_N_NODELABEL_i2c0_scl_pin DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pin-controller@5003c440/i2c0_sda_pin
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_PATH "/soc/pin-controller@5003c440/i2c0_sda_pin"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FULL_NAME "i2c0_sda_pin"
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FULL_NAME_UNQUOTED i2c0_sda_pin
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FULL_NAME_TOKEN i2c0_sda_pin
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FULL_NAME_UPPER_TOKEN I2C0_SDA_PIN

/* Node parent (/soc/pin-controller@5003c440) identifier: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_PARENT DT_N_S_soc_S_pin_controller_5003c440

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_CHILD_IDX 3

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_NODELABEL_NUM 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_NODELABEL(fn) fn(i2c0_sda_pin)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_NODELABEL_VARGS(fn, ...) fn(i2c0_sda_pin, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_ORD 82
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_ORD_STR_SORTABLE 00082

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_REQUIRES_ORDS \
	62, /* /soc/pin-controller@5003c440 */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_EXISTS 1
#define DT_N_NODELABEL_i2c0_sda_pin DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin_PINCTRL_NUM 0

/* (No generic property macros) */

/*
 * Devicetree node: /soc/pin-controller@5003c440/i2c0_default/group0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_PATH "/soc/pin-controller@5003c440/i2c0_default/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FULL_NAME "group0"
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FULL_NAME_UNQUOTED group0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FULL_NAME_TOKEN group0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FULL_NAME_UPPER_TOKEN GROUP0

/* Node parent (/soc/pin-controller@5003c440/i2c0_default) identifier: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_PARENT DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_NODELABEL_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_ORD 83
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_ORD_STR_SORTABLE 00083

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_REQUIRES_ORDS \
	78, /* /soc/pin-controller@5003c440/i2c0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins {17050177 /* 0x1042a41 */, 34351697 /* 0x20c2a51 */}
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins_IDX_0 17050177
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins_IDX_1_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins_IDX_1 34351697
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, pins, 0) \
	fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, pins, 1)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, pins, 0) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, pins, 1)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, pins, 0, __VA_ARGS__) \
	fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, pins, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, pins, 0, __VA_ARGS__) DT_DEBRACKET_INTERNAL sep \
	fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, pins, 1, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins_LEN 2
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_pins_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_silabs_input_filter 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_silabs_input_filter_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_silabs_alternate_port_control 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_silabs_alternate_port_control_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_bias_pull_up 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_drive_open_drain 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_drive_open_source 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_input_disable 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_input_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_output_high 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@5003c440/usart0_default/group0
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_PATH "/soc/pin-controller@5003c440/usart0_default/group0"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FULL_NAME "group0"
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FULL_NAME_UNQUOTED group0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FULL_NAME_TOKEN group0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FULL_NAME_UPPER_TOKEN GROUP0

/* Node parent (/soc/pin-controller@5003c440/usart0_default) identifier: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_PARENT DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_CHILD_IDX 0

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_NODELABEL_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_ORD 84
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_ORD_STR_SORTABLE 00084

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_REQUIRES_ORDS \
	63, /* /soc/pin-controller@5003c440/usart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_pins {103069776 /* 0x624b850 */}
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_pins_IDX_0 103069776
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0, pins, 0)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0, pins, 0)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0, pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0, pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_pins_LEN 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_pins_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_silabs_input_filter 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_silabs_input_filter_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_silabs_alternate_port_control 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_silabs_alternate_port_control_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_drive_push_pull 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_drive_open_source 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_input_enable 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_input_disable 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_input_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_output_low 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_output_high 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0_P_output_high_EXISTS 1

/*
 * Devicetree node: /soc/pin-controller@5003c440/usart0_default/group1
 *
 * Node identifier: DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1
 *
 * (Descriptions have moved to the Devicetree Bindings Index
 * in the documentation.)
 */

/* Node's full path: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_PATH "/soc/pin-controller@5003c440/usart0_default/group1"

/* Node's name with unit-address: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FULL_NAME "group1"
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FULL_NAME_UNQUOTED group1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FULL_NAME_TOKEN group1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FULL_NAME_UPPER_TOKEN GROUP1

/* Node parent (/soc/pin-controller@5003c440/usart0_default) identifier: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_PARENT DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default

/* Node's index in its parent's list of children: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_CHILD_IDX 1

/* Helpers for dealing with node labels: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_NODELABEL_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_NODELABEL(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_NODELABEL_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_ANCESTOR(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc) fn(DT_N)

/* Helper macros for child nodes of this node. */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_CHILD_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_CHILD_NUM_STATUS_OKAY 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_CHILD(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_CHILD_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_CHILD_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_CHILD_SEP_VARGS(fn, sep, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP(fn, sep) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_VARGS(fn, ...) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_CHILD_STATUS_OKAY_SEP_VARGS(fn, sep, ...) 

/* Node's dependency ordinal: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_ORD 85
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_ORD_STR_SORTABLE 00085

/* Ordinals for what this node depends on directly: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_REQUIRES_ORDS \
	63, /* /soc/pin-controller@5003c440/usart0_default */

/* Ordinals for what depends directly on this node: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_SUPPORTS_ORDS /* nothing */

/* Existence and alternate IDs: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_EXISTS 1

/* Macros for properties that are special in the specification: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_REG_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_RANGES_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_FOREACH_RANGE(fn) 
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_IRQ_NUM 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_IRQ_LEVEL 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_STATUS_okay 1

/* Pin control (pinctrl-<i>, pinctrl-names) properties: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_PINCTRL_NUM 0

/* Generic property macros: */
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_pins {68466784 /* 0x414b860 */}
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_pins_IDX_0_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_pins_IDX_0 68466784
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_pins_FOREACH_PROP_ELEM(fn) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1, pins, 0)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_pins_FOREACH_PROP_ELEM_SEP(fn, sep) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1, pins, 0)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_pins_FOREACH_PROP_ELEM_VARGS(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1, pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_pins_FOREACH_PROP_ELEM_SEP_VARGS(fn, sep, ...) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1, pins, 0, __VA_ARGS__)
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_pins_LEN 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_pins_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_silabs_input_filter 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_silabs_input_filter_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_silabs_alternate_port_control 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_silabs_alternate_port_control_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_bias_pull_up 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_bias_pull_up_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_bias_pull_down 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_bias_pull_down_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_drive_push_pull 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_drive_push_pull_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_drive_open_drain 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_drive_open_drain_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_drive_open_source 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_drive_open_source_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_input_enable 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_input_enable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_input_disable 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_input_disable_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_output_low 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_output_low_EXISTS 1
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_output_high 0
#define DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1_P_output_high_EXISTS 1

/*
 * Chosen nodes
 */
#define DT_CHOSEN_zephyr_flash_controller        DT_N_S_soc_S_flash_controller_50030000
#define DT_CHOSEN_zephyr_flash_controller_EXISTS 1
#define DT_CHOSEN_zephyr_entropy                 DT_N_S_soc_S_semailbox_5c021000
#define DT_CHOSEN_zephyr_entropy_EXISTS          1
#define DT_CHOSEN_zephyr_console                 DT_N_S_soc_S_usart_5005c000
#define DT_CHOSEN_zephyr_console_EXISTS          1
#define DT_CHOSEN_zephyr_shell_uart              DT_N_S_soc_S_usart_5005c000
#define DT_CHOSEN_zephyr_shell_uart_EXISTS       1
#define DT_CHOSEN_zephyr_uart_pipe               DT_N_S_soc_S_usart_5005c000
#define DT_CHOSEN_zephyr_uart_pipe_EXISTS        1
#define DT_CHOSEN_zephyr_sram                    DT_N_S_memory_20000000
#define DT_CHOSEN_zephyr_sram_EXISTS             1
#define DT_CHOSEN_zephyr_flash                   DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000
#define DT_CHOSEN_zephyr_flash_EXISTS            1
#define DT_CHOSEN_zephyr_code_partition          DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000
#define DT_CHOSEN_zephyr_code_partition_EXISTS   1
#define DT_CHOSEN_zephyr_bt_hci                  DT_N_S_bt_hci_silabs
#define DT_CHOSEN_zephyr_bt_hci_EXISTS           1
#define DT_CHOSEN_zephyr_bt_c2h_uart             DT_N_S_soc_S_usart_5005c000
#define DT_CHOSEN_zephyr_bt_c2h_uart_EXISTS      1

/* Macros for iterating over all nodes and enabled nodes */
#define DT_FOREACH_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_clock_50008000) fn(DT_N_S_soc_S_fsrco_50018000) fn(DT_N_S_soc_S_hfxo_5a004000) fn(DT_N_S_soc_S_lfxo_50020000) fn(DT_N_S_soc_S_hfrcodpll_50010000) fn(DT_N_S_soc_S_hfrcoem23_5a000000) fn(DT_N_S_soc_S_lfrco_50024000) fn(DT_N_S_soc_S_ulfrco_50028000) fn(DT_N_S_soc_S_clkin0_5003c46c) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000) fn(DT_N_S_soc_S_usart_5005c000) fn(DT_N_S_soc_S_eusart_5b010000) fn(DT_N_S_soc_S_eusart_500a0000) fn(DT_N_S_soc_S_burtc_50064000) fn(DT_N_S_soc_S_semailbox_5c021000) fn(DT_N_S_soc_S_i2c_5b000000) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28) fn(DT_N_S_soc_S_sysrtc_500a8000) fn(DT_N_S_soc_S_gpio_5003c000) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin) fn(DT_N_S_soc_S_dma_40040000) fn(DT_N_S_soc_S_wdog_5b004000) fn(DT_N_S_soc_S_wdog_5b008000) fn(DT_N_S_soc_S_adc_59004000) fn(DT_N_S_soc_S_dcdc_50094000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_hfxort) fn(DT_N_S_clocks_S_hfrcodpllrt) fn(DT_N_S_clocks_S_sysclk) fn(DT_N_S_clocks_S_hclk) fn(DT_N_S_clocks_S_pclk) fn(DT_N_S_clocks_S_lspclk) fn(DT_N_S_clocks_S_hclkdiv1024) fn(DT_N_S_clocks_S_traceclk) fn(DT_N_S_clocks_S_em01grpaclk) fn(DT_N_S_clocks_S_em01grpcclk) fn(DT_N_S_clocks_S_iadcclk) fn(DT_N_S_clocks_S_em23grpaclk) fn(DT_N_S_clocks_S_em4grpaclk) fn(DT_N_S_clocks_S_sysrtcclk) fn(DT_N_S_clocks_S_wdog0clk) fn(DT_N_S_clocks_S_wdog1clk) fn(DT_N_S_clocks_S_pcnt0clk) fn(DT_N_S_clocks_S_eusart0clk) fn(DT_N_S_clocks_S_systickclk) fn(DT_N_S_clocks_S_vdac0clk) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_em1) fn(DT_N_S_cpus_S_power_states_S_em2) fn(DT_N_S_cpus_S_power_states_S_em3) fn(DT_N_S_memory_20000000) fn(DT_N_S_bt_hci_silabs) fn(DT_N_S_hwinfo) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0) fn(DT_N_S_buttons_S_button_1)
#define DT_FOREACH_OKAY_HELPER(fn) fn(DT_N) fn(DT_N_S_chosen) fn(DT_N_S_aliases) fn(DT_N_S_soc) fn(DT_N_S_soc_S_interrupt_controller_e000e100) fn(DT_N_S_soc_S_timer_e000e010) fn(DT_N_S_soc_S_clock_50008000) fn(DT_N_S_soc_S_fsrco_50018000) fn(DT_N_S_soc_S_hfxo_5a004000) fn(DT_N_S_soc_S_lfxo_50020000) fn(DT_N_S_soc_S_hfrcodpll_50010000) fn(DT_N_S_soc_S_hfrcoem23_5a000000) fn(DT_N_S_soc_S_lfrco_50024000) fn(DT_N_S_soc_S_ulfrco_50028000) fn(DT_N_S_soc_S_clkin0_5003c46c) fn(DT_N_S_soc_S_flash_controller_50030000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000) fn(DT_N_S_soc_S_usart_5005c000) fn(DT_N_S_soc_S_semailbox_5c021000) fn(DT_N_S_soc_S_i2c_5b000000) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28) fn(DT_N_S_soc_S_sysrtc_500a8000) fn(DT_N_S_soc_S_gpio_5003c000) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0) fn(DT_N_S_soc_S_pin_controller_5003c440) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin) fn(DT_N_S_soc_S_wdog_5b004000) fn(DT_N_S_soc_S_dcdc_50094000) fn(DT_N_S_clocks) fn(DT_N_S_clocks_S_hfxort) fn(DT_N_S_clocks_S_hfrcodpllrt) fn(DT_N_S_clocks_S_sysclk) fn(DT_N_S_clocks_S_hclk) fn(DT_N_S_clocks_S_pclk) fn(DT_N_S_clocks_S_lspclk) fn(DT_N_S_clocks_S_hclkdiv1024) fn(DT_N_S_clocks_S_traceclk) fn(DT_N_S_clocks_S_em01grpaclk) fn(DT_N_S_clocks_S_em01grpcclk) fn(DT_N_S_clocks_S_iadcclk) fn(DT_N_S_clocks_S_em23grpaclk) fn(DT_N_S_clocks_S_em4grpaclk) fn(DT_N_S_clocks_S_sysrtcclk) fn(DT_N_S_clocks_S_wdog0clk) fn(DT_N_S_clocks_S_wdog1clk) fn(DT_N_S_clocks_S_pcnt0clk) fn(DT_N_S_clocks_S_eusart0clk) fn(DT_N_S_clocks_S_systickclk) fn(DT_N_S_clocks_S_vdac0clk) fn(DT_N_S_cpus) fn(DT_N_S_cpus_S_cpu_0) fn(DT_N_S_cpus_S_power_states) fn(DT_N_S_cpus_S_power_states_S_em1) fn(DT_N_S_cpus_S_power_states_S_em2) fn(DT_N_S_memory_20000000) fn(DT_N_S_bt_hci_silabs) fn(DT_N_S_leds) fn(DT_N_S_leds_S_led_0) fn(DT_N_S_leds_S_led_1) fn(DT_N_S_buttons) fn(DT_N_S_buttons_S_button_0) fn(DT_N_S_buttons_S_button_1)
#define DT_FOREACH_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_clock_50008000, __VA_ARGS__) fn(DT_N_S_soc_S_fsrco_50018000, __VA_ARGS__) fn(DT_N_S_soc_S_hfxo_5a004000, __VA_ARGS__) fn(DT_N_S_soc_S_lfxo_50020000, __VA_ARGS__) fn(DT_N_S_soc_S_hfrcodpll_50010000, __VA_ARGS__) fn(DT_N_S_soc_S_hfrcoem23_5a000000, __VA_ARGS__) fn(DT_N_S_soc_S_lfrco_50024000, __VA_ARGS__) fn(DT_N_S_soc_S_ulfrco_50028000, __VA_ARGS__) fn(DT_N_S_soc_S_clkin0_5003c46c, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_5005c000, __VA_ARGS__) fn(DT_N_S_soc_S_eusart_5b010000, __VA_ARGS__) fn(DT_N_S_soc_S_eusart_500a0000, __VA_ARGS__) fn(DT_N_S_soc_S_burtc_50064000, __VA_ARGS__) fn(DT_N_S_soc_S_semailbox_5c021000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_5b000000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, __VA_ARGS__) fn(DT_N_S_soc_S_sysrtc_500a8000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin, __VA_ARGS__) fn(DT_N_S_soc_S_dma_40040000, __VA_ARGS__) fn(DT_N_S_soc_S_wdog_5b004000, __VA_ARGS__) fn(DT_N_S_soc_S_wdog_5b008000, __VA_ARGS__) fn(DT_N_S_soc_S_adc_59004000, __VA_ARGS__) fn(DT_N_S_soc_S_dcdc_50094000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_hfxort, __VA_ARGS__) fn(DT_N_S_clocks_S_hfrcodpllrt, __VA_ARGS__) fn(DT_N_S_clocks_S_sysclk, __VA_ARGS__) fn(DT_N_S_clocks_S_hclk, __VA_ARGS__) fn(DT_N_S_clocks_S_pclk, __VA_ARGS__) fn(DT_N_S_clocks_S_lspclk, __VA_ARGS__) fn(DT_N_S_clocks_S_hclkdiv1024, __VA_ARGS__) fn(DT_N_S_clocks_S_traceclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em01grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em01grpcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_iadcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em23grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em4grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_sysrtcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_wdog0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_wdog1clk, __VA_ARGS__) fn(DT_N_S_clocks_S_pcnt0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_eusart0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_systickclk, __VA_ARGS__) fn(DT_N_S_clocks_S_vdac0clk, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_em1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_em2, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_em3, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_bt_hci_silabs, __VA_ARGS__) fn(DT_N_S_hwinfo, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) fn(DT_N_S_buttons_S_button_1, __VA_ARGS__)
#define DT_FOREACH_OKAY_VARGS_HELPER(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_chosen, __VA_ARGS__) fn(DT_N_S_aliases, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__) fn(DT_N_S_soc_S_clock_50008000, __VA_ARGS__) fn(DT_N_S_soc_S_fsrco_50018000, __VA_ARGS__) fn(DT_N_S_soc_S_hfxo_5a004000, __VA_ARGS__) fn(DT_N_S_soc_S_lfxo_50020000, __VA_ARGS__) fn(DT_N_S_soc_S_hfrcodpll_50010000, __VA_ARGS__) fn(DT_N_S_soc_S_hfrcoem23_5a000000, __VA_ARGS__) fn(DT_N_S_soc_S_lfrco_50024000, __VA_ARGS__) fn(DT_N_S_soc_S_ulfrco_50028000, __VA_ARGS__) fn(DT_N_S_soc_S_clkin0_5003c46c, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000, __VA_ARGS__) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000, __VA_ARGS__) fn(DT_N_S_soc_S_usart_5005c000, __VA_ARGS__) fn(DT_N_S_soc_S_semailbox_5c021000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_5b000000, __VA_ARGS__) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, __VA_ARGS__) fn(DT_N_S_soc_S_sysrtc_500a8000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060_S_board_controller_enable, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_usart0_default_S_group1, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_default_S_group0, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_scl_pin, __VA_ARGS__) fn(DT_N_S_soc_S_pin_controller_5003c440_S_i2c0_sda_pin, __VA_ARGS__) fn(DT_N_S_soc_S_wdog_5b004000, __VA_ARGS__) fn(DT_N_S_soc_S_dcdc_50094000, __VA_ARGS__) fn(DT_N_S_clocks, __VA_ARGS__) fn(DT_N_S_clocks_S_hfxort, __VA_ARGS__) fn(DT_N_S_clocks_S_hfrcodpllrt, __VA_ARGS__) fn(DT_N_S_clocks_S_sysclk, __VA_ARGS__) fn(DT_N_S_clocks_S_hclk, __VA_ARGS__) fn(DT_N_S_clocks_S_pclk, __VA_ARGS__) fn(DT_N_S_clocks_S_lspclk, __VA_ARGS__) fn(DT_N_S_clocks_S_hclkdiv1024, __VA_ARGS__) fn(DT_N_S_clocks_S_traceclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em01grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em01grpcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_iadcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em23grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em4grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_sysrtcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_wdog0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_wdog1clk, __VA_ARGS__) fn(DT_N_S_clocks_S_pcnt0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_eusart0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_systickclk, __VA_ARGS__) fn(DT_N_S_clocks_S_vdac0clk, __VA_ARGS__) fn(DT_N_S_cpus, __VA_ARGS__) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_em1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_em2, __VA_ARGS__) fn(DT_N_S_memory_20000000, __VA_ARGS__) fn(DT_N_S_bt_hci_silabs, __VA_ARGS__) fn(DT_N_S_leds, __VA_ARGS__) fn(DT_N_S_leds_S_led_0, __VA_ARGS__) fn(DT_N_S_leds_S_led_1, __VA_ARGS__) fn(DT_N_S_buttons, __VA_ARGS__) fn(DT_N_S_buttons_S_button_0, __VA_ARGS__) fn(DT_N_S_buttons_S_button_1, __VA_ARGS__)
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_0
#define DT_COMPAT_fixed_partitions_LABEL_mcuboot_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_0 DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c000
#define DT_COMPAT_fixed_partitions_LABEL_image_0_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_1 DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_c0000
#define DT_COMPAT_fixed_partitions_LABEL_image_1_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_174000
#define DT_COMPAT_fixed_partitions_LABEL_image_scratch_EXISTS 1
#define DT_COMPAT_fixed_partitions_LABEL_storage DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions_S_partition_17c000
#define DT_COMPAT_fixed_partitions_LABEL_storage_EXISTS 1

/*
 * Macros for compatibles with status "okay" nodes
 */
#define DT_COMPAT_HAS_OKAY_silabs_xg24_rb4187c 1
#define DT_COMPAT_HAS_OKAY_silabs_efr32mg24 1
#define DT_COMPAT_HAS_OKAY_silabs_efr32mg24b220f1536im48 1
#define DT_COMPAT_HAS_OKAY_silabs_efr32 1
#define DT_COMPAT_HAS_OKAY_simple_bus 1
#define DT_COMPAT_HAS_OKAY_arm_v8m_nvic 1
#define DT_COMPAT_HAS_OKAY_arm_armv8m_systick 1
#define DT_COMPAT_HAS_OKAY_silabs_series_clock 1
#define DT_COMPAT_HAS_OKAY_fixed_clock 1
#define DT_COMPAT_HAS_OKAY_silabs_hfxo 1
#define DT_COMPAT_HAS_OKAY_silabs_series2_lfxo 1
#define DT_COMPAT_HAS_OKAY_silabs_series2_hfrcodpll 1
#define DT_COMPAT_HAS_OKAY_silabs_series2_hfrcoem23 1
#define DT_COMPAT_HAS_OKAY_silabs_series2_lfrco 1
#define DT_COMPAT_HAS_OKAY_silabs_gecko_flash_controller 1
#define DT_COMPAT_HAS_OKAY_soc_nv_flash 1
#define DT_COMPAT_HAS_OKAY_fixed_partitions 1
#define DT_COMPAT_HAS_OKAY_silabs_gecko_usart 1
#define DT_COMPAT_HAS_OKAY_silabs_gecko_semailbox 1
#define DT_COMPAT_HAS_OKAY_silabs_gecko_i2c 1
#define DT_COMPAT_HAS_OKAY_capsense2_cap1114 1
#define DT_COMPAT_HAS_OKAY_silabs_gecko_stimer 1
#define DT_COMPAT_HAS_OKAY_silabs_gecko_gpio 1
#define DT_COMPAT_HAS_OKAY_silabs_gecko_gpio_port 1
#define DT_COMPAT_HAS_OKAY_silabs_dbus_pinctrl 1
#define DT_COMPAT_HAS_OKAY_silabs_gecko_wdog 1
#define DT_COMPAT_HAS_OKAY_silabs_series2_dcdc 1
#define DT_COMPAT_HAS_OKAY_fixed_factor_clock 1
#define DT_COMPAT_HAS_OKAY_arm_cortex_m33 1
#define DT_COMPAT_HAS_OKAY_zephyr_power_state 1
#define DT_COMPAT_HAS_OKAY_mmio_sram 1
#define DT_COMPAT_HAS_OKAY_silabs_bt_hci_efr32 1
#define DT_COMPAT_HAS_OKAY_gpio_leds 1
#define DT_COMPAT_HAS_OKAY_gpio_keys 1

/*
 * Macros for status "okay" instances of each compatible
 */
#define DT_N_INST_silabs_xg24_rb4187c_NUM_OKAY 1
#define DT_N_INST_silabs_efr32mg24_NUM_OKAY 2
#define DT_N_INST_silabs_efr32mg24b220f1536im48_NUM_OKAY 1
#define DT_N_INST_silabs_efr32_NUM_OKAY 1
#define DT_N_INST_simple_bus_NUM_OKAY 1
#define DT_N_INST_arm_v8m_nvic_NUM_OKAY 1
#define DT_N_INST_arm_armv8m_systick_NUM_OKAY 1
#define DT_N_INST_silabs_series_clock_NUM_OKAY 1
#define DT_N_INST_fixed_clock_NUM_OKAY 3
#define DT_N_INST_silabs_hfxo_NUM_OKAY 1
#define DT_N_INST_silabs_series2_lfxo_NUM_OKAY 1
#define DT_N_INST_silabs_series2_hfrcodpll_NUM_OKAY 1
#define DT_N_INST_silabs_series2_hfrcoem23_NUM_OKAY 1
#define DT_N_INST_silabs_series2_lfrco_NUM_OKAY 1
#define DT_N_INST_silabs_gecko_flash_controller_NUM_OKAY 1
#define DT_N_INST_soc_nv_flash_NUM_OKAY 1
#define DT_N_INST_fixed_partitions_NUM_OKAY 1
#define DT_N_INST_silabs_gecko_usart_NUM_OKAY 1
#define DT_N_INST_silabs_gecko_semailbox_NUM_OKAY 1
#define DT_N_INST_silabs_gecko_i2c_NUM_OKAY 1
#define DT_N_INST_capsense2_cap1114_NUM_OKAY 1
#define DT_N_INST_silabs_gecko_stimer_NUM_OKAY 1
#define DT_N_INST_silabs_gecko_gpio_NUM_OKAY 1
#define DT_N_INST_silabs_gecko_gpio_port_NUM_OKAY 4
#define DT_N_INST_silabs_dbus_pinctrl_NUM_OKAY 1
#define DT_N_INST_silabs_gecko_wdog_NUM_OKAY 1
#define DT_N_INST_silabs_series2_dcdc_NUM_OKAY 1
#define DT_N_INST_fixed_factor_clock_NUM_OKAY 20
#define DT_N_INST_arm_cortex_m33_NUM_OKAY 1
#define DT_N_INST_zephyr_power_state_NUM_OKAY 2
#define DT_N_INST_mmio_sram_NUM_OKAY 1
#define DT_N_INST_silabs_bt_hci_efr32_NUM_OKAY 1
#define DT_N_INST_gpio_leds_NUM_OKAY 1
#define DT_N_INST_gpio_keys_NUM_OKAY 1
#define DT_FOREACH_OKAY_silabs_xg24_rb4187c(fn) fn(DT_N)
#define DT_FOREACH_OKAY_VARGS_silabs_xg24_rb4187c(fn, ...) fn(DT_N, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_xg24_rb4187c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_xg24_rb4187c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_efr32mg24(fn) fn(DT_N) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_silabs_efr32mg24(fn, ...) fn(DT_N, __VA_ARGS__) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_efr32mg24(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_efr32mg24(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_efr32mg24b220f1536im48(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_silabs_efr32mg24b220f1536im48(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_efr32mg24b220f1536im48(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_efr32mg24b220f1536im48(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_efr32(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_silabs_efr32(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_efr32(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_efr32(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_simple_bus(fn) fn(DT_N_S_soc)
#define DT_FOREACH_OKAY_VARGS_simple_bus(fn, ...) fn(DT_N_S_soc, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_simple_bus(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_simple_bus(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_v8m_nvic(fn) fn(DT_N_S_soc_S_interrupt_controller_e000e100)
#define DT_FOREACH_OKAY_VARGS_arm_v8m_nvic(fn, ...) fn(DT_N_S_soc_S_interrupt_controller_e000e100, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_v8m_nvic(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_v8m_nvic(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_armv8m_systick(fn) fn(DT_N_S_soc_S_timer_e000e010)
#define DT_FOREACH_OKAY_VARGS_arm_armv8m_systick(fn, ...) fn(DT_N_S_soc_S_timer_e000e010, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_armv8m_systick(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_armv8m_systick(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_series_clock(fn) fn(DT_N_S_soc_S_clock_50008000)
#define DT_FOREACH_OKAY_VARGS_silabs_series_clock(fn, ...) fn(DT_N_S_soc_S_clock_50008000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_series_clock(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_series_clock(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_clock(fn) fn(DT_N_S_soc_S_fsrco_50018000) fn(DT_N_S_soc_S_ulfrco_50028000) fn(DT_N_S_soc_S_clkin0_5003c46c)
#define DT_FOREACH_OKAY_VARGS_fixed_clock(fn, ...) fn(DT_N_S_soc_S_fsrco_50018000, __VA_ARGS__) fn(DT_N_S_soc_S_ulfrco_50028000, __VA_ARGS__) fn(DT_N_S_soc_S_clkin0_5003c46c, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_clock(fn) fn(0) fn(1) fn(2)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_hfxo(fn) fn(DT_N_S_soc_S_hfxo_5a004000)
#define DT_FOREACH_OKAY_VARGS_silabs_hfxo(fn, ...) fn(DT_N_S_soc_S_hfxo_5a004000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_hfxo(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_hfxo(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_series2_lfxo(fn) fn(DT_N_S_soc_S_lfxo_50020000)
#define DT_FOREACH_OKAY_VARGS_silabs_series2_lfxo(fn, ...) fn(DT_N_S_soc_S_lfxo_50020000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_series2_lfxo(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_series2_lfxo(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_series2_hfrcodpll(fn) fn(DT_N_S_soc_S_hfrcodpll_50010000)
#define DT_FOREACH_OKAY_VARGS_silabs_series2_hfrcodpll(fn, ...) fn(DT_N_S_soc_S_hfrcodpll_50010000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_series2_hfrcodpll(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_series2_hfrcodpll(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_series2_hfrcoem23(fn) fn(DT_N_S_soc_S_hfrcoem23_5a000000)
#define DT_FOREACH_OKAY_VARGS_silabs_series2_hfrcoem23(fn, ...) fn(DT_N_S_soc_S_hfrcoem23_5a000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_series2_hfrcoem23(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_series2_hfrcoem23(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_series2_lfrco(fn) fn(DT_N_S_soc_S_lfrco_50024000)
#define DT_FOREACH_OKAY_VARGS_silabs_series2_lfrco(fn, ...) fn(DT_N_S_soc_S_lfrco_50024000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_series2_lfrco(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_series2_lfrco(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_gecko_flash_controller(fn) fn(DT_N_S_soc_S_flash_controller_50030000)
#define DT_FOREACH_OKAY_VARGS_silabs_gecko_flash_controller(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_gecko_flash_controller(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_gecko_flash_controller(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_soc_nv_flash(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000)
#define DT_FOREACH_OKAY_VARGS_soc_nv_flash(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_soc_nv_flash(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_soc_nv_flash(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_partitions(fn) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions)
#define DT_FOREACH_OKAY_VARGS_fixed_partitions(fn, ...) fn(DT_N_S_soc_S_flash_controller_50030000_S_flash_8000000_S_partitions, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_partitions(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_partitions(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_gecko_usart(fn) fn(DT_N_S_soc_S_usart_5005c000)
#define DT_FOREACH_OKAY_VARGS_silabs_gecko_usart(fn, ...) fn(DT_N_S_soc_S_usart_5005c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_gecko_usart(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_gecko_usart(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_gecko_semailbox(fn) fn(DT_N_S_soc_S_semailbox_5c021000)
#define DT_FOREACH_OKAY_VARGS_silabs_gecko_semailbox(fn, ...) fn(DT_N_S_soc_S_semailbox_5c021000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_gecko_semailbox(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_gecko_semailbox(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_gecko_i2c(fn) fn(DT_N_S_soc_S_i2c_5b000000)
#define DT_FOREACH_OKAY_VARGS_silabs_gecko_i2c(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_gecko_i2c(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_gecko_i2c(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_capsense2_cap1114(fn) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28)
#define DT_FOREACH_OKAY_VARGS_capsense2_cap1114(fn, ...) fn(DT_N_S_soc_S_i2c_5b000000_S_cap1114_28, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_capsense2_cap1114(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_capsense2_cap1114(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_gecko_stimer(fn) fn(DT_N_S_soc_S_sysrtc_500a8000)
#define DT_FOREACH_OKAY_VARGS_silabs_gecko_stimer(fn, ...) fn(DT_N_S_soc_S_sysrtc_500a8000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_gecko_stimer(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_gecko_stimer(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_gecko_gpio(fn) fn(DT_N_S_soc_S_gpio_5003c000)
#define DT_FOREACH_OKAY_VARGS_silabs_gecko_gpio(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_gecko_gpio(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_gecko_gpio(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_gecko_gpio_port(fn) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0)
#define DT_FOREACH_OKAY_VARGS_silabs_gecko_gpio_port(fn, ...) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c030, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c060, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c090, __VA_ARGS__) fn(DT_N_S_soc_S_gpio_5003c000_S_gpio_5003c0c0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_gecko_gpio_port(fn) fn(0) fn(1) fn(2) fn(3)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_gecko_gpio_port(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_dbus_pinctrl(fn) fn(DT_N_S_soc_S_pin_controller_5003c440)
#define DT_FOREACH_OKAY_VARGS_silabs_dbus_pinctrl(fn, ...) fn(DT_N_S_soc_S_pin_controller_5003c440, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_dbus_pinctrl(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_dbus_pinctrl(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_gecko_wdog(fn) fn(DT_N_S_soc_S_wdog_5b004000)
#define DT_FOREACH_OKAY_VARGS_silabs_gecko_wdog(fn, ...) fn(DT_N_S_soc_S_wdog_5b004000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_gecko_wdog(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_gecko_wdog(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_series2_dcdc(fn) fn(DT_N_S_soc_S_dcdc_50094000)
#define DT_FOREACH_OKAY_VARGS_silabs_series2_dcdc(fn, ...) fn(DT_N_S_soc_S_dcdc_50094000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_series2_dcdc(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_series2_dcdc(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_fixed_factor_clock(fn) fn(DT_N_S_clocks_S_hfxort) fn(DT_N_S_clocks_S_hfrcodpllrt) fn(DT_N_S_clocks_S_sysclk) fn(DT_N_S_clocks_S_hclk) fn(DT_N_S_clocks_S_pclk) fn(DT_N_S_clocks_S_lspclk) fn(DT_N_S_clocks_S_hclkdiv1024) fn(DT_N_S_clocks_S_traceclk) fn(DT_N_S_clocks_S_em01grpaclk) fn(DT_N_S_clocks_S_em01grpcclk) fn(DT_N_S_clocks_S_iadcclk) fn(DT_N_S_clocks_S_em23grpaclk) fn(DT_N_S_clocks_S_em4grpaclk) fn(DT_N_S_clocks_S_sysrtcclk) fn(DT_N_S_clocks_S_wdog0clk) fn(DT_N_S_clocks_S_wdog1clk) fn(DT_N_S_clocks_S_pcnt0clk) fn(DT_N_S_clocks_S_eusart0clk) fn(DT_N_S_clocks_S_systickclk) fn(DT_N_S_clocks_S_vdac0clk)
#define DT_FOREACH_OKAY_VARGS_fixed_factor_clock(fn, ...) fn(DT_N_S_clocks_S_hfxort, __VA_ARGS__) fn(DT_N_S_clocks_S_hfrcodpllrt, __VA_ARGS__) fn(DT_N_S_clocks_S_sysclk, __VA_ARGS__) fn(DT_N_S_clocks_S_hclk, __VA_ARGS__) fn(DT_N_S_clocks_S_pclk, __VA_ARGS__) fn(DT_N_S_clocks_S_lspclk, __VA_ARGS__) fn(DT_N_S_clocks_S_hclkdiv1024, __VA_ARGS__) fn(DT_N_S_clocks_S_traceclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em01grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em01grpcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_iadcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em23grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_em4grpaclk, __VA_ARGS__) fn(DT_N_S_clocks_S_sysrtcclk, __VA_ARGS__) fn(DT_N_S_clocks_S_wdog0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_wdog1clk, __VA_ARGS__) fn(DT_N_S_clocks_S_pcnt0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_eusart0clk, __VA_ARGS__) fn(DT_N_S_clocks_S_systickclk, __VA_ARGS__) fn(DT_N_S_clocks_S_vdac0clk, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_fixed_factor_clock(fn) fn(0) fn(1) fn(2) fn(3) fn(4) fn(5) fn(6) fn(7) fn(8) fn(9) fn(10) fn(11) fn(12) fn(13) fn(14) fn(15) fn(16) fn(17) fn(18) fn(19)
#define DT_FOREACH_OKAY_INST_VARGS_fixed_factor_clock(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__) fn(2, __VA_ARGS__) fn(3, __VA_ARGS__) fn(4, __VA_ARGS__) fn(5, __VA_ARGS__) fn(6, __VA_ARGS__) fn(7, __VA_ARGS__) fn(8, __VA_ARGS__) fn(9, __VA_ARGS__) fn(10, __VA_ARGS__) fn(11, __VA_ARGS__) fn(12, __VA_ARGS__) fn(13, __VA_ARGS__) fn(14, __VA_ARGS__) fn(15, __VA_ARGS__) fn(16, __VA_ARGS__) fn(17, __VA_ARGS__) fn(18, __VA_ARGS__) fn(19, __VA_ARGS__)
#define DT_FOREACH_OKAY_arm_cortex_m33(fn) fn(DT_N_S_cpus_S_cpu_0)
#define DT_FOREACH_OKAY_VARGS_arm_cortex_m33(fn, ...) fn(DT_N_S_cpus_S_cpu_0, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_arm_cortex_m33(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_arm_cortex_m33(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_zephyr_power_state(fn) fn(DT_N_S_cpus_S_power_states_S_em1) fn(DT_N_S_cpus_S_power_states_S_em2)
#define DT_FOREACH_OKAY_VARGS_zephyr_power_state(fn, ...) fn(DT_N_S_cpus_S_power_states_S_em1, __VA_ARGS__) fn(DT_N_S_cpus_S_power_states_S_em2, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_zephyr_power_state(fn) fn(0) fn(1)
#define DT_FOREACH_OKAY_INST_VARGS_zephyr_power_state(fn, ...) fn(0, __VA_ARGS__) fn(1, __VA_ARGS__)
#define DT_FOREACH_OKAY_mmio_sram(fn) fn(DT_N_S_memory_20000000)
#define DT_FOREACH_OKAY_VARGS_mmio_sram(fn, ...) fn(DT_N_S_memory_20000000, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_mmio_sram(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_mmio_sram(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_silabs_bt_hci_efr32(fn) fn(DT_N_S_bt_hci_silabs)
#define DT_FOREACH_OKAY_VARGS_silabs_bt_hci_efr32(fn, ...) fn(DT_N_S_bt_hci_silabs, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_silabs_bt_hci_efr32(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_silabs_bt_hci_efr32(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_leds(fn) fn(DT_N_S_leds)
#define DT_FOREACH_OKAY_VARGS_gpio_leds(fn, ...) fn(DT_N_S_leds, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_leds(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_leds(fn, ...) fn(0, __VA_ARGS__)
#define DT_FOREACH_OKAY_gpio_keys(fn) fn(DT_N_S_buttons)
#define DT_FOREACH_OKAY_VARGS_gpio_keys(fn, ...) fn(DT_N_S_buttons, __VA_ARGS__)
#define DT_FOREACH_OKAY_INST_gpio_keys(fn) fn(0)
#define DT_FOREACH_OKAY_INST_VARGS_gpio_keys(fn, ...) fn(0, __VA_ARGS__)

/*
 * Bus information for status "okay" nodes of each compatible
 */
#define DT_COMPAT_capsense2_cap1114_BUS_i2c 1
